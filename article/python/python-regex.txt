= link:python.html[Python] / Regular Expression =
:title: [Python] 用 Regex 解析字串

Python 的 standard library 提供有 `re` 這個 module 來處理 regular expression matching。

因為 Regex 自己也用 `\` 來表示跳脫, 如果要用 Ordinary String 來表示 Regex 裡的一個 '\' 的話, 就會被迫要寫成 "\\\\"


PROFILE = { name: Jeremy Kao, height: 176, weight: 65 }

<plist><key>name</key><string>Jeremy Kao</string><key>height</key><real>176</real><key>weight</key><real>65</real></plist>
<plist><key>name</key><string>Jeremy Kao</string><key>weight</key><real>65</real><key>height</key><real>176</real></plist>

>>> pattern = re.compile('(<key>name</key><string>(?P<name>[\w\s]+?)</string>|<key>height</key><real>(?P<height>[\d.]+?)</real>|<key>.*?</key><real>.*?</real>)+')

== 參考資料 ==

.線上測試 Python Regex 的工具
--
 * http://www.pythonregex.com/[Python Regex Tool]
 * http://www.regexplanet.com/advanced/python/index.html[RegexPlanet] - 可以直接列出不同 group 的內容；除了 Python 外，也支援 Java、JavaScript、PHP 等不同語言。
--

.文件
--
 * http://docs.python.org/library/re.html[re — Regular expression operations]
--
















substring, indexof..... 最好還是用 regular expression (re)

如果要重複使用 regular expression 的話，建議重複使用 `RegexObject`。

--------------------------------------------------------------------------------
>>> pattern = re.compile('^\d+$')
>>> bool(pattern.match('123'))
True
>>> bool(pattern.match('123abc'))
False
--------------------------------------------------------------------------------

別把 `re.MULTILINE` 跟 `re.DOTALL` 搞混了。

== 參考資料 ==

 * http://docs.python.org/library/re.html[re — Regular expression operations]

