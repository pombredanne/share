= DDD (Domain-Driven Design, 領域驅動設計) =
<<TableOfContents>>

== Overview ==

Over the last decade(十年) or two, a philosophy has developed as an undercurrent(暗流) in the object community. The premise(前提) of domain-driven design is two-fold(雙重):

 * For most software projects, the primary focus should be on the domain and domain logic; and
 * Complex domain designs should be based on a model.

__Domain-driven design is not a technology or a methodology. '''It is a way of thinking and a set of priorities, aimed at accelerating software projects that have to deal with complicated domains.'''__

To accomplish that goal, teams need an extensive set of design practices, techniques and principles. Refining and applying these techniques will be the subject of discussion for this site, generally starting from the language of patterns layed out in Domain-Driven Design, by Eric Evans (這個領域幾乎把這本書當成聖經了; 不可思議的是, 這本書在 2003/08 出版之後就沒再改版過了).

== Resource ==

=== Reference ===

=== Attachments ===

|| Filename || Description ||
||  ||  ||

=== Links ===

=== Search ===

== Scratch ==
