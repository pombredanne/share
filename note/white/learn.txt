= link:white.html[White] / Learning =
:title: [White] Learning

// White 的 tutorial 都舊了，最好還是從官方文件下手...

== 參考資料 ==

 * http://www.joecolantonio.com/2012/11/26/getting-started-with-white-netwpf-automation-framework/[Getting Started with WHITE .NET/WPF Automation Framework] (2012-11-26) ??

 * http://www.codeproject.com/Articles/289028/White-An-UI-Automation-tool-for-windows-applicatio[White: An UI Automation Tool for Windows Application - CodeProject] (2011-11-25) ??

 * http://www.tellingmachine.com/post/The-White-Windows-UI-automation-getting-started-tutorial-for-testers.aspx[Tellingmachine | The White Windows UI automation getting started tutorial for testers] (2010-10-07)

////////////////////////////////////////////////////////////////////////////////
* UISpy This is a tool that lets you analyze UIs that are based on WinForms and WPF. This tool shipped with a particular version of the Windows SDK. 也支援 Win32
** You don’t need to install everything. Use the web installer. Just select the Windows Development Tools and un-select the rest.
** Start Visual Studio and select New Project. The default .NET Framework 4.0 option will not work without some tweaks. Select .NET Framework 3.5 from the drop down box and click on the Console Application list item underneath. 時過境遷...
** Create a new folder called `White` in the `bin` folder of your Visual Studio project and copy the un-zipped White files into that folder.
** Now back in the Visual Studio Solution Explorer add a reference to the `White.Core.dll` to your project.
** Once you start writing and running your automated tests from Visual Studio you will most likely encounter a `NonComVisibleBaseClass` exception. You can configure the debugger to ignore this exception.
** Use  Ctrl + Mouse Click form UISpy to select and identify a WPF or Winform control. 現已改用 Inspect 了 Use the `AutomationId` or the `Name` attribute and the `SearchCriteria` pattern in White to target the identified control.
** A common way to target a control in white is to use the `SearchCriteria` object. Here is a code snippet that demonstrates this.
+
--------------------------------------------------------------------------------
var searchCriteria = SearchCriteria.ByText("...");
var openFileDialogButton = importItems.Get<Button>(searchCriteria);
openFileDialogButton.Click();
--------------------------------------------------------------------------------
+
** Ideally you would try to use a unit testing framework to drive the tests. I recommend looking into RSpec and IronRuby. 沒想到 Windows 方案也會推崇 Ruby...
////////////////////////////////////////////////////////////////////////////////

 * http://blogs.msdn.com/b/john_daddamio/archive/2008/04/04/testing-wpf-applications-with-the-white-ui-test-framework.aspx[Testing WPF applications with the White UI Test framework - John D'Addamio's blog - Site Home - MSDN Blogs] (2008-04-03) ??

 * http://blog.benhall.me.uk/2008/02/project-white-automated-ui-testing/[Project White: Automated UI Testing | Ben Hall's blog] (2008-02-12) ??

