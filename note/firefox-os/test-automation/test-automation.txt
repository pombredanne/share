= link:../firefox-os.html[Firefox OS] / Test Automation =
:title: [Firefox OS] Test Automation

== 延伸閱讀 ==

 * link:../../marionette/marionette.html[Marionette]

== 參考資料 ==

 * https://blog.mozilla.org/webqa/2013/02/07/part1-firefoxos-and-marionette/[Part 1: UI Testing on Firefox OS using Marionette; a background | Web QA] (2013-02-07)

////////////////////////////////////////////////////////////////////////////////
** While the main B2G team at Mozilla is developing Firefox OS, our support teams, Dev Tools, and the A-team are working hard to build the tools and framework to develop and test HTML5 applications.
** On the Web QA team we are using these tools to write automated tests to cover the apps that are to be delivered with Firefox OS. We’re doing this for the same reasons that we always do test automation like this; provide consistent, repeatable tests against daily builds and to spare the wear and tear on our manual testers’ fingers!
** For automated UI testing of Firefox OS, we use a tool called Marionette. This has been developed by Mozilla’s A-team to enable us to run tests against Firefox OS. Marionette allows us to control aspects of the user interface, for example clicking icons, keying in text and pressing buttons. 難得一開始就想到 test automation 的重要性
** It’s based on the W3C WebDriver specification, so if you’re familiar with Selenium and WebDriver then you’ll have no problems adapting to Marionette and Firefox OS.
** Web QA team will publish a series of blog posts explaining the differences with testing on Firefox OS. Although they are HTML5 apps, their design and structure are different and so is the OS they’re running on. 同樣是 HTML5，但執行在 Firefox OS 手機裡的測試方法就不太一樣。
** In part 2 we’ll have a look at how Firefox OS uses `<iframe>` for running apps and how we use Marionette to switch between the context of apps and the operating system. 這就是 Marionette 提到 chrome/content 內外層的關係嗎??
////////////////////////////////////////////////////////////////////////////////

