= leJOS / Official / NXJ Tutorial =
http://lejos.sourceforge.net/nxt/nxj/tutorial/index.htm
<<TableOfContents>>

雖然 leJOS 0.8 已於 2009-05-22 釋出, 但這份文件至今 (2009-06-21) 尚未更新, 還是 0.7 的內容.

== Introduction ==
http://lejos.sourceforge.net/nxt/nxj/tutorial/Preliminaries/Intro.htm @2009/12/20

=== What is leJOS NXJ ===

leJOS NXJ is a Java programming environment for the LEGO MINDSTORMS NXT. It allows you to program LEGO robots in Java.

It consists of:

 * __'''''Replacement firmware'' for the NXT that includes a Java Virtual Machine.'''__

 * A library of Java classes (`classes.jar`) that implement the leJOS NXJ Application Programming Interface (API).

 * __A ''linker'' for linking user Java classes with `classes.jar` to form a binary file that can be uploaded and run on the NXT. (這種將 Java 轉譯的做法很類似於 Android)__

 * PC tools for flashing the firmware, uploading programs, debugging, and many other functions.

 * __A PC API for writing PC programs that communicate with leJOS NXJ programs using Java streams over Bluetooth or USB, or using the ''LEGO Communications Protocol'' (LCP; 即 Lego NXT firmware 所用的通訊協定).__

 * Many sample programs

__As leJOS is a firmware replacement, the new leJOS NXJ firmware must be ''flashed onto'' the NXT, and will replace the standard LEGO MINDSTORMS firmware. This wipes out(清除) any files currently held on the LEGO firmware. The LEGO firmware can be restored using the LEGO supplied software.__

__leJOS is an open source project hosted in the sourceforge repository. It was originally created from the http://tinyvm.sourceforge.net/[TinyVM] project that implemented a Java VM for the LEGO Mindstorms RCX system. (TinyVM 已經停止開發, 作者 Jose Solorzano 在 2000 設立了 leJOS 專案做為 TinyVM 的延續)__ The RCX version of leJOS proved very popular with the LEGO Mindstorms Robotic Inventions Systems owners, and close to 200,000 downloads of all versions of leJOS have been done. The original author of TinyVM and the RCX version of leJOS was Jose Solorzano.

The NXT has given the leJOS development team the opportunity to greatly expand the capability of leJOS.

=== Advantages of leJOS NXJ ===

There are many advantages of using leJOS NXJ rather than the NXT-G or other programming environments for the NXT. These include:

 * It uses the industry-standard Java language.

 * It supports object-oriented programming.

 * It is an open source project with many contributors.

 * It allows you a choice of professional Integrated Development Environments including Eclipse and Netbeans.

 * It has plugins for both Eclipse and Netbeans.

 * It has cross platform support – Windows, Linux and Mac OS X.

 * It is much faster than NXT-G.

 * __It has full support for Bluetooth, USB, I2C and RS485 protocols.__

 * It provides highly accurate motor control.

 * It support the latest Java 1.6 language features.

 * It has advanced navigation support.

 * __It supports localization including http://en.wikipedia.org/wiki/Monte_Carlo_localization[Monte Carlo Localization] (MCL; 蒙地卡羅自我定位法).__

 * __It supports other ''probabilistic robotics'' algorithms such as http://en.wikipedia.org/wiki/Kalman_filter[Kalman filters] (卡爾曼濾波器).__

 * __'''It provides `Behavior` classes that support the ''subsumption(邏輯三段論中的小前題)'' architecture for ease of programming of complex robot behaviors.'''__

 * It supports many third party sensors.

 * __It supports remote logging to the PC over Bluetooth or USB, optionally by redirecting `System.out` and `System.err`.__

 * __It supports remote monitoring and tracing of your leJOS NXJ program from the PC.__

 * It provides floating point Math, trigonometry(三角學) and other Math functions.

 * It supports the JME LCD user Interface including many graphics functions.

 * It supports multithreading.

 * __It supports listeners and events. (相對於 NXT-G 沒有事件的概念, 寫起來方便多了!!)__

 * It supports safe memory management with garbage collection

 * It supports standard Java input/output streams over Bluetooth, USB and RS485.

 * __It has a ''flash file system'' accessed by the standard `java.io` classes.__

 * It supports data logging and remote capturing of the logs.

 * It has sound support including playing 8-bit WAV files

 * It provides dozens of sample programs.

 * __It supports remote execution of a large ''subset'' of the API from the PC. (從 PC 控制 NXT, 可以不用換掉 Lego NXT firmware?)__

 * The Web site has http://lejos.sourceforge.net/forum/[online forums] to help solve any problems you might have, to share projects ideas, and to communicate with the development team.

 * __It has telerobotics(遙控機器人) support via standard TCP/IP sockets.__

 * It supports NXT to NXT Bluetooth and RS485 communications.

 * It supports Bluetooth communication with other devices, such as GPS receivers.

 * It has support for GPS devices including support for the `javax.microedition.location` API.

 * It supports Bluetooth keyboards (跟鍵盤有什麼關係?) that use the Bluetooth Serial Port Profile (SPP).

 * It supports two-way communication with RCX via third party adapters such as the http://mindsensors.com/index.php?module=pagemaster&PAGE_user_op=view_page&PAGE_id=59[Mindsensors NRLink].

 * It supports servo motors and Power Function (PF) motors.

 * __'''It provides compatibility with Lego Communications Protocol (LCP), so that many tools that work with the standard LEGO firmware, also work with leJOS.'''__

 * It has an easy to use ''menu system''.

 * It is widely used by universities and other education establishments(團體).

 * It has support for simple ''computer vision'' applications.[?]

== Getting Started ==
http://lejos.sourceforge.net/nxt/nxj/tutorial/Preliminaries/GettingStarted.htm @2009/12/20

leJOS NXJ is currently supported on three operating systems.

Please select which operating system you are using:

 * Microsoft Windows
 * Linux
 * MAC OS X

== Getting Started / Linux ==
http://lejos.sourceforge.net/nxt/nxj/tutorial/Preliminaries/GettingStartedLinux.htm @2009/12/20

This version of the tutorial is for the 0.85 release of leJOS NXJ. (這正是目前 2009-12-20 最新的版本, 顯然 leJOS 文件撰寫的工作已經追上軟體開發的腳步; 以前適用於 Linux/Mac 的文件還沒有撰寫, 還好下載包裝裡的 `README.html` 裡有提及 Linux/Mac 下的安裝細節)

=== Prerequisites ===

==== Java Development Kit ====

You will also need a Java Development Kit (JDK) on your PC. Note that a Java Runtime Environment (JRE) is not sufficient as it does not allow you to compile Java programs. You can download the latest JDK from [[http://java.sun.com/]]. Follow the instructions for installing it. __leJOS NXJ works has been tested with JDK versions 1.5 and 1.6, but will not work with earlier versions. JDK 1.6 is recommended as some PC samples do not work with JDK 1.5. Note that leJOS has only been tested with the official Sun JDK.__

You will need to add the JDK `bin` directory to your system or user `PATH`, so that commands such as `javac` and `java` can be called from a command prompt. If you do not know how to do this, see Setting up environment variables below.

It is also a good idea to set the environment variable `JAVA_HOME` to the folder where you installed the JDK, as it is necessary if you use the ant build system.

==== libusb ====

In order to use a USB connection to your NXT brick on Linux, you will need `libusb` installed on your sysyem. __leJOS requires the ''legacy'' 0.1.12 release. (UNR 9.04 採用的正是 `libusb-0.1-4`, 但為什麼是 "legacy"?)__ On most Linux distributions the 0.1.12 version of the `libusb` package will normally be installed, but the `libusb` development package may not be.. You can get more information from http://libusb.sourceforge.net

==== Package Dependencies ====

You will need to ensure that the packages that leJOS NXJ is dependent on are on your system. To build the jlibnxt JNI library, which is used for USB access, you need the Development files for `libusb` (`libusb-devel`). Note that leJOS NXJ uses `libusb` (legacy release 0.1.12), not `libusb1`. To build the `jbluez` library, you need the Development Libraries for Bluetooth applications (`bluez-libs-devel`). `jbluez` is only needed if you use the `NXTCommBluez` comms driver instead of the default `NXTCommBluecove`. If you do not need `jbluez`, you can remove the build of it from the `build/build.xml` file. Note that package names and descriptions may differ with different Linux distributions.[?]

==== Accessing USB devices ====

If you are running leJOS NXJ from a non-root user, you will need to ensure that you have read and write access the NXT USB device in `/dev/bus/usb`. If you can identify the device in `/dev/bus/usb`, you can do this by:

 {{{
sudo chmod a+w /dev/bus/usb/xxx/yyy
 }}}

However, the `yyy` number will count up each time the NXT is disconnected and reconnected.

A better solution is to use ''udev rules''. How to do this may vary with different Linux systems.

To use udev rules, set up a file such as `/etc/udev/rules.d/70-lego.rules` and populate it with the following lines:

 {{{
# Lego NXT
BUS=="usb", SYSFS{idVendor}=="03eb", GROUP="lego", MODE="0660"
BUS=="usb", SYSFS{idVendor}=="0694", GROUP="lego", MODE="0660"
 }}}

This relies on the username you are using being in the `lego` group. You can modify the file to your requirements. The two vendors are LEGO and Atmel (for the samba driver used in firmware update mode). You may need to reload the rules or restart `udev`. On some Linux systems, the command to reload the rules is `udevadm control --reload-rules`.

==== Bluetooth ====

If you want to communicate with the NXT over Bluetooth, you will need a Linux supported Bluetooth dongle or built-in support on your PC. By default leJOS uses http://bluecove.org/[Bluecove] with is included in the distribution, but there is an option to use the Linux BlueZ API directly.

You can use leJOS NXJ without Bluetooth.

=== Downloading the software ===

You can download the leJOS NXJ software from The leJOS NXJ download page.

On Linux, leJOS is distributed as a `.tar.gz` file.

=== Installing leJOS ===

==== Unpacking the release ====

Unpack the release a directory of your choice, e.g. `/opt/lejos/`

==== Setting up environment variables ====

You need to set:

|| Variable || Value || Example ||
|| `NXJ_HOME` || The folder you installed leJOS NXJ into || `/opt/lejos` ||
|| `JAVA_HOME` || The folder where you installed the JDK || `/usr/java/` ||
|| `PATH` || Add the `bin` folders for the JDK and leJOS  || `$PATH:$JAVA_HOME/bin:$NXJ_HOME/bin` ||

Setting `JAVA_HOME` is not always necessary, but is good practice. The `bin` directory for the JDK may already be on your `PATH`.

With most Linux distributions, you can set these environment variables for the current user in `.bash_profile` or for all users in `/etc/profile`. __If you use Eclipse and the Eclipse plugin, you will also need to add `$NXJ_HOME/bin` to `LD_LIBRARY_PATH` so that the Eclipse plugin can access the leJOS NXJ JNI libraries.__ This should normally be done in `/etc/profile`, but this may differ for different Linux distributions.

==== Building the release ====

To build the release, change directory to `lejos_nxj/build` and type `ant`. If you have all the dependent packages installed the release should build without errors.

If you do not need `jbluez`, and you do not have the package dependices for it, you can remove it from the `build.xml` file.

==== Flashing the Firmware ====

As leJOS NXJ is a firmware replacement, you will need to flash the firmware to your NXT. Note that this will overwrite any existing firmware. If you have the standard LEGO firmware or other third-party firmware on your NXT, existing files will be lost.

__Note that the 0.85 release changes the amount of flash memory reserved for the firmware and the startup menu, so when you first flash the 0.85 firmware any existing files will be lost__

Make sure your NXT is attached to the PC by its USB cable, and switch it on by pressing the orange button.

You can either use the command line `nxjflash` command or the `nxjflashg` GUI program.

'''Using the command line:'''

Type nxjflash to flash the leJOS NXJ firmware. If your NXT is in firmware update mode, the firmware will be updated. You will see some messages on your command window, and the NXT should show the leJOS splash screen and then the leJOS NXJ menu. If your NXT has a previous version of the leJOS or LEGO firmware on it, a list of the NXTs connected to the USB will be shown, and you will be asked to input the number in the list of the NXT you want updated - this will be 1 if a single NXT is connected to your PC. If your NXT has other firmware on it, or if nxjflash fails, you must put your NXT into firmware update mode. Press the reset button (at the back of the NXT , upper left corner) for more than 4 seconds. A straightened paper clip could be useful for this. Your NXT will audibly tick when it is firmware update mode. Then try nxjflash again.

'''Using the GUI version:'''

To run the GUI version type `nxjflashg`. When the program window opens, click on Start Program and follow the instructions. A more complete explanation is in the http://lejos.sourceforge.net/nxt/nxj/tutorial/PC_GUI/PCGUITools.htm[PC GUI Tools] tutorial page.

=== Testing your Installation ===

You can check that you have successfully installed leJOS NXJ on your PC and your NXT by compiling and running your first program.

==== Compiling and running your first program ====

__Java programs need to be compiled to class files before they can be run. For leJOS NXJ, all the class files that are to be run on the NXT needed to be linked to produce a binary file (with the extension `.nxj`) and this must then be uploaded to the NXT.__

To run a sample program, such as the `View.java` sample, follow these steps:

Start a shell session, and change directory to the `lejos_nxj/projects/samples/View` folder:

Compile the program with the `nxjc` command:

 {{{
nxjc View.java
 }}}

Then link, upload and run it with the `nxj` command:

 {{{
nxj -r View
 }}}

You should see the menu of the View sample on your NXT.















