= link:../selenium.html[Selenium] / link:rc.html[RC] / API =
:title: [Selenium][RC] API

--------------------------------------------------------------------------------
from selenium import selenium

sel = selenium('localhost',             <1>
               4444,                    <2>
               '*firefox',              <3>
               'http://www.google.com') <4>
sel.start()   <5>
sel.open('/') <6>
sel.stop()    <7>
--------------------------------------------------------------------------------
<1> `selenium.selenium` 初始化要 4 個參數，首先是 Selenium Server 的主機名稱或 IP。
<2> Selenium Server 在哪個 port 監聽。（預設 Selenium Server 會監聽 4444 埠）
<3> 做為 browser start command，例如 `*firefox`、`*iexplore` 等。簡單的說就是要採用哪一種 browser 來做測試。
<4> 雖然官方文件解釋了一堆跟 http://en.wikipedia.org/wiki/Same_origin_policy[Same Origin Policy] 有關的東西，但可以簡單把它看成是其他 Selenium command 傳入 URL 時的 base URL 即可。
<5> 打開 browser，並建立一個 Selenium session 與它對應。
<6> 以步驟 4 的 `http://www.google.com/` 做為 base URL，所以 `open('/')` 的結果就是 `http://www.google.com/`。
<7> 關閉 browser，並結束對應 session。不要誤用成 `close()`，它是用來關閉視窗，但 session 並不會結束。

基本上，Selenium API 跟 Selenium command 的用法很像，只是沒有 `waitForXXX`、`storeXXX` 等而已。

對於測試到一半遇到錯誤所殘存下來的 session，或是 interactive mode 開啟的 session，如何讓 client driver 接上那個 session 繼續往下處理？

--------------------------------------------------------------------------------
from selenium import selenium

sel = selenium('localhost', 4444, '*firefox', 'http://www.google.com') <1>
sel.sessionId = '62897a5af5ac442a9e36179b5dc0d561' <2>
--------------------------------------------------------------------------------
<1> 按照平常的方式重新建立一個 client driver。
<2> 把 session ID 直接餵進 `sessionId` 這個 attribute，就可以繼續往下操作了。

== 延伸閱讀 ==

 * link:exist.html[檢查某個 Element 是否存在]
 * link:form.html[操作表單控制項]
 * link:text.html[取得文字內容]
 * link:keyboard.html[鍵盤輸入與控制]
 * link:attributes.html[取得某個 Element 的屬性]

== 參考資料 ==

.文件
--
 * http://seleniumhq.org/docs/05_selenium_rc.html#learning-the-api[Selenium 1 (Selenium RC) > Learning the API — Selenium Documentation]
 * http://selenium.googlecode.com/svn/trunk/docs/api/java/com/thoughtworks/selenium/Selenium.html[com.thoughtworks.selenium.Selenium (Javadoc)]
 * http://selenium.googlecode.com/svn/trunk/docs/api/py/selenium/selenium.selenium.html[selenium.selenium — Selenium 2.0 documentation]
--

////////////////////////////////////////////////////////////////////////////////

== 雜記 ==

=== XPath ===

 * http://selenium.googlecode.com/svn/trunk/docs/api/java/com/thoughtworks/selenium/Selenium.html#useXpathLibrary(java.lang.String)[useXpathLibrary(libraryName)]
 * http://selenium.googlecode.com/svn/trunk/docs/api/java/com/thoughtworks/selenium/Selenium.html#allowNativeXpath(java.lang.String)[allowNativeXpath(allow)]

=== Existence and Visibility ===

 * `boolean isElementPresent(java.lang.String locator)` 
 * `boolean isTextPresent(java.lang.String pattern)`
 * `boolean isVisible(java.lang.String locator)`

////////////////////////////////////////////////////////////////////////////////

