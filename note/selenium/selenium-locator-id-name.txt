= Selenium Locators: Identifier (ID, Name) =

 id=<id_attribute>
 name=<name_attribute> [[value=]<filter>]
 [identifier=]<id_or_name_attribute>

TIP: 用 `id=` 或 `name=` 都會比 `identifier=` 來得好，才不會 id 找不到時又去找 name，浪費時間。

ID/Name/Identifier strategy 都以 element 的 `id`/`name` 屬性值做為判斷依據（區分大小寫）。

其中 ID strategy 比 Name strategy 來得明確一些，因為 `id` 具有唯一性，但 `name` 則可能重複。有多個 element 具有相同的 `name` 屬性值時，預設會採用第一個符合條件的 element，但可以用 Name strategy 特有的 'element filter'（預設比對 `value` 的屬性值），進一步區分多個具有相同 `name` 屬性值的 form element。

NOTE: 不合乎要求的 HTML 裡，可能有兩個 element 具有相同的 ID，在這種情況下 ID strategy 會取用第一個遇到的 element，跟 Name strategy 的做法一致。

最後 Identifier strategy 算是 ID/Name strategy 的綜合體。'location' 可以填入 `id` 或 `name` 屬性的值，比對時，會先比對 element 的 `id` 屬性，沒有符合條件者，再採用第一個 `name` 屬性符合條件的 form element。

以下面的例子為例：

.`id_name.html`
--------------------------------------------------------------------------------
<html>
  <body>
    <form>
      Username: <input type="text" name="Username" id="acc" />                                         <1>
      Password: <input type="password" name="Password" id="pwd" />
      <input type="radio" name="Trusted" id="Trusted" value="no" />This is a public or shared computer <2>
      <input type="radio" name="Trusted" id="Trusted" value="yes" />This is a private computer         <3>
      <input type="submit" value="Sign in" />
    </form>
  </body>
</html>
--------------------------------------------------------------------------------
<1> 下面這幾種寫法都可以定位到輸入帳號的欄位：
 * `id=acc`
 * `name=Username`
 * `identifier=Username`
 * `Username`（implicit locator 的用法）
<2> 下面這幾種寫法都可以定位到選擇 “使用公用電腦“ 的欄位：
 * `id=Trusted`（雖然同一份 HTML 文件裡 `id` 屬性值不該重複）
 * `name=Trusted`（採用第一個 `name` 屬性符合條件者）
 * `name=Trusted value=no`（搭配 element filter 區分多個具有相同 `name` 屬性值的 form element）
 * `name=Trusted no`
 * `identifier=Trusted`
 * `Trusted`
<3> 下面這幾種寫法都可以定位到選擇 “使用私人電腦“ 的欄位：
 * `name=Trusted value=yes`（搭配 element filter 區分多個具有相同 `name` 屬性值的 form element）
 * `name=Trusted yes`

IMPORTANT: 這裡提到的 Identifier/ID/Name strategy，相對其他尚未介紹的 location strategy 而言，比較不會因版面或頁面結構（page structure）變動而失效。除了接下來要提的 Link Text strategy 之外，其他 XPath/DOM/CSS 表示法都跟面頁結構有不同程度地相依（CSS 的狀況比較輕微）。在定位 element 時，應優先考量 Identifier/ID/Name strategy，不得已才用其他 location strategy，會讓 test case 比較穩固。

