= Selenimu / Official =
<<TableOfContents>>

== Home ==
http://seleniumhq.org/ @2010/07/28

Selenium is a suite of tools to automate web app testing across many platforms.

 * runs in many browsers and operating systems
 * can be controlled by many programming languages and testing frameworks.

'''Get started with Selenium!'''

0. Watch: http://seleniumhq.org/movies/intro.mov[see the magic].

1. Begin: write and run tests in Firefox.

{{attachment:selenium-ide-logo.png}} http://seleniumhq.org/projects/ide/[Selenium IDE] is a Firefox add-on that records clicks, typing, and other actions to make a test, which you can play back in the browser.

2. Customize: your language, your browser.

{{attachment:selenium-rc-logo.png}} __http://seleniumhq.org/projects/remote-control/[Selenium Remote Control (RC)] runs your tests in multiple browsers and platforms. Tweak your tests in your preferred language.__

3. Deploy: scale out, speed up.

{{attachment:selenium-grid-logo.png}} __http://selenium-grid.seleniumhq.org/[Selenium Grid] extends Selenium RC to distribute your tests across multiple servers, saving you time by running tests in parallel.__

'''Learn Selenium'''

 * http://seleniumhq.org/about/how.html[The Magic of Selenium: How it works]
 * http://seleniumhq.org/about/platforms.html[Support Matrix]: Browsers, Operating Systems, Programming Languages, Testing Frameworks
 * http://seleniumhq.org/documentation/screencasts/[Screencasts]
 * http://seleniumhq.org/documentation/tutorials[Tutorials / Labs] (無效的連結? 2010-05-17)
 * http://release.seleniumhq.org/selenium-core/1.0/reference.html[Selenium API]
     
== How Selenium Works ==
http://seleniumhq.org/about/how.html @2010/07/28

{{attachment:how-it-works.png}}

 * Selenium IDE (Firefox Plugin; 應該講 Add-on 比較妥當, 因為 Selenium IDE 在 1.0.4 之後已經有了自己的 Plugin System); Records and plays back tests in Firefox: a great way to get started writing test.

 * Selenium IDE allows you export yours tests to many programming languages, (including Ruby, PHP, Java, Perl, C# and Python) so you can tweak your tests and even put them into your testing framework.

 * __Your tests are made of series of ''Selenium commands'', which are sent to the Selenium Remote Control server or the Selenium Grid server.__

   * Selenium Remote Control starts up browsers (''one at a time'') and then runs commands you pass along from your tests.

   * __Selenium Grid coordinates multiple Selenium Remote Control servers so you can run tests on lots of platforms at the same time, which saves lots of time and allows wider testing.__

== Platforms Supported by Selenium ==
http://seleniumhq.org/about/platforms.html @2010/07/28

We take compatibility seriously - that's why Selenium works with many browsers, operating systems, programming languages, and testing frameworks. From Firefox to JUnit, we've got you covered. (http://seleniumhq.org/docs/01_introducing_selenium.html#supported-browsers[Documentation] 裡有更完整的清單)

'''Browsers'''

|| Browser || Selenium IDE || Selenium Remote Control || Selenium Core ||
|| Firefox 3 || Record and playback tests || Start browser, run tests || Run tests ||
|| Firefox 2 || Record and playback tests || Start browser, run tests || Run tests ||
|| IE 8 || not supported || Start browser, run tests || Run tests ||
|| IE 7 || not supported || Start browser, run tests || Run tests ||
|| Safari 3 || not supported || Start browser, run tests || Run tests ||
|| Safari 2 || not supported || Start browser, run tests || Run tests ||
|| Opera 9 || not supported || Start browser, run tests || Run tests ||
|| Opera 8 || not supported || Start browser, run tests || Run tests ||
|| Others || not supported || Partial support possible* || Run tests** ||

* __Selenium Remote Control server can start any executable, but depending on browser security settings,__ there may be technical limitations that would limit certain features.

** __'''Selenium Core is written in Javascript so it should work (in theory) on most browsers with decent Javascript support.''' Some operations are only possible via Selenium Remote Control because of browser security settings.__

'''Operating Systems'''

|| OS || Selenium IDE || Selenium Remote Control || Selenium Core ||
|| Windows || Works in Firefox 2+ || Start browser, run tests || Run tests ||
|| OS X || Works in Firefox 2+ || Start browser, run tests || Run tests ||
|| Linux || Works in Firefox 2+ || Start browser, run tests || Run tests ||
|| Solaris || Works in Firefox 2+ || Start browser, run tests || Run tests ||
|| Others || Should work in Firefox 2+ || Start browser, run tests* || Run tests** ||

* __Selenium Remote Control server is written in Java, so it may run on other systems as well, as long as there's a supported web browser available.__

** Selenium Core is written in Javascript so it should work (in theory) on most browsers with decent Javascript support. Some operations are only possible via Selenium Remote Control because of browser security settings.

'''Programming Languages'''

__Programming languages are supported through Selenium Remote Control "drivers." These are libraries made for each language that '''expose commands from the Selenium API natively in the form of methods/functions.'''__

|| Language || Selenium IDE || Selenium Remote Control || Selenium Core ||
|| C# || Generate code || Library ("driver") support || n/a ||
|| Java || Generate code || Library ("driver") support || n/a ||
|| Perl || Generate code || Library ("driver") support || n/a ||
|| PHP || Generate code || Library ("driver") support || n/a ||
|| Python || Generate code || Library ("driver") support || n/a ||
|| Ruby || Generate code || Library ("driver") support || n/a ||
|| Others || Generate custom code* || Commands via HTTP requests** || n/a ||

* __You can actually set up a ''custom code generator'' to output to any language. The templates are written in Javascript, but they just output text.__

** __'''Any language that can make an HTTP call can pass commands to the Selenium Remote Control server.''' Languages listed here have a ''wrapper library'' made already.__

'''Testing Frameworks'''

Testing frameworks aren't required, but they can be helpful if you want to automate your tests.

|| Framework || Selenium IDE || Selenium Remote Control || Selenium Core ||
|| http://seleniumhq.org/projects/bromine/[Bromine] || Comes with template to add to IDE || Manipulate browser, check assertions via custom driver || Special support** ||
|| JUnit || Out-of-the-box code generation || Manipulate browser, check assertions via Java driver || n/a ||
|| NUnit || Out-of-the-box code generation || Manipulate browser, check assertions via .NET driver || n/a ||
|| RSpec (Ruby) || Custom code generation template* || Manipulate browser, check assertions via Ruby driver || n/a ||
|| Test::Unit (Ruby) || Out-of-the-box code generation || Manipulate browser, check assertions via Ruby driver || n/a ||
|| TestNG (Java) || Custom code generation template* || Manipulate browser, check assertions via Java driver || n/a ||
|| http://docs.python.org/library/unittest.html[unittest] (Python) || Out-of-the-box code generation || Manipulate browser, check assertions via Python driver || n/a ||
|| Others || Custom code generation template* || Manipulate browser, check assertions via HTTP requests*** || n/a ||
|| http://code.google.com/p/robotframework-seleniumlibrary/[Robot Framework SeleniumLibrary] || n/a || Utilizes the Python driver || n/a ||

* Built-in code generation creates code specifically for the "out-of-the-box" frameworks, but you can modify the Javascript-based templates to output any kind of code you want.

** __Bromine is built specifically for Selenium and it directly supports both Selenium Core and Selenium Remote Control. The other testing frameworks use Selenium Remote Control drivers for testing.__

*** Using the appropriate driver (or HTTP commands), you can manipulate and test the browser using any testing framework by calling commands like `"click" or "isElementPresent." __'''Selenium Remote Control just deals with the commands and doesn't care about what actually calls those commands.'''__

== Selenium Core ==
http://seleniumhq.org/projects/core/ @2010/07/28

Selenium Core (Core) is a DHTML test execution framework.

It is the engine of both, Selenium IDE and Selenium RC (driven mode), but it also can be deployed on the desired application server.

Read More about Selenium Core in http://seleniumhq.org/documentation/core/[our documentation] (無效的連結)

== Selenium IDE ==
http://seleniumhq.org/projects/ide/ @2010/07/28

{{attachment:selenium-ide.gif}}

Selenium IDE is an integrated development environment for Selenium ''scripts''. It is implemented as a Firefox extension, and allows you to record, edit, and debug tests. __Selenium IDE includes the entire Selenium Core, allowing you to easily and quickly record and play back tests in the actual environment that they will run.__

Selenium IDE is not only recording tool: it is a complete IDE. You can choose to use its recording capability, or you may edit your scripts by hand. With autocomplete support and the ability to move commands around quickly, Selenium IDE is the ideal environment for creating Selenium tests no matter what style of tests you prefer.

Features:

 * Easy record and playback
 * Intelligent ''field selection'' will use IDs, names, or XPath as needed (指 IDE 本身會決定用哪一種方式來定位比較好)
 * Autocomplete for all common Selenium commands
 * Walk through tests
 * Debug and set breakpoints
 * Save tests as HTML, Ruby scripts, or any other format
 * __Support for Selenium `user-extensions.js` file[?]__
 * Option to automatically assert the title of every page
 * NEW! Easy customization through plugins

Plugins:

__As of 1.0.4, Selenium IDE has had a ''plugin system'' to allow for easy extension and customization__ including:

 * Adding new functionality to the API
 * Changing existing functionality
 * Custom formats and export capabilities
 * Hosting of plugin `update.rdf` files[?]
 * Adding new ''locator strategies'' (coming soon)

For more information, see the http://seleniumhq.org/projects/ide/plugins.html[Selenium IDE Plugins] page.

== Selenium Remote Control ==
http://seleniumhq.org/projects/remote-control/ @2010/07/28

__Selenium Remote Control (RC) is a test tool that allows you to write automated web application UI tests in any programming language against any HTTP website using any mainstream !JavaScript-enabled browser.__

Selenium RC comes in two parts.

 1. __A server which automatically launches and kills browsers, and acts as a HTTP proxy for web requests from them.__
 2. __Client libraries for your favorite computer language.__

The RC server also bundles Selenium Core, and automatically loads it into the browser.

Here is a simplified architectural representation....

{{attachment:selenium-rc.png}} <<BR>> (注意圖中 Machine Boundary 是 Optional 的)

__'''Selenium Remote Control is great for testing complex AJAX-based web user interfaces under a Continuous Integration system. It is also an ideal solution for users of Selenium Core or Selenium IDE who want to write tests in a more expressive programming language than the Selenese HTML table format customarily used with Selenium Core.'''__

Read More about Selenium Remote-Control in http://seleniumhq.org/documentation/remote-control/[our documentation]






















== Overview ==

Selenium is a test tool for web applications. Selenium tests run directly in a browser, just as real users do. And they run in Internet Explorer, Mozilla and Firefox on Windows, Linux, and Macintosh. No other test tool covers such a wide array of platforms.

 * '''Browser compatibility testing.''' Test your application to see if it works correctly on different browsers and operating systems. The same script can run on any Selenium platform.
 * __'''System functional testing.''' Create regression tests to verify application functionality and user acceptance.__

__'''Selenium uses !JavaScript and Iframes to embed a test automation engine in your browser.'''__ This technique should work with any !JavaScript-enabled browser. Because different browsers handle !JavaScript somewhat differently, we usually have to tweak the engine to support a wide range of browsers on Windows, Mac OS X and Linux.

Selenium was developed by team of programmers and testers at !ThoughtWorks. It is open-source software and can be downloaded and used without charge. It is currently under active development by our team. Stay tuned for updates and further announcements.

__!ThoughtWorks is a leader in Agile development methods for enterprise software development. Selenium is designed specifically for the acceptance testing requirements of Agile teams. However, teams using more traditional development will also find it useful.__

Many !ThoughtWorks consultants and a growing number of friends work on Selenium here at OpenQA.org and __there are hopes for it to become the multi-language, multi-platform defacto standard replacement for the likes of !WinRunner(Mercury !WinRunner, 企業級測試工具) in the web application space.__

== Which Selenium Tool Should I Use? ==

|| || Selenium IDE || Selenium Remote Control || Selenium Core || Selenium Core HTA ||
|| Browser Support || Firefox Only || Many || All || IE Only ||
|| Requires Remote Installation || No || No || Yes || No ||
|| Supports HTTPS/SSL || Yes || Yes* || Yes || Yes ||
|| Supports Multiple Domains || Yes || Yes* || No || Yes ||
|| Requires Java || No || Yes || No || No ||
|| Saves Test Results to Disk || Yes || Yes || No || Yes ||
|| Language Support || Selenese(用 HTML table 簡單表示的測試語法) Only || Many || Selenese Only || Selenese Only ||

* = experimental support is available in Selenium RC

'''Browser Support''': Selenium IDE only works on Firefox. __Selenium Remote Control supports Firefox and IE out-of-the-box, and supports ''manual configuration'' of many other browsers. Selenium Core works in almost every browser, because it runs in pure !JavaScript. Selenium Core HTA runs with heightened IE security privileges, which means that it only runs in IE.__

__'''Requires Remote Installation''': '''Selenium Core needs to be installed on the same website as the Application Under Test (AUT), because of the ''Same Origin Policy'', a security policy which prevents cross-site scripting.''' That means that you can't just sit down and write a Selenium Core test that runs on google.com; to do that, you'd need to install Selenium Core on google.com. If you can't/won't install Selenium Core into your AUT, making it publicly visible on the same server as the AUT, then Selenium Core may not be right for you.__

The Same Origin Policy does not apply to Selenium IDE, because it's implemented as a Firefox extension; nor does it apply to Selenium Core HTA, because it runs with heightened IE security privileges. __'''Selenium RC circumvents(避開) the Same Origin Policy by providing a proxy server that makes it appear as if the Selenium JS files were actually available on the remote server;''' the proxy server tricks the browser into thinking there is a directory `http\://www.google.com/selenium/`[?].__

'''Supports HTTPS/SSL''': Selenium Remote Control's proxy server can support HTTPS websites in the latest version of Selenium RC (0.9.0 as of this writing), but support is still experimental.

'''Supports Multiple Domains''': The Same Origin Policy means that tests that begin on one server/domain cannot automate applications on other servers/domains. This means that Selenium Core can't handle applications that span across multiple different domains. Selenium RC can handle switching domains, but support is experimental.

__'''Requires Java''': Selenium Core and Selenium IDE run directly within the browser. '''Selenium RC requires Java to be installed (to run the proxy server). Note that even though Selenium RC requires Java, you can write your RC tests in .NET, Perl, Python, and Ruby as well, but you'll still need Java around to run the proxy.'''__

'''Saves Test Results to Disk''': Selenium Core can't write any test results to disk (because it is written in !JavaScript, which is not allowed to write to disk), though you can use it to post results back to another web server for saving. (You can save test results with Selenium Core HTA.) Selenium Remote Control provides explicit support for running tests in many languages and saving the test results to disk; it can also act as a results-handler server for Selenium Core tests run elsewhere. Selenium IDE is a Firefox extension which can save to disk just fine.

__'''Language Support''': Selenium Remote Control allows you to write your tests in any programming language, including Java, .NET, Perl, Python and Ruby. (You can also add support for testing in other languages.) Selenium IDE and Selenium Core only support testing in "Selenese", a simple scripting language. '''Selenese has a number of strict limitations: it has no conditionals (no "if" statements), and it has no loops (no "for" statements). This can make writing complicated tests difficult or even impossible. (很顯然地, 自從 Selenium RC 出現之後, 除非是要做類似 FIT 的應用讓客戶自行撰寫測試, 否則實在就沒有什麼理由繼續直接使用 Selenium Core, 雖然 Selenium RC 內部也是會用到 Selenium Core)'''__

== Selenium Core ==

__Selenium Core uses a unique mechanism which allows it to run on so many platforms. Written in pure JavaScript/DHTML, '''you copy Selenium Core tests directly into your your application webserver, allowing the tests to run in any supported browser on the client-side.''' Thus, you must have write access to the machine your web application server is running on to install Selenium Core. (雖然說 "run directly in a browser", 但為了避開瀏覽器安全性的限制, 還是要將 Selenium Core 佈署到伺服端, 使得測試程式與受測程式落在同一個網域裡)__

Supported Platforms:

 * Windows:
   * Internet Explorer 6.0 and 7.0
   * Firefox 0.8 to 2.0
   * Mozilla Suite 1.6+, 1.7+
   * Seamonkey 1.0
   * Opera 8 & 9
 * Mac OS X:
   * Safari 2.0.4+
   * Firefox 0.8 to 2.0
   * Camino 1.0a1
   * Mozilla Suite 1.6+, 1.7+
   * Seamonkey 1.0
   Not yet supported:
   * !OmniWeb
 * Linux:
   * Firefox 0.8 to 2.0
   * Mozilla Suite 1.6+, 1.7+
   * Konqueror
   * Opera 8 & 9

