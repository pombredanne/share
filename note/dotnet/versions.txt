= link:dotnet.html[.NET Framework] / Versions =
:title: [.NET] Versions

////////////////////////////////////////////////////////////////////////////////
 * 不同版本 .NET framework 間的包含關係??
 * Windows 7 內建的 .NET Framework 是 3.5 SP1，而 Windows 8 則內建 4.5。
 * 雖然說 Windows 7 內建 3.5，但為什麼從 registry (`HKLM\SOFTWARE\Microsoft\.NET Framework`) 下只見 `v2.0.50727` 跟 `v3.0`??
 * 在 Windows 下安裝會用到 .NET Framework 2.0 的程式時，會被問到要不要 ENABLE 2.0，實際上是要加裝 .NET Framework 3.5 （內含 2.0 跟 3.0 ??）
////////////////////////////////////////////////////////////////////////////////

== 參考資料 ==

 * http://msdn.microsoft.com/en-us/library/bb822049.aspx[.NET Framework Versions and Dependencies]

////////////////////////////////////////////////////////////////////////////////
** Each new version of the .NET Framework retains features from the previous versions and adds new features. The CLR is identified by its own version number. The .NET Framework version number is incremented at each release, although the CLR version is not always incremented. For example, the .NET Framework 4, 4.5, and 4.5.1 RC include CLR 4, but the .NET Framework 2.0, 3.0, and 3.5 include CLR 2.0. (There was no version 3 of the CLR.) 這裡的 "retains" 意謂著裝了 3.x 就有 2.x，裝了 4.x 就有 3.x 跟 2.x ??
** You can load multiple versions of the .NET Framework on a single computer at the same time. This means that you can install the .NET Framework without having uninstall previous versions. 舊版會自動被移除嗎?? 如果沒被移除，那執行期是用到哪個?? 之後再移除舊版會出事嗎??
** The .NET Framework versions 2.0, 3.0, and 3.5 are built with the same version of the CLR (CLR 2.0). These versions represent successive layers of a single installation. Each version is built incrementally on top of the earlier versions. It is NOT possible to run versions 2.0, 3.0, and 3.5 side by side on a computer. When you install version 3.5, you get the 2.0 and 3.0 layers automatically, and apps that were built for versions 2.0, 3.0, and 3.5 can all run on version 3.5. 說裝了 3.5 就可以一併支援 3.0 跟 2.0，但又說 2.0, 3.0, 跟 3.5 不能 "side by side"，指的是什麼??
** However, the .NET Framework 4 ends this layering approach, so apps built for 2.0. 3.0, or 3.5 will not work on version 4 or later. Starting with the .NET Framework 4, you can use "in-process side-by-side hosting"?? to run multiple versions of the CLR in a single process.
** In addition, if your app targets version 2.0, 3.0, or 3.5, your users may be required to ENABLE the .NET Framework 3.5 on a Windows 8 or Windows 8.1 Preview computer before they can run your app. 什麼是 enable，聽起來跟 "額外安裝" 不太一樣??
** You do not have to install previous versions of the .NET Framework or the CLR before you install the latest version. 但 4.0 跟 3.5 之間有個 gap??
** Some versions of the .NET Framework are installed automatically with the Windows operating system, but other versions must be installed separately. 注意表格裡 "You can also install"
////////////////////////////////////////////////////////////////////////////////

 * http://en.wikipedia.org/wiki/.NET_Framework_version_history[.NET Framework version history - Wikipedia, the free encyclopedia] ??

 * http://en.wikipedia.org/wiki/.NET_Framework[.NET Framework - Wikipedia, the free encyclopedia]

////////////////////////////////////////////////////////////////////////////////
** Version 3.0 of the .NET Framework is included with Windows Server 2008 and Windows Vista. Version 3.5 is included with Windows 7 and Windows Server 2008 R2 （從 programs and features 看不出來??), and can also be installed on Windows XP and Windows Server 2003. 有張 "Overview of .NET Framework release history" 的表格，整理出不同版本的 .NET Framework 內建於哪些 OS。如果不希望使用者額外裝 .NET Framework，應該採用 Windows Vista 就開始內建的 .NET Framework 3.0，反正 Windows XP 也沒有內建任何版本，但可額外安裝 3.0??
////////////////////////////////////////////////////////////////////////////////

