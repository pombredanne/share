= link:../unix-like.html[Unix-like] / Users and Groups =
:title: [Unix-like] Users and Groups

// users 區分為 normal user 跟 system user，同樣地，groups 也區分成 user group 跟 system group。
// 幾個特殊的 user/group - `nobody`/`nogroup`, `users`, `adm`

== 參考資料 ==

 * http://www.cyberciti.biz/faq/howto-linux-add-user-to-group/[Howto: Linux Add User To Group] (2006-03-14)

.其他文件
--
 * http://unix.stackexchange.com/questions/80277/whats-the-difference-between-a-normal-user-and-a-system-user[What's the difference between a normal user and a system user? - Unix & Linux Stack Exchange] (2013-06-21)

////////////////////////////////////////////////////////////////////////////////
** That is not a technical difference but an organizational decision. E.g. it makes sense to show normal users in a login dialog (so that you can click them instead of having to type the user name) but it wouldn't to show system accounts (the UIDs under which daemons and other automatic processes run) there. 你不會想 system user 出現在登入選單!!
** System users will be created with no aging information in `/etc/shadow`, and their numeric identifiers are chosen in the `SYS_UID_MIN` – `SYS_UID_MAX` range, defined in `/etc/login.defs`, instead of `UID_MIN` – `UID_MAX` (and their GID counterparts for the creation of groups).
////////////////////////////////////////////////////////////////////////////////

 * http://askubuntu.com/questions/138972/what-is-the-equivalent-user-for-nobodynobody-from-centos[configuration - What is the equivalent user for nobody:nobody from CentOS? - Ask Ubuntu] (2012-05-18)

////////////////////////////////////////////////////////////////////////////////
** You can use `nobody:nogroup` if you really do want a user/group with no permissions. But Debian derivatives tend to define a user and/or group per task to ensure that your unprivileged services are separated from each other. 別濫用 `nobody` 跟 `nogroup`。
** Having all (or most) services running under the same user defeats part of the purpose of using a non-privileged user; thus I think the recommended best practice is for each service to have its own user (e.g. apache runs as www-data, I think exim4 will have an exim4 user, spamassassin will have a spamd user (I think!), and so on). When you install a service it takes care of creating this user for you. 不斷強調每個 service 都要有各自的帳號
////////////////////////////////////////////////////////////////////////////////

 * http://serverfault.com/questions/350931/in-what-condition-should-i-create-a-system-user-instead-of-a-normal-user[linux - In what condition, should I create a system user instead of a normal user? - Server Fault] (2012-01-18)

////////////////////////////////////////////////////////////////////////////////
** When you are creating an account to run a daemon, service, or other system software, rather than an account for interactive use. Technically, it makes no difference, but in the real world it turns out there are long term benefits in keeping user and software accounts in separate parts of the numeric space.
////////////////////////////////////////////////////////////////////////////////
--

