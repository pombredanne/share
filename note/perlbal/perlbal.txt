= Perlbal - Perl HTTP Load Balancer =

== 參考資料 ==

.網站
--
 * https://github.com/perlbal/Perlbal[perlbal/Perlbal · GitHub]
 * http://search.cpan.org/dist/Perlbal/[Alan Kasindorf / Perlbal - search.cpan.org]
 * https://groups.google.com/forum/?fromgroups#!forum/perlbal[perlbal - Google Groups]
 * http://lists.danga.com/pipermail/perlbal/[Perlbal List Archives] （2008-06 以前的 postings）
--

.文件
--
 * http://en.wikipedia.org/wiki/Perlbal[Perlbal - Wikipedia, the free encyclopedia]

////////////////////////////////////////////////////////////////////////////////
** Perlbal is a Perl-based "reverse proxy load balancer" and "web server". 其實 load balancer 是一回事，重點是為 application server 分擔工作，降低負載。尤其 application server 的工作通常涉及 transaction 的處理。
** The program is in common use by large web sites to distribute the load over a number of servers.
** Perlbal also features a so-called "re-proxy" mechanism. This allows a backend webapp to send back a small response to Perlbal which acts as an "internal redirect" and causes it to get the response data from elsewhere.
   *** This is often used so that expensive application server processes can defer to much simpler, faster HTTP servers to serve static files, freeing up the application server for other computing work. 這種應用還滿特別的，儘快把 application server 的資源釋放出來。
   *** This is most commonly used in conjunction with MogileFS. 所以 MogileFS 專心在交換檔案，跟 business logic 無關??
** Additionally, plugins can be written to support various operations that may traditionally have been performed at the application layer.
** Doing this relatively simple filtering task at the load balancer layer avoids the overhead of passing this request back to the full application servers.
////////////////////////////////////////////////////////////////////////////////
--

