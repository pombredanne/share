= SSL (Secure Socket Layer) =

== 參考資料 ==

.網站
--
 * http://www.sslshopper.com/[SSLShopper]
--

.文件
--
 * http://en.wikipedia.org/wiki/Transport_Layer_Security[Transport Layer Security - Wikipedia, the free encyclopedia]
 * https://developer.mozilla.org/en-US/docs/Introduction_to_SSL[Introduction to SSL | MDN]
--

.其他文件
--
 * http://www.nsfocus.net/index.php?act=magazine&do=view&mid=841[SSL/TLS/WTLS原理 - 綠盟安全月刊] (2001-02-19)
 * http://support.microsoft.com/kb/246071/en-us[Description of Symmetric and Asymmetric Encryption]
 * http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/sag_cmuncertstor.mspx?mfr=true[Microsoft Windows XP - Certificate stores]
--

////////////////////////////////////////////////////////////////////////////////

 * SSL (Secure Socket Layer) 最早由 Netscape 提出，用以實現兩個端點之間的安全通信 - "保密性" 跟 "可靠性"。之後 IETF 將它標準化，重新命名為 TLS (Transport Layer Security)。
 * SSL 被視為是 TLS 的前身, 所以 Wikipedia 上並沒有 SSL 專屬的頁面, 只是在 TLS 中被提到而已。由於 SSL 實作在 L4 傳輸層 (Transport Layer) 上，所以 TLS 更能將這個特性反映出來。
 * SSL/TLS 在 TCP/IP 之上建立了一個加密的通道，且獨立於 L7 應用層 (Application Layer)，所以 HTTP、FTP 等通信協定不用做修改，就可以直接運作在 SSL/TLS 之上，達成安全通信。
 * 加密演算法、通信密鑰的協商以及伺服器認證
 * 對稱式加密 (Asymmetric Encryption) 中，加／解密都用同一把 key。問題是要如何將這把 key 安全地交給另一端？
 * 非對稱式加密 (Symmetric Encryption) 採用 key pari
 * 數位憑證 (digital certificates) 
 * 信任 self-signed certificates
   ** http://www.google.com/support/forum/p/Chrome/thread?tid=18ea33a150bbccd2&hl=en[Installing web certificates - Google Chrome Help]
   ** http://www.akadia.com/services/ssh_test_certificate.html[How to create a self-signed Certificate] - 從 `httpd.conf` 裡的 `SSLCertificateFile` 可以找到 `.crt`
   ** http://blogs.technet.com/b/sbs/archive/2007/04/10/installing-a-self-signed-certificate-as-a-trusted-root-ca-in-windows-vista.aspx[Installing a Self-Signed Certificate as a Trusted Root CA in Windows Vista - The Official SBS Blog - Site Home - TechNet Blogs]
   ** http://httpd.apache.org/docs/2.2/mod/mod_ssl.html[mod_ssl - Apache HTTP Server]
   ** 把 self-signed certificate 加到 Enterprise Trust 裡
   ** Microsoft Certificate Manager (`certmgr.msc`)

////////////////////////////////////////////////////////////////////////////////

