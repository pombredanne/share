= link:concepts.html[Ant / Concepts] / Classpath =
:title: [Ant] Classpath

Ant 1.6 之前，classpath 只能是 `$ANT_HOME/lib/*.jar`，但 Ant 1.6 之後，classpath 的組成依序是：

 1. `-lib <path>` - 'path' 本身或 `<path>/*.jar`。
+
環境變數 `CLASSPATH` 也是透過 `-lib` 生效，除非用 `-noclasspath` 忽略 `CLASSPATH`。
+
 2. `${user.home}/.ant/lib/*.jar` - 其他 link:tasks.html[optional/third-party tasks] 的 `.jar` 可以放在這裡。可以用 `-nouserlib` 忽略底下的 `.jar`。
 3. `$ANT_HOME/lib/*.jar` - Ant 最基本的功能與 core tasks。

== 參考資料 ==

 * http://ant.apache.org/manual/running.html[Running Apache Ant]

////////////////////////////////////////////////////////////////////////////////
** Prior to Ant 1.6, all jars in the `ANT_HOME/lib` would be added to the `CLASSPATH` used to run Ant. This was done in the scripts that started Ant. From Ant 1.6, two directories are scanned by default and more can be added as required. The default directories scanned are `ANT_HOME/lib` and a user specific directory, `${user.home}/.ant/lib`. This arrangement allows the Ant installation to be shared by many users while still allowing each user to deploy additional jars. Such additional jars could be support jars for Ant's optional tasks or jars containing third-party tasks to be used in the build.
** Additional directories to be searched may be added by using the `-lib` option. The `-lib` option specifies a search path. Any jars or classes in the directories of the path will be added to Ant's classloader.
** Note that the `CLASSPATH` environment variable is passed to Ant using a `-lib` option. Ant itself is started with a very minimalistic classpath. Ant should work perfectly well with an empty `CLASSPATH` environment variable, something the the `-noclasspath` option actually enforces.
////////////////////////////////////////////////////////////////////////////////

