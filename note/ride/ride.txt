= Robot Framework IDE (RIDE) =

RIDE 做為 Robot Framework 的 test data editor，開發 test cases 的整合式開發環境（IDE）。

== 延伸閱讀 ==

 * link:../robotframework/robotframework.html[Robot Framework]
 * link:install.html[安裝設定]
 * link:keyboard-shortcuts.html[常用的快捷鍵]
 * link:preferences.html[偏好設定]

== 參考資料 ==

.網站
--
 * https://github.com/robotframework/RIDE[RIDE] (GitHub) ^http://diigo.com/0w3pd[閱讀]^
 * https://github.com/robotframework/RIDE/wiki[RIDE Wiki] (GitHub)
 * http://code.google.com/p/robotframework-ride/issues/list[Issues]
--

.社群
--
 * https://groups.google.com/forum/?fromgroups#!forum/robotframework-users[robotframework-users - Google Groups]
--

.文件
--
 * https://github.com/robotframework/RIDE/wiki/Release-notes[Release notes]
 * http://code.google.com/p/robotframework-ride/wiki/KeywordCompletion[Keyword Completion]
 * http://code.google.com/p/robotframework-ride/wiki/HowTo[HowTo]
 * http://code.google.com/p/robotframework-ride/wiki/Settings[Settings - What and where is the RIDE settings file?]
 * http://code.google.com/p/robotframework-ride/wiki/Templates[Templates]
--

////////////////////////////////////////////////////////////////////////////////

 * suite file/dir 在 RIDE 稱做 project，然後把一些 [keyword] 都歸入 Settings >> 可以展開。
 * 有 template 的概念
   ** 用以識別 HTML 哪一部份是 test data，哪一部份又要保留不動（用 RIDE 編輯 HTML 的時候，不會看到 test data 以外的部份）。
   ** 新建一個 project，格式用 HTML 時，也會用到這個 template。之後可以 change format。
   ** 幸好可以將每個 HTML 視為自己的 template，只要在 HTML 上面宣告 `<meta name="rf-template" content="True" />` 即可。不過 table ID 有一些規定：
+
--------------------------------------------------------------------------------
<table id="settings">
</table>
<table id="variables">
</table>
<table id="testcases">
</table>
<table id="keywords">
--------------------------------------------------------------------------------
+
 * 使用 RIDE 最主要的理由是它 Content Assistance / Keyword Completion 的功能（Ctrl-Space 或 Ctrl-Alt-Space）。自動完成的 keyword 會自動調整成 library 裡實際的 keyword 大小寫。
   ** 在 Windows 下，要把切換輸入法的組合鍵由 Ctrl-Space 改成 Ctrl-Shift-Space 才行。
 * 輸入 $ 再按 Ctrl-Space，會列出 scope 內的 arguments
 * RIDE 每一個 cell 的底色有一些玄機；白色是 required，淡灰色是 optional，而深灰色則是多出來的 cell
 * 按 F5 開出 Search Keyword 的視窗。輸入 search term 後要按 Enter 才會作用（可選擇要不要連同 documentation 一起找）
 * 在每一欄按下 Ctrl 都會跳出說明。紅色 cell 移上去會出現錯誤訊息。例如 "Missing argument: message"。平常移上去時會出現該填的 argument (required/optional)
 * 刪除 cell 的內容用 Del（Backspace 沒用），Ctrl-D 會清控一整行，Ctrl-Z 可以 undo
 * a spec file that contains the information of the library keywords can be generated.
 * Run 提供很細部的控制。直接選取 test case，或透過 tag 來建立白／黑名單。
 * Execution profile 可以選 custom script，通常用來設定 environment variable （例如 RESOURCE_DIR 或 PYTHONPATH 等）
 * 透過 RIDE 建立 test data 時，有它自己的語法，但會自動轉成 Robot Framework 要的各種格式。
 * 到處有 Find Usage 的建，所以一開始開啟頂層的 dir 是比較好的。想修改 resource 裡更動 keyword 前，最好用 Find Usage 查一下可能會影響到誰。
   ** 也因為內部一直在監看 usage，所以將 keyword 更名時，用到的地方也會一起更動。感覺到 refactor 了嗎？
   ** cell 裡按右鍵，也有 rename keyword 的功能
   ** 事實上先用 native language 寫出 high-level keyword 後，就可以點右鍵 create keyword... 會自動依數量先編好 ${arg}...
 * 在 keyword 上點兩下可以來到 user keyword 定義的地方。
 * Ctrl-3 可以直接 comment 掉，對應的 Ctrl-4 可以做 uncomment
 * Shitf 加上方向鍵可以選取多個 cell，之後搭配 Ctrl-X, Ctrl-C, Ctrl-V 做剪貼。Ctrl-I 做新增 rows，Ctrl-D 刪掉 rows。Ctrl-Shift-V 是 insert row 再 paste 的組合。
 * test case 跟 user keyword 的量很大時，Alt-Left 跟 Alt-Right 可以發揮上一頁／下一頁的效果。
 * test case 可以直接複製
 * Tool > View RIDE Log 可以看到匯入 test library 時發生什麼錯誤，導致 no keyword defined 的結果
 * Run 可以額外在 Arguments 給定 --debugfile /tmp/debug.log，這樣開發過程中就可以看出 stack trace...

////////////////////////////////////////////////////////////////////////////////

