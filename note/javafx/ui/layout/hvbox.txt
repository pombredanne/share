= link:layout.html[JavaFX / Layout] / HBox and VBox =
:title: [JavaFX][Layout] HBox 與 VBox

== 參考資料 ==

.手冊
--
 * http://docs.oracle.com/javafx/2/api/javafx/scene/layout/HBox.html[`javafx.scene.layout.HBox`] ^https://diigo.com/0xt7l[閱讀]^
 * http://docs.oracle.com/javafx/2/api/javafx/scene/layout/VBox.html[`javafx.scene.layout.VBox`] ^https://diigo.com/0xiuv[閱讀]^
--

.文件
--
 * http://docs.oracle.com/javafx/2/layout/builtin_layouts.htm[Working With Layouts in JavaFX: Using Built-in Layout Panes > HBox/VBox | JavaFX 2 Tutorials and Documentation]
--

////////////////////////////////////////////////////////////////////////////////

 * lays out its children in a single horizontal row (or vertical column). If the hbox/vbox has a border and/or padding set, then the contents will be layed out within those insets.
 * resize children (if resizable) to their preferred widths/heights.
 * unbounded maximum width and height -> fill whatever space is assigned to it -> by default, leaving the extra space unused -> 這就是 overall alignment 作用的地方。
 * if an application wishes to have one or more children be allocated that extra space it may optionally set an hgrow/vgrow constraint on the child. 只作用在 resizable children，因為 hgrow 得到更多空間後會跟著變大。
 * HBox/VBox 除了 `Region` 原有的 padding 之外，還增加了 spacing 跟 margin
 * `HBox`
   ** `HBox()` - spacing = 0
   ** `HBox(double spacing)`
   ** `alignment: ObjectProperty<Pos>` -> `-fx-alignment` - top-left | top-center | top-right | center-left | center | center-right bottom-left | bottom-center | bottom-right | baseline-left | baseline-center | baseline-right
      *** "overall" alignment of children within the hbox's width and height, alignment of the content, defaults to `Pos.TOP_LEFT`....
      *** 有點難解釋，狀況會隨著 hgrow 或 fitHight 有設定時改變。
      *** 由於 hgrow 只作用在 resizable children，而且 alignment property 控制的是 overall alignment，如果兩個緊臨的 child 分別要往兩側靠，似乎是辦不到的？這種狀況似乎只能借助 border pane，因為 border pane 可以為個別的 child 設定 alignment。
   ** `fillHeight/fillWidth: BooleanProperty` -> `-fx-fill-height`, `-fx-fill-width`
      *** determine whether to resize their heights to fill its own height (defaults to true)
   ** `spacing: DoubleProperty` -> `-fx-spacing`
      *** horizontal/vertical space between each child in the hbox.
   ** `setHgrow(): void`

////////////////////////////////////////////////////////////////////////////////

