= link:events.html[JavaFX / UI / Events] / Filters =
:title: [JavaFX] Event Filters

== 參考資料 ==

 * http://docs.oracle.com/javafx/2/events/filters.htm[Handling JavaFX Events: Working with Event Filters | JavaFX 2 Tutorials and Documentation] ^https://diigo.com/0xtvu[閱讀]^

////////////////////////////////////////////////////////////////////////////////

 * Event filters enable the parent node to provide common processing for its child nodes or to intercept an event and prevent child nodes from acting on the event. (呼叫 `Event.consume()` 就可以停止 propagation)
 * Event filters are typically used on a branch node of the event dispatch chain and are called during the event capturing phase of event handling. Use a filter to perform actions such as overriding an event response or blocking an event from reaching its destination.
 * An event filter is an implementation of the `EventHandler` interface. The `handle()` method of this interface provides the code that is executed when the event that is associated with the filter is received by the node that registered the filter. 可以把 event filters 視同 handlers，只是兩者的位置不同而已。在 event handler 被觸發之前，會先經過 filters 的過濾。
 * To register a filter, use the `addEventFilter()` method. This method takes the event type (associated with) and the filter as arguments. 
 * Note that an event filter that is defined for one type of event can also be used for any subtypes of that event. 例如要攔截所有 input events (mouse, keyboard, touch) 可以用 `InputEvent.ANY`.
 * Filters for specific event types are invoked before super-type events, so the filters for `MouseEvent.MOUSE_PRESSED` and `MouseEvent.MOUSE_DRAGGED` are invoked before the filter for `MouseEvent.ANY`.

////////////////////////////////////////////////////////////////////////////////

