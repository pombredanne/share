= `MonkeyDevice` 的底層是 ChimpChat =

link:monkeyrunner-api.html[`MonkeyDevice`] 的底層是 ChimpChat，幾乎所有的動作都轉向內部的 `IChimpDevice`：

.http://androidxref.com/source/xref/sdk/monkeyrunner/src/com/android/monkeyrunner/MonkeyDevice.java[`com.android.monkeyrunner.MonkeyDevice`]
--------------------------------------------------------------------------------
import com.android.chimpchat.core.IChimpDevice;

public class MonkeyDevice extends PyObject implements ClassDictInit {

private IChimpDevice impl;

    public MonkeyDevice(IChimpDevice impl) {
        this.impl = impl;
    }

    public IChimpDevice getImpl() {
        return impl;
    }

    @MonkeyRunnerExported(...)
    public String getProperty(PyObject[] args, String[] kws) {
        ...
        return impl.getProperty(ap.getString(0));
    }

    @MonkeyRunnerExported(...)
    public void touch(PyObject[] args, String[] kws) {
        ...
        impl.touch(x, y, type);
    }

    @MonkeyRunnerExported(...)
    public void drag(PyObject[] args, String[] kws) {
        ...
        impl.drag(startx, starty, endx, endy, steps, ms);
    }
--------------------------------------------------------------------------------

只可惜 `getImpl()` 沒被標上 `@MonkeyRunnerExported`，所以無法取得 `IChimpDevice`。從 http://androidxref.com/[AndroidXRef]翻查發現整個 SDK 裡只有 `AdbChimpDevice` 實作這個介面，裡面的動作大部份再轉向 `IDevice` 或 `ChimpManager`：

.http://androidxref.com/4.1.1/xref/sdk/chimpchat/src/com/android/chimpchat/adb/AdbChimpDevice.java[`com.android.chimpchat.adb.AdbChimpDevice`]
--------------------------------------------------------------------------------
import com.android.ddmlib.IDevice;
import com.android.chimpchat.ChimpManager;

public class AdbChimpDevice implements IChimpDevice {

    private final IDevice device;
    private ChimpManager manager;

    @Override
    public String getProperty(String key) {
        try {
            return manager.getVariable(key);
        } catch (IOException e) {
            LOG.log(Level.SEVERE, "Unable to get variable: " + key, e);
            return null;
        }
    }

    @Override
    public void touch(int x, int y, TouchPressType type) {
        try {
            switch (type) {
                case DOWN:
                    manager.touchDown(x, y);
                    break;
                case UP:
                    manager.touchUp(x, y);
                    break;
                case DOWN_AND_UP:
                    manager.tap(x, y);
                    break;
            }
        } catch (IOException e) {
            LOG.log(Level.SEVERE, "Error sending touch event: " + x + " " + y + " " + type, e);
        }
    }

    @Override
    public void drag(int startx, int starty, int endx, int endy, int steps, long ms) {
        final long iterationTime = ms / steps;

        LinearInterpolator lerp = new LinearInterpolator(steps);
        LinearInterpolator.Point start = new LinearInterpolator.Point(startx, starty);
        LinearInterpolator.Point end = new LinearInterpolator.Point(endx, endy);
        lerp.interpolate(start, end, new LinearInterpolator.Callback() {
            @Override
            public void step(Point point) {
                try {
                    manager.touchMove(point.getX(), point.getY());
                } catch (IOException e) {
                    LOG.log(Level.SEVERE, "Error sending drag start event", e);
                }

                try {
                    Thread.sleep(iterationTime);
                } catch (InterruptedException e) {
                    LOG.log(Level.SEVERE, "Error sleeping", e);
                }
            }

            @Override
            public void start(Point point) {
                try {
                    manager.touchDown(point.getX(), point.getY());
                    manager.touchMove(point.getX(), point.getY());
                } catch (IOException e) {
                    LOG.log(Level.SEVERE, "Error sending drag start event", e);
                }

                try {
                    Thread.sleep(iterationTime);
                } catch (InterruptedException e) {
                    LOG.log(Level.SEVERE, "Error sleeping", e);
                }
            }

            @Override
            public void end(Point point) {
                try {
                    manager.touchMove(point.getX(), point.getY());
                    manager.touchUp(point.getX(), point.getY());
                } catch (IOException e) {
                    LOG.log(Level.SEVERE, "Error sending drag end event", e);
                }
            }
        });
    }
--------------------------------------------------------------------------------

== 參考資料 ==

 * http://androidxref.com/source/xref/sdk/monkeyrunner/src/com/android/monkeyrunner/MonkeyDevice.java[Cross Reference: /sdk/monkeyrunner/src/com/android/monkeyrunner/MonkeyDevice.java]

