= link:monkeyrunner.html[monkeyrunner] / `monkeyrunner` CLI =
:title: [monkeyrunner] monkeyrunner CLI

--------------------------------------------------------------------------------
$ cat `which monkeyrunner`
...
# need to use "java.ext.dirs" because "-jar" causes classpath to be ignored <1>
# might need more memory, e.g. -Xmx128M
exec java -Xmx128M $os_opts $java_debug -Djava.ext.dirs="$frameworkdir:$swtpath" -Djava.library.path="$libdir" -Dcom.android.monkeyrunner.bindir="$progdir" -jar "$jarpath" "$@" <2>
$
$ monkeyrunner
Jython 2.5.0 (Release_2_5_0:6476, Jun 16 2009, 13:33:26) <3>
[OpenJDK 64-Bit Server VM (Sun Microsystems Inc.)] on java1.6.0_20
>>> import sys; sys.path
['/home/jeremy/dev/android/tools/lib/monkeyrunner.jar', '/storage/dev/android-sdk-r16-linux/tools/lib/Lib', '/storage/dev/android-sdk-r16-linux/tools/lib/jython.jar/Lib', '__classpath__', '__pyclasspath__/'] <4>
>>>
--------------------------------------------------------------------------------
<1> 寫明了因為採用 `-jar` 的關係，所以 `-cp` 或 `$CLASSPATH` 都不會吃。
<2> 這裡的 `$frameworkdir` 其實是 `$ANDROID_HOME/tools/lib`，只要把其他要出現在 classpath 裡的 Jar 檔丟到這裡面就可以了。
<3> `monkeyrunner` 預設搭配內附的 Jython 2.5.0，可以換掉 `$ANDROID_HOME/tools/lib/jython.jar` 自行昇級。
<4> `$ANDROID_HOME/tools/lib/Lib` 固定會出現在 `PYTHONPATH` 裡 （雖然 `Lib/` 這個子資料夾預設不存在），只要把 `.py` 放進那裡就可以進行擴充。

.`monkeyrunner.bat`
--------------------------------------------------------------------------------
call %java_exe% -Xmx512m -Djava.ext.dirs=%frameworkdir%;%swt_path% -Dcom.android.monkeyrunner.bindir=..\framework -jar %jarpath% %* <1>
--------------------------------------------------------------------------------
<1> Windows 下的 `monkeyrunner.bat` 使用起來很麻煩，`.py` 要給絕對路徑，而且中間不能有空白才行。

== 參考資料 ==

 * http://developer.android.com/tools/help/monkeyrunner_concepts.html[monkeyrunner | Android Developers]

////////////////////////////////////////////////////////////////////////////////
** You can either run monkeyrunner programs from a file, or enter monkeyrunner statements in an interactive session. You do both by invoking the `monkeyrunner` command which is found in the `tools/` subdirectory of your SDK directory. If you provide a filename as an argument, the monkeyrunner command runs the file's contents as a Python program; otherwise, it starts an interactive session.
** `monkeyrunner -plugin <plugin_jar> <program_filename> <program_options>`
** `-plugin <plugin_jar>` (Optional) Specifies a `.jar` file containing a plugin for monkeyrunner. To specify more than one file, include the argument multiple times.
** You can generate an API reference for monkeyrunner by running: `monkeyrunner help.py <format> <outfile>`. `<format>` is either `text` for plain text output or `html` for HTML output.
////////////////////////////////////////////////////////////////////////////////

