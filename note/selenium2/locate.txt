= link:selenium2.html[Selenium 2/WebDriver] / Locating UI Elements =
:title: [Selenium 2/WebDriver] 定位操作的目標

要對畫面上的某個 element 進行操作，必須先定位（locate）到它才行。

`WebDriver` 跟 `WebElement` 都提供有 `findElement` 跟 `findElements` 的方法，可以用來取得一或多個 `WebElement`。兩者的差別在於 `findElement` 在畫面上找不到符合條件的 element 時，會丟出 `NoSuchElementException`，但 `findElements` 並不會丟出例外，而是傳回空的清單。

--------------------------------------------------------------------------------
>>> from selenium.webdriver.common.by import By
>>> element = driver.find_element(by=By.ID, value='username_field')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: type object 'By' has no attribute 'Name'
>>> a = driver.find_element(By.ID, 'username_field')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/usr/local/lib/python2.6/dist-packages/selenium/webdriver/remote/webdriver.py", line 671, in find_element
    {'using': by, 'value': value})['value']
  File "/usr/local/lib/python2.6/dist-packages/selenium/webdriver/remote/webdriver.py", line 156, in execute
    self.error_handler.check_response(response)
  File "/usr/local/lib/python2.6/dist-packages/selenium/webdriver/remote/errorhandler.py", line 147, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.NoSuchElementException: Message: u'Unable to locate element: {"method":"id","selector":"username_field"}' 
>>> driver.find_elements(by=By.ID, value='username_field')
[]
>>>
>>> element = driver.find_element(By.NAME, 'username_field')
>>> type(element)
<class 'selenium.webdriver.remote.webelement.WebElement'>
>>> driver.find_elements(By.NAME, 'username_field')
[<selenium.webdriver.remote.webelement.WebElement object at 0x23d2210>]
--------------------------------------------------------------------------------

其中 `By.NAME` 跟 `'username_field'` 的組合就是 locator，分別描述定位的方式（location strategy）跟比對的條件（location）。目前 WebDriver 支援九種 location strategy：

 * ID (`By.ID`)
 * Class Name (`By.CLASS_NAME`)
 * Tag Name (`By.TAG_NAME`)
 * Name (`By.NAME`)
 * Link Text (`By.LINK_TEXT`)
 * Partial Link Text (`By.PARTIAL_LINK_TEXT`)
 * CSS (`By.CSS_SELECTOR`)
 * XPath (`By.XPATH`)
 * JavaScript (`By.??`)

[TIP]
================================================================================
上面 `driver.find_element(By.NAME, 'username_field')` 的用法有 Java 的影子，因此 Python binding 另外提供了 `find_element_by_xxx` 的方法，例如 `find_element_by_name('username_field')`，比較符合 Python 開發人員的習慣。

不過，`find_element_by_xxx` 限定了程式可以處理的 location strategy，如果要套用 link:../selenium/selenium-ui-mapping.html[UI Mapping] 的話，勢必要把 location strategy 跟 location 視為一個單位才行。

--------------------------------------------------------------------------------
>>> from selenium.webdriver.common.by import By
>>> loc_username = (By.NAME, 'username_field')
>>> element = driver.find_element(*loc_username)
--------------------------------------------------------------------------------
================================================================================

== 參考資料 ==

 * http://seleniumhq.org/docs/03_webdriver.html#locating-ui-elements-webelements[Selenium 2.0 and WebDriver > Locating UI Elements (WebElements)]

