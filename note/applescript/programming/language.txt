= link:programming.html[AppleScript / Programming] / Language =
:title: [AppleScript] Language

 * English-like language
 * `--` 後面都被視為 comments，可以接在其他 statements 之後。
 * 在輸入的過程中是紫色，按 compile 後才會變色。由於變數跟其他 reserved keywords 不容易辨別，所以顏色很重要！
   ** 反過來說，要在 Script Editor 外面閱讀 AppleScript，沒有顏色的輔助，讀起來會很困難。
   ** language keywords 顯示黑色，變數名稱顯示綠色，application keywords、(addition) command names 等都顯示藍色。
 * application keywords 跟 (addition) command names 有什麼不同??
   ** AppleScript itself has a wide range of commands that can be applied to any program or item in OS X 
 * statement 太長時可以用 `¬` 延續。按 Option + L 或 Option + Return。
 * 每個 scriptable application 都有自己的 keywords，也算是一種 DSL。因此每個 application 的操作方式都要個別學過。

== 參考資料 ==

 * https://developer.apple.com/library/mac/#documentation/applescript/conceptual/applescriptlangguide/introduction/ASLR_intro.html[AppleScript Language Guide]
 * http://www.macosxautomation.com/applescript/features/unicode.html[AppleScript: Unicode Support] ^https://diigo.com/0yqc4[閱讀]^
////////////////////////////////////////////////////////////////////////////////
** AppleScript 2.0 in Mac OS X Leopard is a significant release with important updates and modifications
** AppleScript is now entirely Unicode-based. Comments and text constants in scripts may contain any Unicode characters, and all text processing is done in Unicode, so all characters are preserved correctly regardless of the user’s language preferences.
** There is no longer a distinction between Unicode and non-Unicode text. There is exactly one text class, named “text”: that is, class of "How now brown cow" returns text.
** For compatibility with pre-2.0 AppleScript, string and Unicode text are still defined, but are considered synonyms for text. In addition, text, string, and Unicode text will all compare as equal. For example, class of "how now brown cow" is string is true, even though class of "how now brown cow" returns text. It is still possible for applications to distinguish between the three different types, even though AppleScript itself does not.
** For compatibility with Asian national encodings, “《” and “》” are allowed as synonyms for “«” and “»”, since the latter do not exist in some Asian encodings.
////////////////////////////////////////////////////////////////////////////////

