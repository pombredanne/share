= link:programming.html[AppleScript / Programming] / Variables =
:title: [AppleScript] Variables

--------------------------------------------------------------------------------
set who to 'World'
tell application "Finder"
    display dialog "Hello, " & who & "!"
end tell
--------------------------------------------------------------------------------

 * `set variable_name to value` - 宣告變數，不用描述 type
 * 內部是有型態的，從 dictionary 的說明，每個 property 都標示有型態（例如 specifier?? boolean、integer、real...）就看得出來。
 * 變數名稱 identifier 不分大小寫，但 run/compile 時會自動做調整（跟第一次宣告時的大小寫一致）。字母或底線開頭，後面可以是英數字或底線。
 * 字串用雙引號框起來，不支援單引號的用法。串接用 `&`。

== 參考資料 ==

.書籍
--
 * http://www.apress.com/9781430223610[Apress - Learn AppleScript: The Comprehensive Guide to Scripting and Automation on Mac OS X, 3rd Edition] (2010.05) - p295
////////////////////////////////////////////////////////////////////////////////
** In addition to the words reserved by the AppleScript language, every scriptable application or scripting addition?? can reserve its own words.
** In some cases - for example, if the reserved word is a property name - then the script will compile but will propably throw an error or behave unexpectedly when it is run.
** you will tend to remember commonly used keywords and know not to use them as variable names. It's unlikely you'll remember them all.
** AppleScript, scriptable applications, and scripting additions often use single words as keywords. Multiword keywords are almost always written with spaces between each word (變數名稱不能包含空白，是最大的差異), however, so multiword identifiers are much less likely to conflict. I always use at least two words in my variable identifiers - for example, user_name or documentFile. 駱駝文，找不出來前面要加什麼時，用 `the` 當 prefix 好像也不錯，符合英文文法。用底線拆開兩個字也不錯，但好像太 technical 了一點
** even if they do compile, you can rely on AppleScript's built-in syntax coloring to identify them for you. keywords are colored in various shades of blue and purple depending on their exact meaning, while user-defined identifiers are colored in green -> if they appear in a keyword style, you will know to change them.
** a good technique is to begin all of your handler names with a verb (for example, count_sheep) and all your variable names with a noun (such as sheep_count)
** single-character names are not always a bad choice. certain characters are commonly assumed to have specific meanings when used as variable names. For example, i and j may be used to represent unimportant integer values.
** In large scripts, always adding a standard prefix such as p_ or g_ to property?? and global names can help the reader to distinguish the from local variables
////////////////////////////////////////////////////////////////////////////////
--

.文件
--
 * https://developer.apple.com/library/mac/#documentation/applescript/conceptual/applescriptlangguide/conceptual/ASLR_lexical_conventions.html#//apple_ref/doc/uid/TP40000983-CH214-SW4[AppleScript Language Guide: AppleScript Lexical Conventions > Identifiers]
--

