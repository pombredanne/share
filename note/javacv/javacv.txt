= link:../opencv/opencv.html[OpenCV] / JavaCV =
:title: [OpenCV] JavaCV

== 延伸閱讀 ==

 * link:start.html[新手上路]

== 參考資料 ==

.網站
--
 * http://code.google.com/p/javacv/[JavaCV] ^http://diigo.com/0w7oe[閱讀]^
 * http://ganeshtiwaridotcomdotnp.blogspot.tw/search/label/OpenCV-JavaCV[GT's Blog: OpenCV-JavaCV]
 * http://opencvlover.blogspot.tw/search/label/javacv[OpenCV Lover: javacv]
--

.社群
--
 * https://groups.google.com/forum/?fromgroups#!forum/javacv[javacv - Google Groups]
--

.文件
--
 * http://ganeshtiwaridotcomdotnp.blogspot.tw/2011/12/opencv-javacv-eclipse-project.html[GT's Blog: OpenCV-JavaCV : eclipse project configuration windows 7] (2011-12-16)
 * http://ganeshtiwaridotcomdotnp.blogspot.tw/2011/12/javacv-capture-image-from-webcam.html[GT's Blog: Java Code : Capture Image from webcam using JavaCV] (2011-12) - `OpenCVFrameGrabber.grab()` 可以取得影像。
 * http://tkgospodinov.com/computer-vision-face-detection-in-java-with-opencv-using-javacv/[Computer Vision – Face Detection in Java with OpenCV using JavaCV - TK Gospodinov] (2010-09-23)
--

////////////////////////////////////////////////////////////////////////////////

 * wrappers to common libraries (computer vision) - OpenCV (required), OpenKinect...
 * complete APIs exposed, `com.googlecode.javacv.cpp` (support Android)
 * lack of documents, a lot of samples
   ** http://code.google.com/p/javacv/source/browse/samples/[/samples/ - javacv]
   ** http://code.google.com/p/javacv/source/browse?repo=procamcalib[ProCamCalib]
   ** http://code.google.com/p/javacv/source/browse?repo=procamtracker[ProCamTracker]
   ** http://code.google.com/p/javacv/source/browse?repo=examples[Examples]
   ** http://code.google.com/p/javacv/wiki/OpenCV2_Cookbook_Examples[OpenCV2 Cookbook Examples]
 * hardware accelerated full-screen image display (`CanvasFrame`, `GLCanvasFrame`)

////////////////////////////////////////////////////////////////////////////////

