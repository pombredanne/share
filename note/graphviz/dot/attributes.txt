= link:dot.html[Graphviz / DOT Graph] / Attributes =
:title: [Graphviz][DOT] Attributes

TIP: 1 英吋（inch） = 72 points

`labelangle = <angle>`:: 設定 head/tail label 跟 node 之間形成的這條線，跟 edge 的角度為 'angle' 度（順時鐘是負值，逆時鐘是正值）。
+
--
[width="60%",frame="none",grid="none",cols="l,d"]
|===============================================================================
|
digraph {
  ranksep = 1
  nodesep = 1
  a -> b [ taillabel = "tail"
           headlabel = "head"
           labelangle = 45 # 逆時鐘 45 度
           labeldistance = 3.6
         ]
  a -> c
}
|image:attributes/labelangle-1.svg.png[]
|===============================================================================

[width="60%",frame="none",grid="none",cols="l,d"]
|===============================================================================
|
digraph {
  ranksep = 1
  nodesep = 1
  a -> b [ taillabel = "tail"
           headlabel = "head"
           labelangle = -45 # 順時鐘 45 度
           labeldistance = 3.6
         ]
  a -> c
}
|image:attributes/labelangle-2.svg.png[]
|===============================================================================
--

`labeldistance = <scale>`:: 設定 head/tail label 相對於 node 的距離有 'scale' 個單位（每個單位的長度是 10 point）。
+
--
這裡刻意安排 `labelangle = 0` 讓 head/tail label 可以沿著 edge 走，而且 node 間的距離用 `ranksep = 1` 設定成 1 inch (72 points)，方便量測 `labeldistance` 的效果。

[width="60%",frame="none",grid="none",cols="l,d"]
|===============================================================================
|
digraph {
  rankdir = LR
  ranksep = 1
  a -> b [ taillabel = "tail"
           headlabel = "head"
           labeldistance = 0 # 貼著 node
           labelangle = 0
         ]
}
|image:attributes/labeldistance-1.dot.png[]
|===============================================================================

將 `labeldistance` 調整成 7.2 (7.2 x 10 point = 72 points = 1 inch)，剛好是 edge 的長度，結果就是 head label 跟 tail label 的位置剛好對調了。

[width="60%",frame="none",grid="none",cols="l,d"]
|===============================================================================
|
digraph {
  rankdir = LR
  ranksep = 1
  a -> b [ taillabel = "tail"
           headlabel = "head"
           labeldistance = 7.2 # 剛好是 edge 的長度
           labelangle = 0
         ]
}
|image:attributes/labeldistance-2.dot.png[]
|===============================================================================
--

`labelloc = <loc>`:: 設定 label 的相對位置。
+
--
對 root graph 或 cluster 而言，'loc' 可以是 `t` (top) 或 `b` (bottom)。其中，root graph 的 label 預設擺在上方，而 cluster 則是預設擺在下方。

[width="60%",frame="none",grid="none",cols="l,d"]
|===============================================================================
|
digraph {
  label = "Root Graph"
  a -> b
  subgraph cluster_lang {
    label = "Sub Graph (Cluster)"
    b
  }
}
|image:attributes/labelloc-1.dot.png[]
|===============================================================================

把 root graph 跟 cluster 預設擺放 label 的位置調換過來。

[width="60%",frame="none",grid="none",cols="l,d"]
|===============================================================================
|
# 
digraph {
  label = "Root Graph"
  labelloc = t
  a -> b
  subgraph cluster_lang {
    label = "Sub Graph (Cluster)"
    labelloc = b
    b
  }
}
|image:attributes/labelloc-2.dot.png[]
|===============================================================================

對 node 而言，'loc' 可以是 `t` (top)、`b` (bottom) 或 `c` (center)。

由於 label 永遠在 node 的框框裡，這裡的 `t`、`b`、`c` 分別表示 label 在 node 的框框裡要靠上、靠下、還是垂直置中，當然前題是 node 的高度要大於 label。

[width="60%",frame="none",grid="none",cols="l,d"]
|===============================================================================
|
digraph {
  node [ shape = box, height = 1]  
  TOP [ labelloc = t ]
  BOTTOM [ labelloc = b ]
  CENTER [ labelloc = c ]
}
|image:attributes/labelloc-node.dot.png[]
|===============================================================================
--

`nodesep = <sep>`:: 設定同一 rank 中，兩個 node 間的最小距離為 'sep' 英吋。
+
--
下面 b 跟 c 屬於同一個 rank，可以用 `nodesep` 來控制它們之間的距離。

[width="60%",frame="none",grid="none",cols="l,d"]
|===============================================================================
|
digraph {
  nodesep = 0.2
  a -> b
  a -> c
}
|image:attributes/nodesep-1.dot.png[]
|===============================================================================

將 node 間的距離放上 5 倍，但 a 跟 b/c 間的距離不受影響。

[width="60%",frame="none",grid="none",cols="l,d"]
|===============================================================================
|
digraph {
  nodesep = 1
  a -> b
  a -> c
}
|image:attributes/nodesep-2.dot.png[]
|===============================================================================
--

`ranksep = <sep>`:: 設定兩個 rank 間的最小距離為 'sep' 英吋。
+
--
下面 a 跟 b/c 屬於不同 rank，可以用 `ranksep` 來控制兩個 rank 間的距離。

[width="60%",frame="none",grid="none",cols="l,d"]
|===============================================================================
|
digraph {
  ranksep = 0.2
  a -> b
  a -> c
}
|image:attributes/ranksep-1.dot.png[]
|===============================================================================

將 rank 間的距離放大 5 倍，但 b 跟 c 之間的距離不受影響。

[width="60%",frame="none",grid="none",cols="l,d"]
|===============================================================================
|
digraph {
  ranksep = 1
  a -> b
  a -> c
}
|image:attributes/ranksep-2.dot.png[]
|===============================================================================
--

////////////////////////////////////////////////////////////////////////////////

 * 不同 graph object 適用的 attributes 不同。
 * attribute 適用不同的 graph objects，而且
 * attribute 有 type，常用的有 
 * attributes = name-value pairs (`name = value`)，其中 name 有大小寫之分。
 * `abc [fillcolor = red]`, `abc -> def [arrowhead = diamond]`
 * 在 undirected graph 下，例如 `A -- B`，就像 `A -> B` 一樣，其中 A 會被視為 tail，而 B 會被視為 head。
 * `int` 整數, `double` 小數
 * `bool` - True 可以用 `true` 或 `yes`，相反地 Fasle 可以用 `false` 或 `no` 表示
 * `string` - 用雙引號框起來的字串，除了 `\"` 表示雙引號之外，不支援其他 escape sequences。
 * `escString` - 跟 `string` 一樣，
 * 這裡要列出一些常用的 attributes，可以讓其他文件引用。

常用的 attributes 有：(通常都是小寫，除了 xxxURL 以外)

 * `label`, `headlabel`, `taillabel`
 * `URL`、`labelURL`
 * `bgcolor`、`color`, `fontcolor`
 * `arrowhead`、`arrowtail`
 * `rank`, `randir`
 * `sep` - 控制 node 的 margin
 * `shape` - 預設是 `ellipse`，其他還可以是
 * `labeldistance` 跟 `labelangle` 可以巧妙控制 head/tail label，但無法分開控制 head 跟 tail 是比較不方便的地方

如果給予 layout engine 太多的提示，會建議利用專用的工具。例如用 PlantUML 來劃 UML 會比直接用 Graphviz 來得方便。
////////////////////////////////////////////////////////////////////////////////

== 參考資料 ==

 * http://www.graphviz.org/content/dot-language[The DOT Language | Graphviz]
 * http://www.graphviz.org/content/attrs[Node, Edge and Graph Attributes | Graphviz]

