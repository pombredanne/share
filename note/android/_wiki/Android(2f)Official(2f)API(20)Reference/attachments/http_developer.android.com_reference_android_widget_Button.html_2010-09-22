   Android Developers
     * Home Startseite ホーム 主页 首頁
     * SDK
     * Dev Guide Handbuch Guía Guide Guida 開発ガイド 开发人员指南 開發指南
     * Reference Referenz Referencia Référence Riferimento リファレンス 参考 參考資料
     * Resources
     * Videos ビデオ
     * Blog ブログ 博客 網誌

   Language: [English   ] Android.com
   _________________________________

                                    Search

   [_] Filter by API Level:

   Package Index | Class Index
     * android
     * android.accessibilityservice
     * android.accounts
     * android.app
     * android.app.admin
     * android.app.backup
     * android.appwidget
     * android.bluetooth
     * android.content
     * android.content.pm
     * android.content.res
     * android.database
     * android.database.sqlite
     * android.gesture
     * android.graphics
     * android.graphics.drawable
     * android.graphics.drawable.shapes
     * android.hardware
     * android.inputmethodservice
     * android.location
     * android.media
     * android.net
     * android.net.http
     * android.net.wifi
     * android.opengl
     * android.os
     * android.preference
     * android.provider
     * android.sax
     * android.service.wallpaper
     * android.speech
     * android.speech.tts
     * android.telephony
     * android.telephony.cdma
     * android.telephony.gsm
     * android.test
     * android.test.mock
     * android.test.suitebuilder
     * android.text
     * android.text.format
     * android.text.method
     * android.text.style
     * android.text.util
     * android.util
     * android.view
     * android.view.accessibility
     * android.view.animation
     * android.view.inputmethod
     * android.webkit
     * android.widget
     * dalvik.bytecode
     * dalvik.system
     * java.awt.font
     * java.beans
     * java.io
     * java.lang
     * java.lang.annotation
     * java.lang.ref
     * java.lang.reflect
     * java.math
     * java.net
     * java.nio
     * java.nio.channels
     * java.nio.channels.spi
     * java.nio.charset
     * java.nio.charset.spi
     * java.security
     * java.security.acl
     * java.security.cert
     * java.security.interfaces
     * java.security.spec
     * java.sql
     * java.text
     * java.util
     * java.util.concurrent
     * java.util.concurrent.atomic
     * java.util.concurrent.locks
     * java.util.jar
     * java.util.logging
     * java.util.prefs
     * java.util.regex
     * java.util.zip
     * javax.crypto
     * javax.crypto.interfaces
     * javax.crypto.spec
     * javax.microedition.khronos.egl
     * javax.microedition.khronos.opengles
     * javax.net
     * javax.net.ssl
     * javax.security.auth
     * javax.security.auth.callback
     * javax.security.auth.login
     * javax.security.auth.x500
     * javax.security.cert
     * javax.sql
     * javax.xml
     * javax.xml.datatype
     * javax.xml.namespace
     * javax.xml.parsers
     * javax.xml.transform
     * javax.xml.transform.dom
     * javax.xml.transform.sax
     * javax.xml.transform.stream
     * javax.xml.validation
     * javax.xml.xpath
     * junit.framework
     * junit.runner
     * org.apache.http
     * org.apache.http.auth
     * org.apache.http.auth.params
     * org.apache.http.client
     * org.apache.http.client.entity
     * org.apache.http.client.methods
     * org.apache.http.client.params
     * org.apache.http.client.protocol
     * org.apache.http.client.utils
     * org.apache.http.conn
     * org.apache.http.conn.params
     * org.apache.http.conn.routing
     * org.apache.http.conn.scheme
     * org.apache.http.conn.ssl
     * org.apache.http.conn.util
     * org.apache.http.cookie
     * org.apache.http.cookie.params
     * org.apache.http.entity
     * org.apache.http.impl
     * org.apache.http.impl.auth
     * org.apache.http.impl.client
     * org.apache.http.impl.conn
     * org.apache.http.impl.conn.tsccm
     * org.apache.http.impl.cookie
     * org.apache.http.impl.entity
     * org.apache.http.impl.io
     * org.apache.http.io
     * org.apache.http.message
     * org.apache.http.params
     * org.apache.http.protocol
     * org.apache.http.util
     * org.json
     * org.w3c.dom
     * org.w3c.dom.ls
     * org.xml.sax
     * org.xml.sax.ext
     * org.xml.sax.helpers
     * org.xmlpull.v1
     * org.xmlpull.v1.sax2

     * Interfaces
          + AbsListView.OnScrollListener
          + AbsListView.RecyclerListener
          + Adapter
          + AdapterView.OnItemClickListener
          + AdapterView.OnItemLongClickListener
          + AdapterView.OnItemSelectedListener
          + AutoCompleteTextView.Validator
          + Checkable
          + Chronometer.OnChronometerTickListener
          + CompoundButton.OnCheckedChangeListener
          + DatePicker.OnDateChangedListener
          + ExpandableListAdapter
          + ExpandableListView.OnChildClickListener
          + ExpandableListView.OnGroupClickListener
          + ExpandableListView.OnGroupCollapseListener
          + ExpandableListView.OnGroupExpandListener
          + Filter.FilterListener
          + Filterable
          + FilterQueryProvider
          + HeterogeneousExpandableList
          + ListAdapter
          + MediaController.MediaPlayerControl
          + MultiAutoCompleteTextView.Tokenizer
          + PopupWindow.OnDismissListener
          + RadioGroup.OnCheckedChangeListener
          + RatingBar.OnRatingBarChangeListener
          + SectionIndexer
          + SeekBar.OnSeekBarChangeListener
          + SimpleAdapter.ViewBinder
          + SimpleCursorAdapter.CursorToStringConverter
          + SimpleCursorAdapter.ViewBinder
          + SimpleCursorTreeAdapter.ViewBinder
          + SlidingDrawer.OnDrawerCloseListener
          + SlidingDrawer.OnDrawerOpenListener
          + SlidingDrawer.OnDrawerScrollListener
          + SpinnerAdapter
          + TabHost.OnTabChangeListener
          + TabHost.TabContentFactory
          + TextView.OnEditorActionListener
          + TimePicker.OnTimeChangedListener
          + ViewSwitcher.ViewFactory
          + WrapperListAdapter
          + ZoomButtonsController.OnZoomListener
     * Classes
          + AbsListView
          + AbsListView.LayoutParams
          + AbsoluteLayout
          + AbsoluteLayout.LayoutParams
          + AbsSeekBar
          + AbsSpinner
          + AdapterView<T extends Adapter>
          + AdapterView.AdapterContextMenuInfo
          + AlphabetIndexer
          + AnalogClock
          + ArrayAdapter<T>
          + AutoCompleteTextView
          + BaseAdapter
          + BaseExpandableListAdapter
          + Button
          + CheckBox
          + CheckedTextView
          + Chronometer
          + CompoundButton
          + CursorAdapter
          + CursorTreeAdapter
          + DatePicker
          + DialerFilter
          + DigitalClock
          + EditText
          + ExpandableListView
          + ExpandableListView.ExpandableListContextMenuInfo
          + Filter
          + Filter.FilterResults
          + FrameLayout
          + FrameLayout.LayoutParams
          + Gallery
          + Gallery.LayoutParams
          + GridView
          + HeaderViewListAdapter
          + HorizontalScrollView
          + ImageButton
          + ImageSwitcher
          + ImageView
          + LinearLayout
          + LinearLayout.LayoutParams
          + ListView
          + ListView.FixedViewInfo
          + MediaController
          + MultiAutoCompleteTextView
          + MultiAutoCompleteTextView.CommaTokenizer
          + PopupWindow
          + ProgressBar
          + QuickContactBadge
          + RadioButton
          + RadioGroup
          + RadioGroup.LayoutParams
          + RatingBar
          + RelativeLayout
          + RelativeLayout.LayoutParams
          + RemoteViews
          + ResourceCursorAdapter
          + ResourceCursorTreeAdapter
          + Scroller
          + ScrollView
          + SeekBar
          + SimpleAdapter
          + SimpleCursorAdapter
          + SimpleCursorTreeAdapter
          + SimpleExpandableListAdapter
          + SlidingDrawer
          + Spinner
          + TabHost
          + TabHost.TabSpec
          + TableLayout
          + TableLayout.LayoutParams
          + TableRow
          + TableRow.LayoutParams
          + TabWidget
          + TextSwitcher
          + TextView
          + TextView.SavedState
          + TimePicker
          + Toast
          + ToggleButton
          + TwoLineListItem
          + VideoView
          + ViewAnimator
          + ViewFlipper
          + ViewSwitcher
          + ZoomButton
          + ZoomButtonsController
          + ZoomControls
     * Enums
          + ImageView.ScaleType
          + TextView.BufferType
     * Exceptions
          + RemoteViews.ActionException

   Package Index | Class Index
   Summary: Inherited XML Attrs | Inherited Constants | Ctors | Inherited
   Methods | [Expand All]
   Since: API Level 1
   public class

Button

   extends TextView
   java.lang.Object
      ↳ android.view.View
           ↳ android.widget.TextView
                ↳ android.widget.Button
      [triangle-closed.png] Known Direct Subclasses
      CompoundButton

   CompoundButton

                  A button with two states, checked and unchecked.
   [triangle-closed.png] Known Indirect Subclasses
   CheckBox, RadioButton, ToggleButton

   CheckBox

   A checkbox is a specific type of two-states button that can be either
   checked or unchecked.
   RadioButton

   A radio button is a two-states button that can be either checked or
   unchecked.
   ToggleButton Displays checked/unchecked states as a button with a
   "light" indicator and by default accompanied with the text "ON" or
   "OFF".

Class Overview

   Button represents a push-button widget. Push-buttons can be pressed, or
   clicked, by the user to perform an action. A typical use of a
   push-button in an activity would be the following:
 public class MyActivity extends Activity {
     protected void onCreate(Bundle icicle) {
         super.onCreate(icicle);

         setContentView(R.layout.content_layout_id);

         final Button button = (Button) findViewById(R.id.button_id);
         button.setOnClickListener(new View.OnClickListener() {
             public void onClick(View v) {
                 // Perform action on click
             }
         });
     }
 }

   See the Form Stuff tutorial.

   XML attributes

   See Button Attributes, TextView Attributes, View Attributes

Summary

   [Expand]
   Inherited XML Attributes
   [triangle-closed.png] From class android.widget.TextView

   Attribute Name Related Method Description
   android:autoLink setAutoLinkMask(int) Controls whether links such as
   urls and email addresses are automatically found and converted to
   clickable links.
   android:autoText setKeyListener(KeyListener) If set, specifies that
   this TextView has a textual input method and automatically corrects
   some common spelling errors.
   android:bufferType setText(CharSequence,TextView.BufferType) Determines
   the minimum type that getText() will return.
   android:capitalize setKeyListener(KeyListener) If set, specifies that
   this TextView has a textual input method and should automatically
   capitalize what the user types.
   android:cursorVisible setCursorVisible(boolean) Makes the cursor
   visible (the default) or invisible.
   android:digits setKeyListener(KeyListener) If set, specifies that this
   TextView has a numeric input method and that these specific characters
   are the ones that it will accept.
   android:drawableBottom
   setCompoundDrawablesWithIntrinsicBounds(Drawable,Drawable,Drawable,Draw
   able) The drawable to be drawn below the text.
   android:drawableLeft
   setCompoundDrawablesWithIntrinsicBounds(Drawable,Drawable,Drawable,Draw
   able) The drawable to be drawn to the left of the text.
   android:drawablePadding setCompoundDrawablePadding(int) The padding
   between the drawables and the text.
   android:drawableRight
   setCompoundDrawablesWithIntrinsicBounds(Drawable,Drawable,Drawable,Draw
   able) The drawable to be drawn to the right of the text.
   android:drawableTop
   setCompoundDrawablesWithIntrinsicBounds(Drawable,Drawable,Drawable,Draw
   able) The drawable to be drawn above the text.
   android:editable If set, specifies that this TextView has an input
   method.
   android:editorExtras setInputExtras(int) Reference to an <input-extras>
   XML resource containing additional data to supply to an input method,
   which is private to the implementation of the input method.
   android:ellipsize setEllipsize(TextUtils.TruncateAt) If set, causes
   words that are longer than the view is wide to be ellipsized instead of
   broken in the middle.
   android:ems setEms(int) Makes the TextView be exactly this many ems
   wide.
   android:freezesText setFreezesText(boolean) If set, the text view will
   include its current complete text inside of its frozen icicle in
   addition to meta-data such as the current cursor position.
   android:gravity setGravity(int) Specifies how to align the text by the
   view's x- and/or y-axis when the text is smaller than the view.
   android:height setHeight(int) Makes the TextView be exactly this many
   pixels tall.
   android:hint setHint(int) Hint text to display when the text is empty.
   android:imeActionId setImeActionLabel(CharSequence,int) Supply a value
   for EditorInfo.actionId used when an input method is connected to the
   text view.
   android:imeActionLabel setImeActionLabel(CharSequence,int) Supply a
   value for EditorInfo.actionLabel used when an input method is connected
   to the text view.
   android:imeOptions setImeOptions(int) Additional features you can
   enable in an IME associated with an editor to improve the integration
   with your application.
   android:includeFontPadding setIncludeFontPadding(boolean) Leave enough
   room for ascenders and descenders instead of using the font ascent and
   descent strictly.
   android:inputMethod setKeyListener(KeyListener) If set, specifies that
   this TextView should use the specified input method (specified by
   fully-qualified class name).
   android:inputType setRawInputType(int) The type of data being placed in
   a text field, used to help an input method decide how to let the user
   enter text.
   android:lineSpacingExtra setLineSpacing(float,float) Extra spacing
   between lines of text.
   android:lineSpacingMultiplier setLineSpacing(float,float) Extra spacing
   between lines of text, as a multiplier.
   android:lines setLines(int) Makes the TextView be exactly this many
   lines tall.
   android:linksClickable setLinksClickable(boolean) If set to false,
   keeps the movement method from being set to the link movement method
   even if autoLink causes links to be found.
   android:marqueeRepeatLimit setMarqueeRepeatLimit(int) The number of
   times to repeat the marquee animation.
   android:maxEms setMaxEms(int) Makes the TextView be at most this many
   ems wide.
   android:maxHeight setMaxHeight(int) Makes the TextView be at most this
   many pixels tall.
   android:maxLength setFilters(InputFilter) Set an input filter to
   constrain the text length to the specified number.
   android:maxLines setMaxLines(int) Makes the TextView be at most this
   many lines tall.
   android:maxWidth setMaxWidth(int) Makes the TextView be at most this
   many pixels wide.
   android:minEms setMinEms(int) Makes the TextView be at least this many
   ems wide.
   android:minHeight setMinHeight(int) Makes the TextView be at least this
   many pixels tall.
   android:minLines setMinLines(int) Makes the TextView be at least this
   many lines tall.
   android:minWidth setMinWidth(int) Makes the TextView be at least this
   many pixels wide.
   android:numeric setKeyListener(KeyListener) If set, specifies that this
   TextView has a numeric input method.
   android:password setTransformationMethod(TransformationMethod) Whether
   the characters of the field are displayed as password dots instead of
   themselves.
   android:phoneNumber setKeyListener(KeyListener) If set, specifies that
   this TextView has a phone number input method.
   android:privateImeOptions setPrivateImeOptions(String) An addition
   content type description to supply to the input method attached to the
   text view, which is private to the implementation of the input method.
   android:scrollHorizontally setHorizontallyScrolling(boolean) Whether
   the text is allowed to be wider than the view (and therefore can be
   scrolled horizontally).
   android:selectAllOnFocus setSelectAllOnFocus(boolean) If the text is
   selectable, select it all when the view takes focus instead of moving
   the cursor to the start or end.
   android:shadowColor setShadowLayer(float,float,float,int) Place a
   shadow of the specified color behind the text.
   android:shadowDx setShadowLayer(float,float,float,int) Horizontal
   offset of the shadow.
   android:shadowDy setShadowLayer(float,float,float,int) Vertical offset
   of the shadow.
   android:shadowRadius setShadowLayer(float,float,float,int) Radius of
   the shadow.
   android:singleLine setTransformationMethod(TransformationMethod)
   Constrains the text to a single horizontally scrolling line instead of
   letting it wrap onto multiple lines, and advances focus instead of
   inserting a newline when you press the enter key.
   android:text setText(CharSequence) Text to display.
   android:textAppearance Base text color, typeface, size, and style.
   android:textColor setTextColor(ColorStateList) Text color.
   android:textColorHighlight setHighlightColor(int) Color of the text
   selection highlight.
   android:textColorHint setHintTextColor(int) Color of the hint text.
   android:textColorLink setLinkTextColor(int) Text color for links.
   android:textScaleX setTextScaleX(float) Sets the horizontal scaling
   factor for the text.
   android:textSize setTextSize(float) Size of the text.
   android:textStyle setTypeface(Typeface) Style (bold, italic,
   bolditalic) for the text.
   android:typeface setTypeface(Typeface) Typeface (normal, sans, serif,
   monospace) for the text.
   android:width setWidth(int) Makes the TextView be exactly this many
   pixels wide.
   [triangle-closed.png] From class android.view.View
   Attribute Name Related Method Description
   android:background setBackgroundResource(int) A drawable to use as the
   background.
   android:clickable setClickable(boolean) Defines whether this view
   reacts to click events.
   android:contentDescription setContentDescription(CharSequence) Defines
   text that briefly describes content of the view.
   android:drawingCacheQuality setDrawingCacheQuality(int) Defines the
   quality of translucent drawing caches.
   android:duplicateParentState When this attribute is set to true, the
   view gets its drawable state (focused, pressed, etc.) from its direct
   parent rather than from itself.
   android:fadingEdge setVerticalFadingEdgeEnabled(boolean) Defines which
   edges should be fadeded on scrolling.
   android:fadingEdgeLength getVerticalFadingEdgeLength() Defines the
   length of the fading edges.
   android:fitsSystemWindows Boolean internal attribute to adjust view
   layout based on system windows such as the status bar.
   android:focusable setFocusable(boolean) Boolean that controls whether a
   view can take focus.
   android:focusableInTouchMode setFocusableInTouchMode(boolean) Boolean
   that controls whether a view can take focus while in touch mode.
   android:hapticFeedbackEnabled setHapticFeedbackEnabled(boolean) Boolean
   that controls whether a view should have haptic feedback enabled for
   events such as long presses.
   android:id setId(int) Supply an identifier name for this view, to later
   retrieve it with View.findViewById() or Activity.findViewById().
   android:isScrollContainer Set this if the view will serve as a
   scrolling container, meaing that it can be resized to shrink its
   overall window so that there will be space for an input method.
   android:keepScreenOn setKeepScreenOn(boolean) Controls whether the
   view's window should keep the screen on while visible.
   android:longClickable setLongClickable(boolean) Defines whether this
   view reacts to long click events.
   android:minHeight Defines the minimum height of the view.
   android:minWidth Defines the minimum width of the view.
   android:nextFocusDown setNextFocusDownId(int) Defines the next view to
   give focus to when the next focus is FOCUS_DOWN If the reference refers
   to a view that does not exist or is part of a hierarchy that is
   invisible, a RuntimeException will result when the reference is
   accessed.
   android:nextFocusLeft setNextFocusLeftId(int) Defines the next view to
   give focus to when the next focus is FOCUS_LEFT.
   android:nextFocusRight setNextFocusRightId(int) Defines the next view
   to give focus to when the next focus is FOCUS_RIGHT If the reference
   refers to a view that does not exist or is part of a hierarchy that is
   invisible, a RuntimeException will result when the reference is
   accessed.
   android:nextFocusUp setNextFocusUpId(int) Defines the next view to give
   focus to when the next focus is FOCUS_UP If the reference refers to a
   view that does not exist or is part of a hierarchy that is invisible, a
   RuntimeException will result when the reference is accessed.
   android:onClick Name of the method in this View's context to invoke
   when the view is clicked.
   android:padding setPadding(int,int,int,int) Sets the padding, in
   pixels, of all four edges.
   android:paddingBottom setPadding(int,int,int,int) Sets the padding, in
   pixels, of the bottom edge; see padding.
   android:paddingLeft setPadding(int,int,int,int) Sets the padding, in
   pixels, of the left edge; see padding.
   android:paddingRight setPadding(int,int,int,int) Sets the padding, in
   pixels, of the right edge; see padding.
   android:paddingTop setPadding(int,int,int,int) Sets the padding, in
   pixels, of the top edge; see padding.
   android:saveEnabled setSaveEnabled(boolean) If unset, no state will be
   saved for this view when it is being frozen.
   android:scrollX The initial horizontal scroll offset, in pixels.
   android:scrollY The initial vertical scroll offset, in pixels.
   android:scrollbarAlwaysDrawHorizontalTrack Defines whether the
   horizontal scrollbar track should always be drawn.
   android:scrollbarAlwaysDrawVerticalTrack Defines whether the vertical
   scrollbar track should always be drawn.
   android:scrollbarDefaultDelayBeforeFade Defines the delay in
   milliseconds that a scrollbar waits before fade out.
   android:scrollbarFadeDuration Defines the delay in milliseconds that a
   scrollbar takes to fade out.
   android:scrollbarSize Sets the width of vertical scrollbars and height
   of horizontal scrollbars.
   android:scrollbarStyle Controls the scrollbar style and position.
   android:scrollbarThumbHorizontal Defines the horizontal scrollbar thumb
   drawable.
   android:scrollbarThumbVertical Defines the vertical scrollbar thumb
   drawable.
   android:scrollbarTrackHorizontal Defines the horizontal scrollbar track
   drawable.
   android:scrollbarTrackVertical Defines the vertical scrollbar track
   drawable.
   android:scrollbars Defines which scrollbars should be displayed on
   scrolling or not.
   android:soundEffectsEnabled setSoundEffectsEnabled(boolean) Boolean
   that controls whether a view should have sound effects enabled for
   events such as clicking and touching.
   android:tag Supply a tag for this view containing a String, to be
   retrieved later with View.getTag() or searched for with
   View.findViewWithTag().
   android:visibility setVisibility(int) Controls the initial visibility
   of the view.
   [Expand]
   Inherited Constants
   [triangle-closed.png] From class android.view.View

   int DRAWING_CACHE_QUALITY_AUTO

   Enables automatic quality mode for the drawing cache.
   int DRAWING_CACHE_QUALITY_HIGH

   Enables high quality mode for the drawing cache.
   int DRAWING_CACHE_QUALITY_LOW

   Enables low quality mode for the drawing cache.
   int[] EMPTY_STATE_SET Indicates the view has no states set.
   int[] ENABLED_FOCUSED_SELECTED_STATE_SET Indicates the view is enabled,
   focused and selected.
   int[] ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET Indicates the
   view is enabled, focused, selected and its window has the focus.
   int[] ENABLED_FOCUSED_STATE_SET Indicates the view is enabled and has
   the focus.
   int[] ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET Indicates the view is
   enabled, focused and its window has the focus.
   int[] ENABLED_SELECTED_STATE_SET Indicates the view is enabled and
   selected.
   int[] ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET Indicates the view is
   enabled, selected and its window has the focus.
   int[] ENABLED_STATE_SET Indicates the view is enabled.
   int[] ENABLED_WINDOW_FOCUSED_STATE_SET Indicates the view is enabled
   and that its window has focus.
   int FOCUSABLES_ALL View flag indicating whether
   addFocusables(ArrayList, int, int) should add all focusable Views
   regardless if they are focusable in touch mode.
   int FOCUSABLES_TOUCH_MODE View flag indicating whether
   addFocusables(ArrayList, int, int) should add only Views focusable in
   touch mode.
   int[] FOCUSED_SELECTED_STATE_SET Indicates the view is focused and
   selected.
   int[] FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET Indicates the view is
   focused, selected and its window has the focus.
   int[] FOCUSED_STATE_SET Indicates the view is focused.
   int[] FOCUSED_WINDOW_FOCUSED_STATE_SET Indicates the view has the focus
   and that its window has the focus.
   int FOCUS_BACKWARD Use with focusSearch(int).
   int FOCUS_DOWN Use with focusSearch(int).
   int FOCUS_FORWARD Use with focusSearch(int).
   int FOCUS_LEFT Use with focusSearch(int).
   int FOCUS_RIGHT Use with focusSearch(int).
   int FOCUS_UP Use with focusSearch(int).
   int GONE This view is invisible, and it doesn't take any space for
   layout purposes.
   int HAPTIC_FEEDBACK_ENABLED View flag indicating whether this view
   should have haptic feedback enabled for events such as long presses.
   int INVISIBLE This view is invisible, but it still takes up space for
   layout purposes.
   int KEEP_SCREEN_ON View flag indicating that the screen should remain
   on while the window containing this view is visible to the user.
   int NO_ID Used to mark a View that has no ID.
   int[] PRESSED_ENABLED_FOCUSED_SELECTED_STATE_SET Indicates the view is
   pressed, enabled, focused and selected.
   int[] PRESSED_ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET
   Indicates the view is pressed, enabled, focused, selected and its
   window has the focus.
   int[] PRESSED_ENABLED_FOCUSED_STATE_SET Indicates the view is pressed,
   enabled and focused.
   int[] PRESSED_ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET Indicates the
   view is pressed, enabled, focused and its window has the focus.
   int[] PRESSED_ENABLED_SELECTED_STATE_SET Indicates the view is pressed,
   enabled and selected.
   int[] PRESSED_ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET Indicates the
   view is pressed, enabled, selected and its window has the focus.
   int[] PRESSED_ENABLED_STATE_SET Indicates the view is pressed and
   enabled.
   int[] PRESSED_ENABLED_WINDOW_FOCUSED_STATE_SET Indicates the view is
   pressed, enabled and its window has the focus.
   int[] PRESSED_FOCUSED_SELECTED_STATE_SET Indicates the view is pressed,
   focused and selected.
   int[] PRESSED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET Indicates the
   view is pressed, focused, selected and its window has the focus.
   int[] PRESSED_FOCUSED_STATE_SET Indicates the view is pressed and
   focused.
   int[] PRESSED_FOCUSED_WINDOW_FOCUSED_STATE_SET Indicates the view is
   pressed, focused and its window has the focus.
   int[] PRESSED_SELECTED_STATE_SET Indicates the view is pressed and
   selected.
   int[] PRESSED_SELECTED_WINDOW_FOCUSED_STATE_SET Indicates the view is
   pressed, selected and its window has the focus.
   int[] PRESSED_WINDOW_FOCUSED_STATE_SET Indicates the view is pressed
   and its window has the focus.
   int SCROLLBARS_INSIDE_INSET The scrollbar style to display the
   scrollbars inside the padded area, increasing the padding of the view.
   int SCROLLBARS_INSIDE_OVERLAY The scrollbar style to display the
   scrollbars inside the content area, without increasing the padding.
   int SCROLLBARS_OUTSIDE_INSET The scrollbar style to display the
   scrollbars at the edge of the view, increasing the padding of the view.
   int SCROLLBARS_OUTSIDE_OVERLAY The scrollbar style to display the
   scrollbars at the edge of the view, without increasing the padding.
   int[] SELECTED_STATE_SET Indicates the view is selected.
   int[] SELECTED_WINDOW_FOCUSED_STATE_SET Indicates the view is selected
   and that its window has the focus.
   int SOUND_EFFECTS_ENABLED View flag indicating whether this view should
   have sound effects enabled for events such as clicking and touching.
   String VIEW_LOG_TAG The logging tag used by this class with
   android.util.Log.
   int VISIBLE This view is visible.
   int[] WINDOW_FOCUSED_STATE_SET Indicates the view's window has focus.
                      Public Constructors
   Button(Context context)
   Button(Context context, AttributeSet attrs)
   Button(Context context, AttributeSet attrs, int defStyle)
   [Expand]
   Inherited Methods
   [triangle-closed.png] From class android.widget.TextView

   void addTextChangedListener(TextWatcher watcher)
   Adds a TextWatcher to the list of those whose methods are called
   whenever this TextView's text changes.
   final void append(CharSequence text)
   Convenience method: Append the specified text to the TextView's display
   buffer, upgrading it to BufferType.EDITABLE if it was not already
   editable.
   void append(CharSequence text, int start, int end)
   Convenience method: Append the specified text slice to the TextView's
   display buffer, upgrading it to BufferType.EDITABLE if it was not
   already editable.
   void beginBatchEdit()
   boolean bringPointIntoView(int offset)
   Move the point, specified by the offset, into the view if it is needed.
   void cancelLongPress()
   Cancels a pending long press.
   void clearComposingText()
   Use BaseInputConnection.removeComposingSpans() to remove any IME
   composing state from this text view.
   int computeHorizontalScrollRange()

   Compute the horizontal range that the horizontal scrollbar represents.
   void computeScroll()
   Called by a parent to request that a child update its values for
   mScrollX and mScrollY if necessary.
   int computeVerticalScrollExtent()

   Compute the vertical extent of the horizontal scrollbar's thumb within
   the vertical range.
   int computeVerticalScrollRange()

   Compute the vertical range that the vertical scrollbar represents.
   void debug(int depth)
   Prints information about this view in the log output, with the tag
   VIEW_LOG_TAG.
   boolean didTouchFocusSelect()
   Returns true, only while processing a touch gesture, if the initial
   touch down event caused focus to move to the text view and as a result
   its selection changed.
   boolean dispatchPopulateAccessibilityEvent(AccessibilityEvent event)
   Dispatches an AccessibilityEvent to the View children to be populated.
   void drawableStateChanged()
   This function is called whenever the state of the view changes in such
   a way that it impacts the state of drawables being shown.
   void endBatchEdit()
   boolean extractText(ExtractedTextRequest request, ExtractedText
   outText)
   If this TextView contains editable content, extract a portion of it
   based on the information in request in to outText.
   final int getAutoLinkMask()
   Gets the autolink mask of the text.
   int getBaseline()

   Return the offset of the widget's text baseline from the widget's top
   boundary.
   int getBottomPaddingOffset()
   Amount by which to extend the bottom fading region.
   int getCompoundDrawablePadding()
   Returns the padding between the compound drawables and the text.
   Drawable[] getCompoundDrawables()
   Returns drawables for the left, top, right, and bottom borders.
   int getCompoundPaddingBottom()
   Returns the bottom padding of the view, plus space for the bottom
   Drawable if any.
   int getCompoundPaddingLeft()
   Returns the left padding of the view, plus space for the left Drawable
   if any.
   int getCompoundPaddingRight()
   Returns the right padding of the view, plus space for the right
   Drawable if any.
   int getCompoundPaddingTop()
   Returns the top padding of the view, plus space for the top Drawable if
   any.
   final int getCurrentHintTextColor()

   Return the current color selected to paint the hint text.
   final int getCurrentTextColor()

   Return the current color selected for normal text.
   boolean getDefaultEditable()
   Subclasses override this to specify that they have a KeyListener by
   default even if not specifically called for in the XML options.
   MovementMethod getDefaultMovementMethod()
   Subclasses override this to specify a default movement method.
   Editable getEditableText()
   Return the text the TextView is displaying as an Editable object.
   TextUtils.TruncateAt getEllipsize()
   Returns where, if anywhere, words that are longer than the view is wide
   should be ellipsized.
   CharSequence getError()
   Returns the error message that was set to be displayed with
   setError(CharSequence), or null if no error was set or if it the error
   was cleared by the widget after user input.
   int getExtendedPaddingBottom()
   Returns the extended bottom padding of the view, including both the
   bottom Drawable if any and any extra space to keep more than maxLines
   of text from showing.
   int getExtendedPaddingTop()
   Returns the extended top padding of the view, including both the top
   Drawable if any and any extra space to keep more than maxLines of text
   from showing.
   InputFilter[] getFilters()
   Returns the current list of input filters.
   void getFocusedRect(Rect r)
   When a view has focus and the user navigates away from it, the next
   view is searched for starting from the rectangle filled in by this
   method.
   boolean getFreezesText()
   Return whether this text view is including its entire text contents in
   frozen icicles.
   int getGravity()
   Returns the horizontal and vertical alignment of this TextView.
   CharSequence getHint()
   Returns the hint that is displayed when the text of the TextView is
   empty.
   final ColorStateList getHintTextColors()

   Return the color used to paint the hint text.
   int getImeActionId()
   Get the IME action ID previous set with setImeActionLabel(CharSequence,
   int).
   CharSequence getImeActionLabel()
   Get the IME action label previous set with
   setImeActionLabel(CharSequence, int).
   int getImeOptions()
   Get the type of the IME editor.
   Bundle getInputExtras(boolean create)
   Retrieve the input extras currently associated with the text view,
   which can be viewed as well as modified.
   int getInputType()
   Get the type of the content.
   final KeyListener getKeyListener()
   final Layout getLayout()
   float getLeftFadingEdgeStrength()
   Returns the strength, or intensity, of the left faded edge.
   int getLeftPaddingOffset()
   Amount by which to extend the left fading region.
   int getLineBounds(int line, Rect bounds)
   Return the baseline for the specified line (0...getLineCount() - 1) If
   bounds is not null, return the top, left, right, bottom extents of the
   specified line in it.
   int getLineCount()
   Return the number of lines of text, or 0 if the internal Layout has not
   been built.
   int getLineHeight()
   final ColorStateList getLinkTextColors()

   Returns the color used to paint links in the text.
   final boolean getLinksClickable()
   Returns whether the movement method will automatically be set to
   LinkMovementMethod if setAutoLinkMask(int) has been set to nonzero and
   links are detected in setText(char[], int, int).
   final MovementMethod getMovementMethod()
   TextPaint getPaint()
   int getPaintFlags()
   String getPrivateImeOptions()
   Get the private type of the content.
   float getRightFadingEdgeStrength()
   Returns the strength, or intensity, of the right faded edge.
   int getRightPaddingOffset()
   Amount by which to extend the right fading region.
   int getSelectionEnd()
   Convenience for getSelectionEnd(CharSequence).
   int getSelectionStart()
   Convenience for getSelectionStart(CharSequence).
   CharSequence getText()
   Return the text the TextView is displaying.
   static int getTextColor(Context context, TypedArray attrs, int def)
   Returns the default color from the TextView_textColor attribute from
   the AttributeSet, if set, or the default color from the
   TextAppearance_textColor from the TextView_textAppearance attribute, if
   TextView_textColor was not set directly.
   final ColorStateList getTextColors()
   Return the set of text colors.
   static ColorStateList getTextColors(Context context, TypedArray attrs)
   Returns the TextView_textColor attribute from the
   Resources.StyledAttributes, if set, or the TextAppearance_textColor
   from the TextView_textAppearance attribute, if TextView_textColor was
   not set directly.
   float getTextScaleX()
   float getTextSize()
   int getTopPaddingOffset()
   Amount by which to extend the top fading region.
   int getTotalPaddingBottom()
   Returns the total bottom padding of the view, including the bottom
   Drawable if any, the extra space to keep more than maxLines from
   showing, and the vertical offset for gravity, if any.
   int getTotalPaddingLeft()
   Returns the total left padding of the view, including the left Drawable
   if any.
   int getTotalPaddingRight()
   Returns the total right padding of the view, including the right
   Drawable if any.
   int getTotalPaddingTop()
   Returns the total top padding of the view, including the top Drawable
   if any, the extra space to keep more than maxLines from showing, and
   the vertical offset for gravity, if any.
   final TransformationMethod getTransformationMethod()
   Typeface getTypeface()
   URLSpan[] getUrls()
   Returns the list of URLSpans attached to the text (by Linkify or
   otherwise) if any.
   boolean hasSelection()
   Return true iff there is a selection inside this text view.
   void invalidateDrawable(Drawable drawable)
   Invalidates the specified Drawable.
   boolean isInputMethodTarget()
   Returns whether this text view is a current input method target.
   boolean isPaddingOffsetRequired()
   If the View draws content inside its padding and enables fading edges,
   it needs to support padding offsets.
   int length()
   Returns the length, in characters, of the text managed by this TextView
   boolean moveCursorToVisibleOffset()
   Move the cursor, if needed, so that it is at an offset that is visible
   to the user.
   void onAttachedToWindow()
   This is called when the view is attached to a window.
   void onBeginBatchEdit()
   Called by the framework in response to a request to begin a batch of
   edit operations through a call to link beginBatchEdit().
   boolean onCheckIsTextEditor()
   Check whether the called view is a text editor, in which case it would
   make sense to automatically display a soft input window for it.
   void onCommitCompletion(CompletionInfo text)
   Called by the framework in response to a text completion from the
   current input method, provided by it calling
   InputConnection.commitCompletion().
   void onCreateContextMenu(ContextMenu menu)
   Views should implement this if the view itself is going to add items to
   the context menu.
   InputConnection onCreateInputConnection(EditorInfo outAttrs)
   Create a new InputConnection for an InputMethod to interact with the
   view.
   void onDetachedFromWindow()
   This is called when the view is detached from a window.
   void onDraw(Canvas canvas)
   Implement this to do your drawing.
   void onEditorAction(int actionCode)
   Called when an attached input method calls
   InputConnection.performEditorAction() for this text view.
   void onEndBatchEdit()
   Called by the framework in response to a request to end a batch of edit
   operations through a call to link endBatchEdit().
   void onFinishTemporaryDetach()
   Called after onStartTemporaryDetach() when the container is done
   changing the view.
   void onFocusChanged(boolean focused, int direction, Rect
   previouslyFocusedRect)
   Called by the view system when the focus state of this view changes.
   boolean onKeyDown(int keyCode, KeyEvent event)
   Default implementation of KeyEvent.Callback.onKeyMultiple(): perform
   press of the view when KEYCODE_DPAD_CENTER or KEYCODE_ENTER is
   released, if the view is enabled and clickable.
   boolean onKeyMultiple(int keyCode, int repeatCount, KeyEvent event)
   Default implementation of KeyEvent.Callback.onKeyMultiple(): always
   returns false (doesn't handle the event).
   boolean onKeyShortcut(int keyCode, KeyEvent event)
   Called when an unhandled key shortcut event occurs.
   boolean onKeyUp(int keyCode, KeyEvent event)
   Default implementation of KeyEvent.Callback.onKeyMultiple(): perform
   clicking of the view when KEYCODE_DPAD_CENTER or KEYCODE_ENTER is
   released.
   void onMeasure(int widthMeasureSpec, int heightMeasureSpec)

   Measure the view and its content to determine the measured width and
   the measured height.
   boolean onPreDraw()
   Callback method to be invoked when the view tree is about to be drawn.
   boolean onPrivateIMECommand(String action, Bundle data)
   Called by the framework in response to a private command from the
   current method, provided by it calling
   InputConnection.performPrivateCommand().
   void onRestoreInstanceState(Parcelable state)
   Hook allowing a view to re-apply a representation of its internal state
   that had previously been generated by onSaveInstanceState().
   Parcelable onSaveInstanceState()
   Hook allowing a view to generate a representation of its internal state
   that can later be used to create a new instance with that same state.
   void onSelectionChanged(int selStart, int selEnd)
   This method is called when the selection has changed, in case any
   subclasses would like to know.
   void onStartTemporaryDetach()
   This is called when a container is going to temporarily detach a child,
   with ViewGroup.detachViewFromParent.
   void onTextChanged(CharSequence text, int start, int before, int after)
   This method is called when the text is changed, in case any subclasses
   would like to know.
   boolean onTextContextMenuItem(int id)
   Called when a context menu option for the text view is selected.
   boolean onTouchEvent(MotionEvent event)
   Implement this method to handle touch screen motion events.
   boolean onTrackballEvent(MotionEvent event)
   Implement this method to handle trackball motion events.
   void onWindowFocusChanged(boolean hasWindowFocus)
   Called when the window containing this view gains or loses focus.
   boolean performLongClick()
   Call this view's OnLongClickListener, if it is defined.
   void removeTextChangedListener(TextWatcher watcher)
   Removes the specified TextWatcher from the list of those whose methods
   are called whenever this TextView's text changes.
   final void setAutoLinkMask(int mask)
   Sets the autolink mask of the text.
   void setCompoundDrawablePadding(int pad)
   Sets the size of the padding between the compound drawables and the
   text.
   void setCompoundDrawables(Drawable left, Drawable top, Drawable right,
   Drawable bottom)
   Sets the Drawables (if any) to appear to the left of, above, to the
   right of, and below the text.
   void setCompoundDrawablesWithIntrinsicBounds(int left, int top, int
   right, int bottom)
   Sets the Drawables (if any) to appear to the left of, above, to the
   right of, and below the text.
   void setCompoundDrawablesWithIntrinsicBounds(Drawable left, Drawable
   top, Drawable right, Drawable bottom)
   Sets the Drawables (if any) to appear to the left of, above, to the
   right of, and below the text.
   void setCursorVisible(boolean visible)
   Set whether the cursor is visible.
   final void setEditableFactory(Editable.Factory factory)
   Sets the Factory used to create new Editables.
   void setEllipsize(TextUtils.TruncateAt where)
   Causes words in the text that are longer than the view is wide to be
   ellipsized instead of broken in the middle.
   void setEms(int ems)
   Makes the TextView exactly this many ems wide
   void setError(CharSequence error)
   Sets the right-hand compound drawable of the TextView to the "error"
   icon and sets an error message that will be displayed in a popup when
   the TextView has focus.
   void setError(CharSequence error, Drawable icon)
   Sets the right-hand compound drawable of the TextView to the specified
   icon and sets an error message that will be displayed in a popup when
   the TextView has focus.
   void setExtractedText(ExtractedText text)
   Apply to this text view the given extracted text, as previously
   returned by extractText(ExtractedTextRequest, ExtractedText).
   void setFilters(InputFilter[] filters)
   Sets the list of input filters that will be used if the buffer is
   Editable.
   boolean setFrame(int l, int t, int r, int b)
   Assign a size and position to this view.
   void setFreezesText(boolean freezesText)
   Control whether this text view saves its entire text contents when
   freezing to an icicle, in addition to dynamic state such as cursor
   position.
   void setGravity(int gravity)
   Sets the horizontal alignment of the text and the vertical gravity that
   will be used when there is extra space in the TextView beyond what is
   required for the text itself.
   void setHeight(int pixels)
   Makes the TextView exactly this many pixels tall.
   void setHighlightColor(int color)
   Sets the color used to display the selection highlight.
   final void setHint(CharSequence hint)
   Sets the text to be displayed when the text of the TextView is empty.
   final void setHint(int resid)
   Sets the text to be displayed when the text of the TextView is empty,
   from a resource.
   final void setHintTextColor(ColorStateList colors)
   Sets the color of the hint text.
   final void setHintTextColor(int color)
   Sets the color of the hint text.
   void setHorizontallyScrolling(boolean whether)
   Sets whether the text should be allowed to be wider than the View is.
   void setImeActionLabel(CharSequence label, int actionId)
   Change the custom IME action associated with the text view, which will
   be reported to an IME with actionLabel and actionId when it has focus.
   void setImeOptions(int imeOptions)
   Change the editor type integer associated with the text view, which
   will be reported to an IME with imeOptions when it has focus.
   void setIncludeFontPadding(boolean includepad)
   Set whether the TextView includes extra top and bottom padding to make
   room for accents that go above the normal ascent and descent.
   void setInputExtras(int xmlResId)
   Set the extra input data of the text, which is the
   TextBoxAttribute.extras Bundle that will be filled in when creating an
   input connection.
   void setInputType(int type)
   Set the type of the content with a constant as defined for inputType.
   void setKeyListener(KeyListener input)
   Sets the key listener to be used with this TextView.
   void setLineSpacing(float add, float mult)
   Sets line spacing for this TextView.
   void setLines(int lines)
   Makes the TextView exactly this many lines tall
   final void setLinkTextColor(ColorStateList colors)
   Sets the color of links in the text.
   final void setLinkTextColor(int color)
   Sets the color of links in the text.
   final void setLinksClickable(boolean whether)
   Sets whether the movement method will automatically be set to
   LinkMovementMethod if setAutoLinkMask(int) has been set to nonzero and
   links are detected in setText(char[], int, int).
   void setMarqueeRepeatLimit(int marqueeLimit)
   Sets how many times to repeat the marquee animation.
   void setMaxEms(int maxems)
   Makes the TextView at most this many ems wide
   void setMaxHeight(int maxHeight)
   Makes the TextView at most this many pixels tall
   void setMaxLines(int maxlines)
   Makes the TextView at most this many lines tall
   void setMaxWidth(int maxpixels)
   Makes the TextView at most this many pixels wide
   void setMinEms(int minems)
   Makes the TextView at least this many ems wide
   void setMinHeight(int minHeight)
   Makes the TextView at least this many pixels tall
   void setMinLines(int minlines)
   Makes the TextView at least this many lines tall
   void setMinWidth(int minpixels)
   Makes the TextView at least this many pixels wide
   final void setMovementMethod(MovementMethod movement)
   Sets the movement method (arrow key handler) to be used for this
   TextView.
   void setOnEditorActionListener(TextView.OnEditorActionListener l)
   Set a special listener to be called when an action is performed on the
   text view.
   void setPadding(int left, int top, int right, int bottom)
   Sets the padding.
   void setPaintFlags(int flags)
   Sets flags on the Paint being used to display the text and reflows the
   text if they are different from the old flags.
   void setPrivateImeOptions(String type)
   Set the private content type of the text, which is the
   EditorInfo.privateImeOptions field that will be filled in when creating
   an input connection.
   void setRawInputType(int type)
   Directly change the content type integer of the text view, without
   modifying any other state.
   void setScroller(Scroller s)
   void setSelectAllOnFocus(boolean selectAllOnFocus)
   Set the TextView so that when it takes focus, all the text is selected.
   void setSelected(boolean selected)
   Changes the selection state of this view.
   void setShadowLayer(float radius, float dx, float dy, int color)
   Gives the text a shadow of the specified radius and color, the
   specified distance from its normal position.
   void setSingleLine()
   Sets the properties of this field (lines, horizontally scrolling,
   transformation method) to be for a single-line input.
   void setSingleLine(boolean singleLine)
   If true, sets the properties of this field (lines, horizontally
   scrolling, transformation method) to be for a single-line input; if
   false, restores these to the default conditions.
   final void setSpannableFactory(Spannable.Factory factory)
   Sets the Factory used to create new Spannables.
   final void setText(int resid)
   final void setText(int resid, TextView.BufferType type)
   final void setText(char[] text, int start, int len)
   Sets the TextView to display the specified slice of the specified char
   array.
   void setText(CharSequence text, TextView.BufferType type)
   Sets the text that this TextView is to display (see
   setText(CharSequence)) and also sets whether it is stored in a
   styleable/spannable buffer and whether it is editable.
   final void setText(CharSequence text)
   Sets the string value of the TextView.
   void setTextAppearance(Context context, int resid)
   Sets the text color, size, style, hint color, and highlight color from
   the specified TextAppearance resource.
   void setTextColor(int color)
   Sets the text color for all the states (normal, selected, focused) to
   be this color.
   void setTextColor(ColorStateList colors)
   Sets the text color.
   final void setTextKeepState(CharSequence text)
   Like setText(CharSequence), except that the cursor position (if any) is
   retained in the new text.
   final void setTextKeepState(CharSequence text, TextView.BufferType
   type)
   Like setText(CharSequence, android.widget.TextView.BufferType), except
   that the cursor position (if any) is retained in the new text.
   void setTextScaleX(float size)
   Sets the extent by which text should be stretched horizontally.
   void setTextSize(int unit, float size)
   Set the default text size to a given unit and value.
   void setTextSize(float size)
   Set the default text size to the given value, interpreted as "scaled
   pixel" units.
   final void setTransformationMethod(TransformationMethod method)
   Sets the transformation that is applied to the text that this TextView
   is displaying.
   void setTypeface(Typeface tf, int style)
   Sets the typeface and style in which the text should be displayed, and
   turns on the fake bold and italic bits in the Paint if the Typeface
   that you provided does not have all the bits in the style that you
   specified.
   void setTypeface(Typeface tf)
   Sets the typeface and style in which the text should be displayed.
   void setWidth(int pixels)
   Makes the TextView exactly this many pixels wide.
   boolean verifyDrawable(Drawable who)
   If your view subclass is displaying its own Drawable objects, it should
   override this function and return true for any Drawable it is
   displaying.
   [triangle-closed.png] From class android.view.View
   void addFocusables(ArrayList<View> views, int direction, int
   focusableMode)
   Adds any focusable views that are descendants of this view (possibly
   including this view if it is focusable itself) to views.
   void addFocusables(ArrayList<View> views, int direction)
   Add any focusable views that are descendants of this view (possibly
   including this view if it is focusable itself) to views.
   void addTouchables(ArrayList<View> views)
   Add any touchable views that are descendants of this view (possibly
   including this view if it is touchable itself) to views.
   boolean awakenScrollBars()

   Trigger the scrollbars to draw.
   boolean awakenScrollBars(int startDelay, boolean invalidate)

   Trigger the scrollbars to draw.
   boolean awakenScrollBars(int startDelay)

   Trigger the scrollbars to draw.
   void bringToFront()
   Change the view's z order in the tree, so it's on top of other sibling
   views
   void buildDrawingCache(boolean autoScale)

   Forces the drawing cache to be built if the drawing cache is invalid.
   void buildDrawingCache()

   Calling this method is equivalent to calling buildDrawingCache(false).
   void cancelLongPress()
   Cancels a pending long press.
   boolean checkInputConnectionProxy(View view)
   Called by the InputMethodManager when a view who is not the current
   input connection target is trying to make a call on the manager.
   void clearAnimation()
   Cancels any animations for this view.
   void clearFocus()
   Called when this view wants to give up focus.
   int computeHorizontalScrollExtent()

   Compute the horizontal extent of the horizontal scrollbar's thumb
   within the horizontal range.
   int computeHorizontalScrollOffset()

   Compute the horizontal offset of the horizontal scrollbar's thumb
   within the horizontal range.
   int computeHorizontalScrollRange()

   Compute the horizontal range that the horizontal scrollbar represents.
   void computeScroll()
   Called by a parent to request that a child update its values for
   mScrollX and mScrollY if necessary.
   int computeVerticalScrollExtent()

   Compute the vertical extent of the horizontal scrollbar's thumb within
   the vertical range.
   int computeVerticalScrollOffset()

   Compute the vertical offset of the vertical scrollbar's thumb within
   the horizontal range.
   int computeVerticalScrollRange()

   Compute the vertical range that the vertical scrollbar represents.
   void createContextMenu(ContextMenu menu)
   Show the context menu for this view.
   void destroyDrawingCache()

   Frees the resources used by the drawing cache.
   void dispatchConfigurationChanged(Configuration newConfig)
   Dispatch a notification about a resource configuration change down the
   view hierarchy.
   void dispatchDisplayHint(int hint)
   Dispatch a hint about whether this view is displayed.
   void dispatchDraw(Canvas canvas)
   Called by draw to draw the child views.
   boolean dispatchKeyEvent(KeyEvent event)
   Dispatch a key event to the next view on the focus path.
   boolean dispatchKeyEventPreIme(KeyEvent event)
   Dispatch a key event before it is processed by any input method
   associated with the view hierarchy.
   boolean dispatchKeyShortcutEvent(KeyEvent event)
   Dispatches a key shortcut event.
   boolean dispatchPopulateAccessibilityEvent(AccessibilityEvent event)
   Dispatches an AccessibilityEvent to the View children to be populated.
   void dispatchRestoreInstanceState(SparseArray<Parcelable> container)
   Called by restoreHierarchyState(SparseArray) to retrieve the state for
   this view and its children.
   void dispatchSaveInstanceState(SparseArray<Parcelable> container)
   Called by saveHierarchyState(SparseArray) to store the state for this
   view and its children.
   void dispatchSetPressed(boolean pressed)
   Dispatch setPressed to all of this View's children.
   void dispatchSetSelected(boolean selected)
   Dispatch setSelected to all of this View's children.
   boolean dispatchTouchEvent(MotionEvent event)
   Pass the touch screen motion event down to the target view, or this
   view if it is the target.
   boolean dispatchTrackballEvent(MotionEvent event)
   Pass a trackball motion event down to the focused view.
   boolean dispatchUnhandledMove(View focused, int direction)
   This method is the last chance for the focused view and its ancestors
   to respond to an arrow key.
   void dispatchVisibilityChanged(View changedView, int visibility)
   Dispatch a view visibility change down the view hierarchy.
   void dispatchWindowFocusChanged(boolean hasFocus)
   Called when the window containing this view gains or loses window
   focus.
   void dispatchWindowVisibilityChanged(int visibility)
   Dispatch a window visibility change down the view hierarchy.
   void draw(Canvas canvas)
   Manually render this view (and all of its children) to the given
   Canvas.
   void drawableStateChanged()
   This function is called whenever the state of the view changes in such
   a way that it impacts the state of drawables being shown.
   View findFocus()
   Find the view in the hierarchy rooted at this view that currently has
   focus.
   final View findViewById(int id)
   Look for a child view with the given id.
   final View findViewWithTag(Object tag)
   Look for a child view with the given tag.
   boolean fitSystemWindows(Rect insets)
   Apply the insets for system windows to this view, if the
   FITS_SYSTEM_WINDOWS flag is set
   View focusSearch(int direction)
   Find the nearest view in the specified direction that can take focus.
   void forceLayout()
   Forces this view to be laid out during the next layout pass.
   Animation getAnimation()
   Get the animation currently associated with this view.
   IBinder getApplicationWindowToken()
   Retrieve a unique token identifying the top-level "real" window of the
   window that this view is attached to.
   Drawable getBackground()
   Gets the background drawable
   int getBaseline()

   Return the offset of the widget's text baseline from the widget's top
   boundary.
   final int getBottom()
   Bottom position of this view relative to its parent.
   float getBottomFadingEdgeStrength()
   Returns the strength, or intensity, of the bottom faded edge.
   int getBottomPaddingOffset()
   Amount by which to extend the bottom fading region.
   CharSequence getContentDescription()
   Gets the View description.
   final Context getContext()
   Returns the context the view is running in, through which it can access
   the current theme, resources, etc.
   ContextMenu.ContextMenuInfo getContextMenuInfo()
   Views should implement this if they have extra information to associate
   with the context menu.
   static int getDefaultSize(int size, int measureSpec)
   Utility to return a default size.
   final int[] getDrawableState()
   Return an array of resource IDs of the drawable states representing the
   current state of the view.
   Bitmap getDrawingCache()

   Calling this method is equivalent to calling getDrawingCache(false).
   Bitmap getDrawingCache(boolean autoScale)

   Returns the bitmap in which this view drawing is cached.
   int getDrawingCacheBackgroundColor()
   int getDrawingCacheQuality()
   Returns the quality of the drawing cache.
   void getDrawingRect(Rect outRect)
   Return the visible drawing bounds of your view.
   long getDrawingTime()

   Return the time at which the drawing of the view hierarchy started.
   ArrayList<View> getFocusables(int direction)
   Find and return all focusable views that are descendants of this view,
   possibly including this view if it is focusable itself.
   void getFocusedRect(Rect r)
   When a view has focus and the user navigates away from it, the next
   view is searched for starting from the rectangle filled in by this
   method.
   boolean getGlobalVisibleRect(Rect r, Point globalOffset)
   If some part of this view is not clipped by any of its parents, then
   return that area in r in global (root) coordinates.
   final boolean getGlobalVisibleRect(Rect r)
   Handler getHandler()
   final int getHeight()
   Return the height of your view.
   void getHitRect(Rect outRect)
   Hit rectangle in parent's coordinates
   int getHorizontalFadingEdgeLength()
   Returns the size of the horizontal faded edges used to indicate that
   more content in this view is visible.
   int getHorizontalScrollbarHeight()
   Returns the height of the horizontal scrollbar.
   int getId()
   Returns this view's identifier.
   boolean getKeepScreenOn()
   Returns whether the screen should remain on, corresponding to the
   current value of KEEP_SCREEN_ON.
   KeyEvent.DispatcherState getKeyDispatcherState()
   Return the global KeyEvent.DispatcherState for this view's window.
   ViewGroup.LayoutParams getLayoutParams()
   Get the LayoutParams associated with this view.
   final int getLeft()
   Left position of this view relative to its parent.
   float getLeftFadingEdgeStrength()
   Returns the strength, or intensity, of the left faded edge.
   int getLeftPaddingOffset()
   Amount by which to extend the left fading region.
   final boolean getLocalVisibleRect(Rect r)
   void getLocationInWindow(int[] location)

   Computes the coordinates of this view in its window.
   void getLocationOnScreen(int[] location)

   Computes the coordinates of this view on the screen.
   final int getMeasuredHeight()
   The height of this view as measured in the most recent call to
   measure().
   final int getMeasuredWidth()
   The width of this view as measured in the most recent call to
   measure().
   int getNextFocusDownId()
   int getNextFocusLeftId()
   int getNextFocusRightId()
   int getNextFocusUpId()
   View.OnFocusChangeListener getOnFocusChangeListener()
   Returns the focus-change callback registered for this view.
   int getPaddingBottom()
   Returns the bottom padding of this view.
   int getPaddingLeft()
   Returns the left padding of this view.
   int getPaddingRight()
   Returns the right padding of this view.
   int getPaddingTop()
   Returns the top padding of this view.
   final ViewParent getParent()
   Gets the parent of this view.
   Resources getResources()
   Returns the resources associated with this view.
   final int getRight()
   Right position of this view relative to its parent.
   float getRightFadingEdgeStrength()
   Returns the strength, or intensity, of the right faded edge.
   int getRightPaddingOffset()
   Amount by which to extend the right fading region.
   View getRootView()

   Finds the topmost view in the current view hierarchy.
   int getScrollBarStyle()

   Returns the current scrollbar style.
   final int getScrollX()
   Return the scrolled left position of this view.
   final int getScrollY()
   Return the scrolled top position of this view.
   int getSolidColor()
   Override this if your view is known to always be drawn on top of a
   solid color background, and needs to draw fading edges.
   int getSuggestedMinimumHeight()
   Returns the suggested minimum height that the view should use.
   int getSuggestedMinimumWidth()
   Returns the suggested minimum width that the view should use.
   Object getTag(int key)
   Returns the tag associated with this view and the specified key.
   Object getTag()
   Returns this view's tag.
   final int getTop()
   Top position of this view relative to its parent.
   float getTopFadingEdgeStrength()
   Returns the strength, or intensity, of the top faded edge.
   int getTopPaddingOffset()
   Amount by which to extend the top fading region.
   TouchDelegate getTouchDelegate()
   Gets the TouchDelegate for this View.
   ArrayList<View> getTouchables()
   Find and return all touchable views that are descendants of this view,
   possibly including this view if it is touchable itself.
   int getVerticalFadingEdgeLength()
   Returns the size of the vertical faded edges used to indicate that more
   content in this view is visible.
   int getVerticalScrollbarWidth()
   Returns the width of the vertical scrollbar.
   ViewTreeObserver getViewTreeObserver()
   Returns the ViewTreeObserver for this view's hierarchy.
   int getVisibility()
   Returns the visibility status for this view.
   final int getWidth()
   Return the width of the your view.
   int getWindowAttachCount()
   IBinder getWindowToken()
   Retrieve a unique token identifying the window this view is attached
   to.
   int getWindowVisibility()
   Returns the current visibility of the window this view is attached to
   (either GONE, INVISIBLE, or VISIBLE).
   void getWindowVisibleDisplayFrame(Rect outRect)
   Retrieve the overall visible display size in which the window this view
   is attached to has been positioned in.
   boolean hasFocus()
   Returns true if this view has focus iteself, or is the ancestor of the
   view that has focus.
   boolean hasFocusable()
   Returns true if this view is focusable or if it contains a reachable
   View for which hasFocusable() returns true.
   boolean hasWindowFocus()
   Returns true if this view is in a window that currently has window
   focus.
   static View inflate(Context context, int resource, ViewGroup root)
   Inflate a view from an XML resource.
   void initializeFadingEdge(TypedArray a)

   Initializes the fading edges from a given set of styled attributes.
   void initializeScrollbars(TypedArray a)

   Initializes the scrollbars from a given set of styled attributes.
   void invalidate(int l, int t, int r, int b)
   Mark the the area defined by the rect (l,t,r,b) as needing to be drawn.
   void invalidate()
   Invalidate the whole view.
   void invalidate(Rect dirty)
   Mark the the area defined by dirty as needing to be drawn.
   void invalidateDrawable(Drawable drawable)
   Invalidates the specified Drawable.
   boolean isClickable()
   Indicates whether this view reacts to click events or not.
   boolean isDrawingCacheEnabled()

   Indicates whether the drawing cache is enabled for this view.
   boolean isDuplicateParentStateEnabled()

   Indicates whether this duplicates its drawable state from its parent.
   boolean isEnabled()
   Returns the enabled status for this view.
   final boolean isFocusable()
   Returns whether this View is able to take focus.
   final boolean isFocusableInTouchMode()
   When a view is focusable, it may not want to take focus when in touch
   mode.
   boolean isFocused()
   Returns true if this view has focus
   boolean isHapticFeedbackEnabled()
   boolean isHorizontalFadingEdgeEnabled()

   Indicate whether the horizontal edges are faded when the view is
   scrolled horizontally.
   boolean isHorizontalScrollBarEnabled()

   Indicate whether the horizontal scrollbar should be drawn or not.
   boolean isInEditMode()
   Indicates whether this View is currently in edit mode.
   boolean isInTouchMode()
   Returns whether the device is currently in touch mode.
   boolean isLayoutRequested()

   Indicates whether or not this view's layout will be requested during
   the next hierarchy layout pass.
   boolean isLongClickable()
   Indicates whether this view reacts to long click events or not.
   boolean isOpaque()
   Indicates whether this View is opaque.
   boolean isPaddingOffsetRequired()
   If the View draws content inside its padding and enables fading edges,
   it needs to support padding offsets.
   boolean isPressed()
   Indicates whether the view is currently in pressed state.
   boolean isSaveEnabled()
   Indicates whether this view will save its state (that is, whether its
   onSaveInstanceState() method will be called).
   boolean isScrollbarFadingEnabled()
   Returns true if scrollbars will fade when this view is not scrolling
   boolean isSelected()
   Indicates the selection state of this view.
   boolean isShown()
   Returns the visibility of this view and all of its ancestors
   boolean isSoundEffectsEnabled()
   boolean isVerticalFadingEdgeEnabled()

   Indicate whether the vertical edges are faded when the view is scrolled
   horizontally.
   boolean isVerticalScrollBarEnabled()

   Indicate whether the vertical scrollbar should be drawn or not.
   final void layout(int l, int t, int r, int b)
   Assign a size and position to a view and all of its descendants

   This is the second phase of the layout mechanism.
   final void measure(int widthMeasureSpec, int heightMeasureSpec)

   This is called to find out how big a view should be.
   static int[] mergeDrawableStates(int[] baseState, int[]
   additionalState)
   Merge your own state values in additionalState into the base state
   values baseState that were returned by onCreateDrawableState(int).
   void offsetLeftAndRight(int offset)
   Offset this view's horizontal location by the specified amount of
   pixels.
   void offsetTopAndBottom(int offset)
   Offset this view's vertical location by the specified number of pixels.
   void onAnimationEnd()
   Invoked by a parent ViewGroup to notify the end of the animation
   currently associated with this view.
   void onAnimationStart()
   Invoked by a parent ViewGroup to notify the start of the animation
   currently associated with this view.
   void onAttachedToWindow()
   This is called when the view is attached to a window.
   boolean onCheckIsTextEditor()
   Check whether the called view is a text editor, in which case it would
   make sense to automatically display a soft input window for it.
   void onConfigurationChanged(Configuration newConfig)
   Called when the current configuration of the resources being used by
   the application have changed.
   void onCreateContextMenu(ContextMenu menu)
   Views should implement this if the view itself is going to add items to
   the context menu.
   int[] onCreateDrawableState(int extraSpace)
   Generate the new Drawable state for this view.
   InputConnection onCreateInputConnection(EditorInfo outAttrs)
   Create a new InputConnection for an InputMethod to interact with the
   view.
   void onDetachedFromWindow()
   This is called when the view is detached from a window.
   void onDisplayHint(int hint)
   Gives this view a hint about whether is displayed or not.
   void onDraw(Canvas canvas)
   Implement this to do your drawing.
   final void onDrawScrollBars(Canvas canvas)

   Request the drawing of the horizontal and the vertical scrollbar.
   void onFinishInflate()
   Finalize inflating a view from XML.
   void onFinishTemporaryDetach()
   Called after onStartTemporaryDetach() when the container is done
   changing the view.
   void onFocusChanged(boolean gainFocus, int direction, Rect
   previouslyFocusedRect)
   Called by the view system when the focus state of this view changes.
   boolean onKeyDown(int keyCode, KeyEvent event)
   Default implementation of KeyEvent.Callback.onKeyMultiple(): perform
   press of the view when KEYCODE_DPAD_CENTER or KEYCODE_ENTER is
   released, if the view is enabled and clickable.
   boolean onKeyLongPress(int keyCode, KeyEvent event)
   Default implementation of KeyEvent.Callback.onKeyLongPress(): always
   returns false (doesn't handle the event).
   boolean onKeyMultiple(int keyCode, int repeatCount, KeyEvent event)
   Default implementation of KeyEvent.Callback.onKeyMultiple(): always
   returns false (doesn't handle the event).
   boolean onKeyPreIme(int keyCode, KeyEvent event)
   Handle a key event before it is processed by any input method
   associated with the view hierarchy.
   boolean onKeyShortcut(int keyCode, KeyEvent event)
   Called when an unhandled key shortcut event occurs.
   boolean onKeyUp(int keyCode, KeyEvent event)
   Default implementation of KeyEvent.Callback.onKeyMultiple(): perform
   clicking of the view when KEYCODE_DPAD_CENTER or KEYCODE_ENTER is
   released.
   void onLayout(boolean changed, int left, int top, int right, int
   bottom)
   Called from layout when this view should assign a size and position to
   each of its children.
   void onMeasure(int widthMeasureSpec, int heightMeasureSpec)

   Measure the view and its content to determine the measured width and
   the measured height.
   void onRestoreInstanceState(Parcelable state)
   Hook allowing a view to re-apply a representation of its internal state
   that had previously been generated by onSaveInstanceState().
   Parcelable onSaveInstanceState()
   Hook allowing a view to generate a representation of its internal state
   that can later be used to create a new instance with that same state.
   void onScrollChanged(int l, int t, int oldl, int oldt)
   This is called in response to an internal scroll in this view (i.e.,
   the view scrolled its own contents).
   boolean onSetAlpha(int alpha)
   Invoked if there is a Transform that involves alpha.
   void onSizeChanged(int w, int h, int oldw, int oldh)
   This is called during layout when the size of this view has changed.
   void onStartTemporaryDetach()
   This is called when a container is going to temporarily detach a child,
   with ViewGroup.detachViewFromParent.
   boolean onTouchEvent(MotionEvent event)
   Implement this method to handle touch screen motion events.
   boolean onTrackballEvent(MotionEvent event)
   Implement this method to handle trackball motion events.
   void onVisibilityChanged(View changedView, int visibility)
   Called when the visibility of the view or an ancestor of the view is
   changed.
   void onWindowFocusChanged(boolean hasWindowFocus)
   Called when the window containing this view gains or loses focus.
   void onWindowVisibilityChanged(int visibility)
   Called when the window containing has change its visibility (between
   GONE, INVISIBLE, and VISIBLE).
   boolean performClick()
   Call this view's OnClickListener, if it is defined.
   boolean performHapticFeedback(int feedbackConstant)
   BZZZTT!!1!

   Provide haptic feedback to the user for this view.
   boolean performHapticFeedback(int feedbackConstant, int flags)
   BZZZTT!!1!

   Like performHapticFeedback(int), with additional options.
   boolean performLongClick()
   Call this view's OnLongClickListener, if it is defined.
   void playSoundEffect(int soundConstant)
   Play a sound effect for this view.
   boolean post(Runnable action)
   Causes the Runnable to be added to the message queue.
   boolean postDelayed(Runnable action, long delayMillis)
   Causes the Runnable to be added to the message queue, to be run after
   the specified amount of time elapses.
   void postInvalidate()
   Cause an invalidate to happen on a subsequent cycle through the event
   loop.
   void postInvalidate(int left, int top, int right, int bottom)
   Cause an invalidate of the specified area to happen on a subsequent
   cycle through the event loop.
   void postInvalidateDelayed(long delayMilliseconds)
   Cause an invalidate to happen on a subsequent cycle through the event
   loop.
   void postInvalidateDelayed(long delayMilliseconds, int left, int top,
   int right, int bottom)
   Cause an invalidate of the specified area to happen on a subsequent
   cycle through the event loop.
   void refreshDrawableState()
   Call this to force a view to update its drawable state.
   boolean removeCallbacks(Runnable action)
   Removes the specified Runnable from the message queue.
   final boolean requestFocus()
   Call this to try to give focus to a specific view or to one of its
   descendants.
   boolean requestFocus(int direction, Rect previouslyFocusedRect)
   Call this to try to give focus to a specific view or to one of its
   descendants and give it hints about the direction and a specific
   rectangle that the focus is coming from.
   final boolean requestFocus(int direction)
   Call this to try to give focus to a specific view or to one of its
   descendants and give it a hint about what direction focus is heading.
   final boolean requestFocusFromTouch()
   Call this to try to give focus to a specific view or to one of its
   descendants.
   void requestLayout()
   Call this when something has changed which has invalidated the layout
   of this view.
   boolean requestRectangleOnScreen(Rect rectangle, boolean immediate)
   Request that a rectangle of this view be visible on the screen,
   scrolling if necessary just enough.
   boolean requestRectangleOnScreen(Rect rectangle)
   Request that a rectangle of this view be visible on the screen,
   scrolling if necessary just enough.
   static int resolveSize(int size, int measureSpec)
   Utility to reconcile a desired size with constraints imposed by a
   MeasureSpec.
   void restoreHierarchyState(SparseArray<Parcelable> container)
   Restore this view hierarchy's frozen state from the given container.
   void saveHierarchyState(SparseArray<Parcelable> container)
   Store this view hierarchy's frozen state into the given container.
   void scheduleDrawable(Drawable who, Runnable what, long when)
   Schedules an action on a drawable to occur at a specified time.
   void scrollBy(int x, int y)
   Move the scrolled position of your view.
   void scrollTo(int x, int y)
   Set the scrolled position of your view.
   void sendAccessibilityEvent(int eventType)
   Handles the request for sending an AccessibilityEvent given the event
   type.
   void sendAccessibilityEventUnchecked(AccessibilityEvent event)
   Handles the request for sending an AccessibilityEvent.
   void setAnimation(Animation animation)
   Sets the next animation to play for this view.
   void setBackgroundColor(int color)
   Sets the background color for this view.
   void setBackgroundDrawable(Drawable d)
   Set the background to a given Drawable, or remove the background.
   void setBackgroundResource(int resid)
   Set the background to a given resource.
   void setClickable(boolean clickable)
   Enables or disables click events for this view.
   void setContentDescription(CharSequence contentDescription)
   Sets the View description.
   void setDrawingCacheBackgroundColor(int color)
   Setting a solid background color for the drawing cache's bitmaps will
   improve perfromance and memory usage.
   void setDrawingCacheEnabled(boolean enabled)

   Enables or disables the drawing cache.
   void setDrawingCacheQuality(int quality)
   Set the drawing cache quality of this view.
   void setDuplicateParentStateEnabled(boolean enabled)

   Enables or disables the duplication of the parent's state into this
   view.
   void setEnabled(boolean enabled)
   Set the enabled state of this view.
   void setFadingEdgeLength(int length)
   Set the size of the faded edge used to indicate that more content in
   this view is available.
   void setFocusable(boolean focusable)
   Set whether this view can receive the focus.
   void setFocusableInTouchMode(boolean focusableInTouchMode)
   Set whether this view can receive focus while in touch mode.
   void setHapticFeedbackEnabled(boolean hapticFeedbackEnabled)
   Set whether this view should have haptic feedback for events such as
   long presses.
   void setHorizontalFadingEdgeEnabled(boolean
   horizontalFadingEdgeEnabled)

   Define whether the horizontal edges should be faded when this view is
   scrolled horizontally.
   void setHorizontalScrollBarEnabled(boolean horizontalScrollBarEnabled)

   Define whether the horizontal scrollbar should be drawn or not.
   void setId(int id)
   Sets the identifier for this view.
   void setKeepScreenOn(boolean keepScreenOn)
   Controls whether the screen should remain on, modifying the value of
   KEEP_SCREEN_ON.
   void setLayoutParams(ViewGroup.LayoutParams params)
   Set the layout parameters associated with this view.
   void setLongClickable(boolean longClickable)
   Enables or disables long click events for this view.
   final void setMeasuredDimension(int measuredWidth, int measuredHeight)

   This mehod must be called by onMeasure(int, int) to store the measured
   width and measured height.
   void setMinimumHeight(int minHeight)
   Sets the minimum height of the view.
   void setMinimumWidth(int minWidth)
   Sets the minimum width of the view.
   void setNextFocusDownId(int nextFocusDownId)
   Set the id of the view to use for the next focus
   void setNextFocusLeftId(int nextFocusLeftId)
   Set the id of the view to use for the next focus
   void setNextFocusRightId(int nextFocusRightId)
   Set the id of the view to use for the next focus
   void setNextFocusUpId(int nextFocusUpId)
   Set the id of the view to use for the next focus
   void setOnClickListener(View.OnClickListener l)
   Register a callback to be invoked when this view is clicked.
   void setOnCreateContextMenuListener(View.OnCreateContextMenuListener l)
   Register a callback to be invoked when the context menu for this view
   is being built.
   void setOnFocusChangeListener(View.OnFocusChangeListener l)
   Register a callback to be invoked when focus of this view changed.
   void setOnKeyListener(View.OnKeyListener l)
   Register a callback to be invoked when a key is pressed in this view.
   void setOnLongClickListener(View.OnLongClickListener l)
   Register a callback to be invoked when this view is clicked and held.
   void setOnTouchListener(View.OnTouchListener l)
   Register a callback to be invoked when a touch event is sent to this
   view.
   void setPadding(int left, int top, int right, int bottom)
   Sets the padding.
   void setPressed(boolean pressed)
   Sets the pressed that for this view.
   void setSaveEnabled(boolean enabled)
   Controls whether the saving of this view's state is enabled (that is,
   whether its onSaveInstanceState() method will be called).
   void setScrollBarStyle(int style)

   Specify the style of the scrollbars.
   void setScrollContainer(boolean isScrollContainer)
   Change whether this view is one of the set of scrollable containers in
   its window.
   void setScrollbarFadingEnabled(boolean fadeScrollbars)
   Define whether scrollbars will fade when the view is not scrolling.
   void setSelected(boolean selected)
   Changes the selection state of this view.
   void setSoundEffectsEnabled(boolean soundEffectsEnabled)
   Set whether this view should have sound effects enabled for events such
   as clicking and touching.
   void setTag(Object tag)
   Sets the tag associated with this view.
   void setTag(int key, Object tag)
   Sets a tag associated with this view and a key.
   void setTouchDelegate(TouchDelegate delegate)
   Sets the TouchDelegate for this View.
   void setVerticalFadingEdgeEnabled(boolean verticalFadingEdgeEnabled)

   Define whether the vertical edges should be faded when this view is
   scrolled vertically.
   void setVerticalScrollBarEnabled(boolean verticalScrollBarEnabled)

   Define whether the vertical scrollbar should be drawn or not.
   void setVisibility(int visibility)
   Set the enabled state of this view.
   void setWillNotCacheDrawing(boolean willNotCacheDrawing)
   When a View's drawing cache is enabled, drawing is redirected to an
   offscreen bitmap.
   void setWillNotDraw(boolean willNotDraw)
   If this view doesn't do any drawing on its own, set this flag to allow
   further optimizations.
   boolean showContextMenu()
   Bring up the context menu for this view.
   void startAnimation(Animation animation)
   Start the specified animation now.
   void unscheduleDrawable(Drawable who, Runnable what)
   Cancels a scheduled action on a drawable.
   void unscheduleDrawable(Drawable who)
   Unschedule any events associated with the given Drawable.
   boolean verifyDrawable(Drawable who)
   If your view subclass is displaying its own Drawable objects, it should
   override this function and return true for any Drawable it is
   displaying.
   boolean willNotCacheDrawing()
   Returns whether or not this View can cache its drawing or not.
   boolean willNotDraw()
   Returns whether or not this View draws on its own.
   [triangle-closed.png] From class java.lang.Object
   Object clone()
   Creates and returns a copy of this Object.
   boolean equals(Object o)
   Compares this instance with the specified object and indicates if they
   are equal.
   void finalize()
   Is called before the object's memory is being reclaimed by the VM.
   final Class<? extends Object> getClass()
   Returns the unique instance of Class which represents this object's
   class.
   int hashCode()
   Returns an integer hash code for this object.
   final void notify()
   Causes a thread which is waiting on this object's monitor (by means of
   calling one of the wait() methods) to be woken up.
   final void notifyAll()
   Causes all threads which are waiting on this object's monitor (by means
   of calling one of the wait() methods) to be woken up.
   String toString()
   Returns a string containing a concise, human-readable description of
   this object.
   final void wait(long millis, int nanos)
   Causes the calling thread to wait until another thread calls the
   notify() or notifyAll() method of this object or until the specified
   timeout expires.
   final void wait(long millis)
   Causes the calling thread to wait until another thread calls the
   notify() or notifyAll() method of this object or until the specified
   timeout expires.
   final void wait()
   Causes the calling thread to wait until another thread calls the
   notify() or notifyAll() method of this object.
   [triangle-closed.png] From interface
   android.graphics.drawable.Drawable.Callback
   abstract void invalidateDrawable(Drawable who)
   Called when the drawable needs to be redrawn.
   abstract void scheduleDrawable(Drawable who, Runnable what, long when)
   A Drawable can call this to schedule the next frame of its animation.
   abstract void unscheduleDrawable(Drawable who, Runnable what)
   A Drawable can call this to unschedule an action previously scheduled
   with scheduleDrawable(Drawable, Runnable, long).
   [triangle-closed.png] From interface android.view.KeyEvent.Callback
   abstract boolean onKeyDown(int keyCode, KeyEvent event)
   Called when a key down event has occurred.
   abstract boolean onKeyLongPress(int keyCode, KeyEvent event)
   Called when a long press has occurred.
   abstract boolean onKeyMultiple(int keyCode, int count, KeyEvent event)
   Called when multiple down/up pairs of the same key have occurred in a
   row.
   abstract boolean onKeyUp(int keyCode, KeyEvent event)
   Called when a key up event has occurred.
   [triangle-closed.png] From interface
   android.view.ViewTreeObserver.OnPreDrawListener
   abstract boolean onPreDraw()
   Callback method to be invoked when the view tree is about to be drawn.
   [triangle-closed.png] From interface
   android.view.accessibility.AccessibilityEventSource
   abstract void sendAccessibilityEvent(int eventType)
   Handles the request for sending an AccessibilityEvent given the event
   type.
   abstract void sendAccessibilityEventUnchecked(AccessibilityEvent event)
   Handles the request for sending an AccessibilityEvent.

Public Constructors

public Button (Context context)

   Since: API Level 1

public Button (Context context, AttributeSet attrs)

   Since: API Level 1

public Button (Context context, AttributeSet attrs, int defStyle)

   Since: API Level 1

   Except as noted, this content is licensed under Apache 2.0. For details
   and restrictions, see the Content License.
   Android 2.2 r1 - 12 Sep 2010 12:26

   Site Terms of Service - Privacy Policy - Brand Guidelines
   Visible links
http://developer.android.com/index.html
http://developer.android.com/index.html
http://developer.android.com/sdk/index.html
http://developer.android.com/guide/index.html
http://developer.android.com/reference/packages.html
http://developer.android.com/resources/index.html
http://developer.android.com/videos/index.html
http://android-developers.blogspot.com/
http://www.android.com/
http://developer.android.com/reference/packages.html
http://developer.android.com/reference/classes.html
http://developer.android.com/reference/android/package-summary.html
http://developer.android.com/reference/android/accessibilityservice/package-summary.html
http://developer.android.com/reference/android/accounts/package-summary.html
http://developer.android.com/reference/android/app/package-summary.html
http://developer.android.com/reference/android/app/admin/package-summary.html
http://developer.android.com/reference/android/app/backup/package-summary.html
http://developer.android.com/reference/android/appwidget/package-summary.html
http://developer.android.com/reference/android/bluetooth/package-summary.html
http://developer.android.com/reference/android/content/package-summary.html
http://developer.android.com/reference/android/content/pm/package-summary.html
http://developer.android.com/reference/android/content/res/package-summary.html
http://developer.android.com/reference/android/database/package-summary.html
http://developer.android.com/reference/android/database/sqlite/package-summary.html
http://developer.android.com/reference/android/gesture/package-summary.html
http://developer.android.com/reference/android/graphics/package-summary.html
http://developer.android.com/reference/android/graphics/drawable/package-summary.html
http://developer.android.com/reference/android/graphics/drawable/shapes/package-summary.html
http://developer.android.com/reference/android/hardware/package-summary.html
http://developer.android.com/reference/android/inputmethodservice/package-summary.html
http://developer.android.com/reference/android/location/package-summary.html
http://developer.android.com/reference/android/media/package-summary.html
http://developer.android.com/reference/android/net/package-summary.html
http://developer.android.com/reference/android/net/http/package-summary.html
http://developer.android.com/reference/android/net/wifi/package-summary.html
http://developer.android.com/reference/android/opengl/package-summary.html
http://developer.android.com/reference/android/os/package-summary.html
http://developer.android.com/reference/android/preference/package-summary.html
http://developer.android.com/reference/android/provider/package-summary.html
http://developer.android.com/reference/android/sax/package-summary.html
http://developer.android.com/reference/android/service/wallpaper/package-summary.html
http://developer.android.com/reference/android/speech/package-summary.html
http://developer.android.com/reference/android/speech/tts/package-summary.html
http://developer.android.com/reference/android/telephony/package-summary.html
http://developer.android.com/reference/android/telephony/cdma/package-summary.html
http://developer.android.com/reference/android/telephony/gsm/package-summary.html
http://developer.android.com/reference/android/test/package-summary.html
http://developer.android.com/reference/android/test/mock/package-summary.html
http://developer.android.com/reference/android/test/suitebuilder/package-summary.html
http://developer.android.com/reference/android/text/package-summary.html
http://developer.android.com/reference/android/text/format/package-summary.html
http://developer.android.com/reference/android/text/method/package-summary.html
http://developer.android.com/reference/android/text/style/package-summary.html
http://developer.android.com/reference/android/text/util/package-summary.html
http://developer.android.com/reference/android/util/package-summary.html
http://developer.android.com/reference/android/view/package-summary.html
http://developer.android.com/reference/android/view/accessibility/package-summary.html
http://developer.android.com/reference/android/view/animation/package-summary.html
http://developer.android.com/reference/android/view/inputmethod/package-summary.html
http://developer.android.com/reference/android/webkit/package-summary.html
http://developer.android.com/reference/android/widget/package-summary.html
http://developer.android.com/reference/dalvik/bytecode/package-summary.html
http://developer.android.com/reference/dalvik/system/package-summary.html
http://developer.android.com/reference/java/awt/font/package-summary.html
http://developer.android.com/reference/java/beans/package-summary.html
http://developer.android.com/reference/java/io/package-summary.html
http://developer.android.com/reference/java/lang/package-summary.html
http://developer.android.com/reference/java/lang/annotation/package-summary.html
http://developer.android.com/reference/java/lang/ref/package-summary.html
http://developer.android.com/reference/java/lang/reflect/package-summary.html
http://developer.android.com/reference/java/math/package-summary.html
http://developer.android.com/reference/java/net/package-summary.html
http://developer.android.com/reference/java/nio/package-summary.html
http://developer.android.com/reference/java/nio/channels/package-summary.html
http://developer.android.com/reference/java/nio/channels/spi/package-summary.html
http://developer.android.com/reference/java/nio/charset/package-summary.html
http://developer.android.com/reference/java/nio/charset/spi/package-summary.html
http://developer.android.com/reference/java/security/package-summary.html
http://developer.android.com/reference/java/security/acl/package-summary.html
http://developer.android.com/reference/java/security/cert/package-summary.html
http://developer.android.com/reference/java/security/interfaces/package-summary.html
http://developer.android.com/reference/java/security/spec/package-summary.html
http://developer.android.com/reference/java/sql/package-summary.html
http://developer.android.com/reference/java/text/package-summary.html
http://developer.android.com/reference/java/util/package-summary.html
http://developer.android.com/reference/java/util/concurrent/package-summary.html
http://developer.android.com/reference/java/util/concurrent/atomic/package-summary.html
http://developer.android.com/reference/java/util/concurrent/locks/package-summary.html
http://developer.android.com/reference/java/util/jar/package-summary.html
http://developer.android.com/reference/java/util/logging/package-summary.html
http://developer.android.com/reference/java/util/prefs/package-summary.html
http://developer.android.com/reference/java/util/regex/package-summary.html
http://developer.android.com/reference/java/util/zip/package-summary.html
http://developer.android.com/reference/javax/crypto/package-summary.html
http://developer.android.com/reference/javax/crypto/interfaces/package-summary.html
http://developer.android.com/reference/javax/crypto/spec/package-summary.html
http://developer.android.com/reference/javax/microedition/khronos/egl/package-summary.html
http://developer.android.com/reference/javax/microedition/khronos/opengles/package-summary.html
http://developer.android.com/reference/javax/net/package-summary.html
http://developer.android.com/reference/javax/net/ssl/package-summary.html
http://developer.android.com/reference/javax/security/auth/package-summary.html
http://developer.android.com/reference/javax/security/auth/callback/package-summary.html
http://developer.android.com/reference/javax/security/auth/login/package-summary.html
http://developer.android.com/reference/javax/security/auth/x500/package-summary.html
http://developer.android.com/reference/javax/security/cert/package-summary.html
http://developer.android.com/reference/javax/sql/package-summary.html
http://developer.android.com/reference/javax/xml/package-summary.html
http://developer.android.com/reference/javax/xml/datatype/package-summary.html
http://developer.android.com/reference/javax/xml/namespace/package-summary.html
http://developer.android.com/reference/javax/xml/parsers/package-summary.html
http://developer.android.com/reference/javax/xml/transform/package-summary.html
http://developer.android.com/reference/javax/xml/transform/dom/package-summary.html
http://developer.android.com/reference/javax/xml/transform/sax/package-summary.html
http://developer.android.com/reference/javax/xml/transform/stream/package-summary.html
http://developer.android.com/reference/javax/xml/validation/package-summary.html
http://developer.android.com/reference/javax/xml/xpath/package-summary.html
http://developer.android.com/reference/junit/framework/package-summary.html
http://developer.android.com/reference/junit/runner/package-summary.html
http://developer.android.com/reference/org/apache/http/package-summary.html
http://developer.android.com/reference/org/apache/http/auth/package-summary.html
http://developer.android.com/reference/org/apache/http/auth/params/package-summary.html
http://developer.android.com/reference/org/apache/http/client/package-summary.html
http://developer.android.com/reference/org/apache/http/client/entity/package-summary.html
http://developer.android.com/reference/org/apache/http/client/methods/package-summary.html
http://developer.android.com/reference/org/apache/http/client/params/package-summary.html
http://developer.android.com/reference/org/apache/http/client/protocol/package-summary.html
http://developer.android.com/reference/org/apache/http/client/utils/package-summary.html
http://developer.android.com/reference/org/apache/http/conn/package-summary.html
http://developer.android.com/reference/org/apache/http/conn/params/package-summary.html
http://developer.android.com/reference/org/apache/http/conn/routing/package-summary.html
http://developer.android.com/reference/org/apache/http/conn/scheme/package-summary.html
http://developer.android.com/reference/org/apache/http/conn/ssl/package-summary.html
http://developer.android.com/reference/org/apache/http/conn/util/package-summary.html
http://developer.android.com/reference/org/apache/http/cookie/package-summary.html
http://developer.android.com/reference/org/apache/http/cookie/params/package-summary.html
http://developer.android.com/reference/org/apache/http/entity/package-summary.html
http://developer.android.com/reference/org/apache/http/impl/package-summary.html
http://developer.android.com/reference/org/apache/http/impl/auth/package-summary.html
http://developer.android.com/reference/org/apache/http/impl/client/package-summary.html
http://developer.android.com/reference/org/apache/http/impl/conn/package-summary.html
http://developer.android.com/reference/org/apache/http/impl/conn/tsccm/package-summary.html
http://developer.android.com/reference/org/apache/http/impl/cookie/package-summary.html
http://developer.android.com/reference/org/apache/http/impl/entity/package-summary.html
http://developer.android.com/reference/org/apache/http/impl/io/package-summary.html
http://developer.android.com/reference/org/apache/http/io/package-summary.html
http://developer.android.com/reference/org/apache/http/message/package-summary.html
http://developer.android.com/reference/org/apache/http/params/package-summary.html
http://developer.android.com/reference/org/apache/http/protocol/package-summary.html
http://developer.android.com/reference/org/apache/http/util/package-summary.html
http://developer.android.com/reference/org/json/package-summary.html
http://developer.android.com/reference/org/w3c/dom/package-summary.html
http://developer.android.com/reference/org/w3c/dom/ls/package-summary.html
http://developer.android.com/reference/org/xml/sax/package-summary.html
http://developer.android.com/reference/org/xml/sax/ext/package-summary.html
http://developer.android.com/reference/org/xml/sax/helpers/package-summary.html
http://developer.android.com/reference/org/xmlpull/v1/package-summary.html
http://developer.android.com/reference/org/xmlpull/v1/sax2/package-summary.html
http://developer.android.com/reference/android/widget/AbsListView.OnScrollListener.html
http://developer.android.com/reference/android/widget/AbsListView.RecyclerListener.html
http://developer.android.com/reference/android/widget/Adapter.html
http://developer.android.com/reference/android/widget/AdapterView.OnItemClickListener.html
http://developer.android.com/reference/android/widget/AdapterView.OnItemLongClickListener.html
http://developer.android.com/reference/android/widget/AdapterView.OnItemSelectedListener.html
http://developer.android.com/reference/android/widget/AutoCompleteTextView.Validator.html
http://developer.android.com/reference/android/widget/Checkable.html
http://developer.android.com/reference/android/widget/Chronometer.OnChronometerTickListener.html
http://developer.android.com/reference/android/widget/CompoundButton.OnCheckedChangeListener.html
http://developer.android.com/reference/android/widget/DatePicker.OnDateChangedListener.html
http://developer.android.com/reference/android/widget/ExpandableListAdapter.html
http://developer.android.com/reference/android/widget/ExpandableListView.OnChildClickListener.html
http://developer.android.com/reference/android/widget/ExpandableListView.OnGroupClickListener.html
http://developer.android.com/reference/android/widget/ExpandableListView.OnGroupCollapseListener.html
http://developer.android.com/reference/android/widget/ExpandableListView.OnGroupExpandListener.html
http://developer.android.com/reference/android/widget/Filter.FilterListener.html
http://developer.android.com/reference/android/widget/Filterable.html
http://developer.android.com/reference/android/widget/FilterQueryProvider.html
http://developer.android.com/reference/android/widget/HeterogeneousExpandableList.html
http://developer.android.com/reference/android/widget/ListAdapter.html
http://developer.android.com/reference/android/widget/MediaController.MediaPlayerControl.html
http://developer.android.com/reference/android/widget/MultiAutoCompleteTextView.Tokenizer.html
http://developer.android.com/reference/android/widget/PopupWindow.OnDismissListener.html
http://developer.android.com/reference/android/widget/RadioGroup.OnCheckedChangeListener.html
http://developer.android.com/reference/android/widget/RatingBar.OnRatingBarChangeListener.html
http://developer.android.com/reference/android/widget/SectionIndexer.html
http://developer.android.com/reference/android/widget/SeekBar.OnSeekBarChangeListener.html
http://developer.android.com/reference/android/widget/SimpleAdapter.ViewBinder.html
http://developer.android.com/reference/android/widget/SimpleCursorAdapter.CursorToStringConverter.html
http://developer.android.com/reference/android/widget/SimpleCursorAdapter.ViewBinder.html
http://developer.android.com/reference/android/widget/SimpleCursorTreeAdapter.ViewBinder.html
http://developer.android.com/reference/android/widget/SlidingDrawer.OnDrawerCloseListener.html
http://developer.android.com/reference/android/widget/SlidingDrawer.OnDrawerOpenListener.html
http://developer.android.com/reference/android/widget/SlidingDrawer.OnDrawerScrollListener.html
http://developer.android.com/reference/android/widget/SpinnerAdapter.html
http://developer.android.com/reference/android/widget/TabHost.OnTabChangeListener.html
http://developer.android.com/reference/android/widget/TabHost.TabContentFactory.html
http://developer.android.com/reference/android/widget/TextView.OnEditorActionListener.html
http://developer.android.com/reference/android/widget/TimePicker.OnTimeChangedListener.html
http://developer.android.com/reference/android/widget/ViewSwitcher.ViewFactory.html
http://developer.android.com/reference/android/widget/WrapperListAdapter.html
http://developer.android.com/reference/android/widget/ZoomButtonsController.OnZoomListener.html
http://developer.android.com/reference/android/widget/AbsListView.html
http://developer.android.com/reference/android/widget/AbsListView.LayoutParams.html
http://developer.android.com/reference/android/widget/AbsoluteLayout.html
http://developer.android.com/reference/android/widget/AbsoluteLayout.LayoutParams.html
http://developer.android.com/reference/android/widget/AbsSeekBar.html
http://developer.android.com/reference/android/widget/AbsSpinner.html
http://developer.android.com/reference/android/widget/AdapterView.html
http://developer.android.com/reference/android/widget/Adapter.html
http://developer.android.com/reference/android/widget/AdapterView.AdapterContextMenuInfo.html
http://developer.android.com/reference/android/widget/AlphabetIndexer.html
http://developer.android.com/reference/android/widget/AnalogClock.html
http://developer.android.com/reference/android/widget/ArrayAdapter.html
http://developer.android.com/reference/android/widget/AutoCompleteTextView.html
http://developer.android.com/reference/android/widget/BaseAdapter.html
http://developer.android.com/reference/android/widget/BaseExpandableListAdapter.html
http://developer.android.com/reference/android/widget/Button.html
http://developer.android.com/reference/android/widget/CheckBox.html
http://developer.android.com/reference/android/widget/CheckedTextView.html
http://developer.android.com/reference/android/widget/Chronometer.html
http://developer.android.com/reference/android/widget/CompoundButton.html
http://developer.android.com/reference/android/widget/CursorAdapter.html
http://developer.android.com/reference/android/widget/CursorTreeAdapter.html
http://developer.android.com/reference/android/widget/DatePicker.html
http://developer.android.com/reference/android/widget/DialerFilter.html
http://developer.android.com/reference/android/widget/DigitalClock.html
http://developer.android.com/reference/android/widget/EditText.html
http://developer.android.com/reference/android/widget/ExpandableListView.html
http://developer.android.com/reference/android/widget/ExpandableListView.ExpandableListContextMenuInfo.html
http://developer.android.com/reference/android/widget/Filter.html
http://developer.android.com/reference/android/widget/Filter.FilterResults.html
http://developer.android.com/reference/android/widget/FrameLayout.html
http://developer.android.com/reference/android/widget/FrameLayout.LayoutParams.html
http://developer.android.com/reference/android/widget/Gallery.html
http://developer.android.com/reference/android/widget/Gallery.LayoutParams.html
http://developer.android.com/reference/android/widget/GridView.html
http://developer.android.com/reference/android/widget/HeaderViewListAdapter.html
http://developer.android.com/reference/android/widget/HorizontalScrollView.html
http://developer.android.com/reference/android/widget/ImageButton.html
http://developer.android.com/reference/android/widget/ImageSwitcher.html
http://developer.android.com/reference/android/widget/ImageView.html
http://developer.android.com/reference/android/widget/LinearLayout.html
http://developer.android.com/reference/android/widget/LinearLayout.LayoutParams.html
http://developer.android.com/reference/android/widget/ListView.html
http://developer.android.com/reference/android/widget/ListView.FixedViewInfo.html
http://developer.android.com/reference/android/widget/MediaController.html
http://developer.android.com/reference/android/widget/MultiAutoCompleteTextView.html
http://developer.android.com/reference/android/widget/MultiAutoCompleteTextView.CommaTokenizer.html
http://developer.android.com/reference/android/widget/PopupWindow.html
http://developer.android.com/reference/android/widget/ProgressBar.html
http://developer.android.com/reference/android/widget/QuickContactBadge.html
http://developer.android.com/reference/android/widget/RadioButton.html
http://developer.android.com/reference/android/widget/RadioGroup.html
http://developer.android.com/reference/android/widget/RadioGroup.LayoutParams.html
http://developer.android.com/reference/android/widget/RatingBar.html
http://developer.android.com/reference/android/widget/RelativeLayout.html
http://developer.android.com/reference/android/widget/RelativeLayout.LayoutParams.html
http://developer.android.com/reference/android/widget/RemoteViews.html
http://developer.android.com/reference/android/widget/ResourceCursorAdapter.html
http://developer.android.com/reference/android/widget/ResourceCursorTreeAdapter.html
http://developer.android.com/reference/android/widget/Scroller.html
http://developer.android.com/reference/android/widget/ScrollView.html
http://developer.android.com/reference/android/widget/SeekBar.html
http://developer.android.com/reference/android/widget/SimpleAdapter.html
http://developer.android.com/reference/android/widget/SimpleCursorAdapter.html
http://developer.android.com/reference/android/widget/SimpleCursorTreeAdapter.html
http://developer.android.com/reference/android/widget/SimpleExpandableListAdapter.html
http://developer.android.com/reference/android/widget/SlidingDrawer.html
http://developer.android.com/reference/android/widget/Spinner.html
http://developer.android.com/reference/android/widget/TabHost.html
http://developer.android.com/reference/android/widget/TabHost.TabSpec.html
http://developer.android.com/reference/android/widget/TableLayout.html
http://developer.android.com/reference/android/widget/TableLayout.LayoutParams.html
http://developer.android.com/reference/android/widget/TableRow.html
http://developer.android.com/reference/android/widget/TableRow.LayoutParams.html
http://developer.android.com/reference/android/widget/TabWidget.html
http://developer.android.com/reference/android/widget/TextSwitcher.html
http://developer.android.com/reference/android/widget/TextView.html
http://developer.android.com/reference/android/widget/TextView.SavedState.html
http://developer.android.com/reference/android/widget/TimePicker.html
http://developer.android.com/reference/android/widget/Toast.html
http://developer.android.com/reference/android/widget/ToggleButton.html
http://developer.android.com/reference/android/widget/TwoLineListItem.html
http://developer.android.com/reference/android/widget/VideoView.html
http://developer.android.com/reference/android/widget/ViewAnimator.html
http://developer.android.com/reference/android/widget/ViewFlipper.html
http://developer.android.com/reference/android/widget/ViewSwitcher.html
http://developer.android.com/reference/android/widget/ZoomButton.html
http://developer.android.com/reference/android/widget/ZoomButtonsController.html
http://developer.android.com/reference/android/widget/ZoomControls.html
http://developer.android.com/reference/android/widget/ImageView.ScaleType.html
http://developer.android.com/reference/android/widget/TextView.BufferType.html
http://developer.android.com/reference/android/widget/RemoteViews.ActionException.html
http://developer.android.com/reference/packages.html
http://developer.android.com/reference/classes.html
http://developer.android.com/reference/android/widget/Button.html#inhattrs
http://developer.android.com/reference/android/widget/Button.html#inhconstants
http://developer.android.com/reference/android/widget/Button.html#pubctors
http://developer.android.com/reference/android/widget/Button.html#inhmethods
http://developer.android.com/reference/android/widget/Button.html
http://developer.android.com/guide/appendix/api-levels.html#level1
http://developer.android.com/reference/android/widget/TextView.html
http://developer.android.com/reference/java/lang/Object.html
http://developer.android.com/reference/android/view/View.html
http://developer.android.com/reference/android/widget/TextView.html
http://developer.android.com/reference/android/widget/Button.html
http://developer.android.com/reference/android/widget/CompoundButton.html
http://developer.android.com/reference/android/widget/CompoundButton.html
http://developer.android.com/reference/android/widget/Button.html
http://developer.android.com/reference/android/widget/CheckBox.html
http://developer.android.com/reference/android/widget/RadioButton.html
http://developer.android.com/reference/android/widget/ToggleButton.html
http://developer.android.com/reference/android/widget/CheckBox.html
http://developer.android.com/reference/android/widget/RadioButton.html
http://developer.android.com/reference/android/widget/ToggleButton.html
http://developer.android.com/resources/tutorials/views/hello-formstuff.html
http://developer.android.com/reference/android/R.styleable.html#Button
http://developer.android.com/reference/android/R.styleable.html#TextView
http://developer.android.com/reference/android/R.styleable.html#View
http://developer.android.com/reference/android/widget/Button.html
http://developer.android.com/reference/android/widget/Button.html
http://developer.android.com/reference/android/widget/TextView.html
http://developer.android.com/reference/android/widget/TextView.html#attr_android:autoLink
http://developer.android.com/reference/android/widget/TextView.html#setAutoLinkMask(int)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:autoText
http://developer.android.com/reference/android/widget/TextView.html#setKeyListener(android.text.method.KeyListener)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:bufferType
http://developer.android.com/reference/android/widget/TextView.html#setText(java.lang.CharSequence, android.widget.TextView.BufferType)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:capitalize
http://developer.android.com/reference/android/widget/TextView.html#setKeyListener(android.text.method.KeyListener)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:cursorVisible
http://developer.android.com/reference/android/widget/TextView.html#setCursorVisible(boolean)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:digits
http://developer.android.com/reference/android/widget/TextView.html#setKeyListener(android.text.method.KeyListener)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:drawableBottom
http://developer.android.com/reference/android/widget/TextView.html#setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:drawableLeft
http://developer.android.com/reference/android/widget/TextView.html#setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:drawablePadding
http://developer.android.com/reference/android/widget/TextView.html#setCompoundDrawablePadding(int)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:drawableRight
http://developer.android.com/reference/android/widget/TextView.html#setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:drawableTop
http://developer.android.com/reference/android/widget/TextView.html#setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:editable
http://developer.android.com/reference/android/widget/TextView.html#attr_android:editorExtras
http://developer.android.com/reference/android/widget/TextView.html#setInputExtras(int)
http://developer.android.com/reference/android/R.styleable.html#InputExtras
http://developer.android.com/reference/android/widget/TextView.html#attr_android:ellipsize
http://developer.android.com/reference/android/widget/TextView.html#setEllipsize(android.text.TextUtils.TruncateAt)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:ems
http://developer.android.com/reference/android/widget/TextView.html#setEms(int)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:freezesText
http://developer.android.com/reference/android/widget/TextView.html#setFreezesText(boolean)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:gravity
http://developer.android.com/reference/android/widget/TextView.html#setGravity(int)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:height
http://developer.android.com/reference/android/widget/TextView.html#setHeight(int)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:hint
http://developer.android.com/reference/android/widget/TextView.html#setHint(int)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:imeActionId
http://developer.android.com/reference/android/widget/TextView.html#setImeActionLabel(java.lang.CharSequence, int)
http://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#actionId
http://developer.android.com/reference/android/widget/TextView.html#attr_android:imeActionLabel
http://developer.android.com/reference/android/widget/TextView.html#setImeActionLabel(java.lang.CharSequence, int)
http://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#actionLabel
http://developer.android.com/reference/android/widget/TextView.html#attr_android:imeOptions
http://developer.android.com/reference/android/widget/TextView.html#setImeOptions(int)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:includeFontPadding
http://developer.android.com/reference/android/widget/TextView.html#setIncludeFontPadding(boolean)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:inputMethod
http://developer.android.com/reference/android/widget/TextView.html#setKeyListener(android.text.method.KeyListener)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:inputType
http://developer.android.com/reference/android/widget/TextView.html#setRawInputType(int)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:lineSpacingExtra
http://developer.android.com/reference/android/widget/TextView.html#setLineSpacing(float, float)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:lineSpacingMultiplier
http://developer.android.com/reference/android/widget/TextView.html#setLineSpacing(float, float)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:lines
http://developer.android.com/reference/android/widget/TextView.html#setLines(int)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:linksClickable
http://developer.android.com/reference/android/widget/TextView.html#setLinksClickable(boolean)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:marqueeRepeatLimit
http://developer.android.com/reference/android/widget/TextView.html#setMarqueeRepeatLimit(int)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:maxEms
http://developer.android.com/reference/android/widget/TextView.html#setMaxEms(int)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:maxHeight
http://developer.android.com/reference/android/widget/TextView.html#setMaxHeight(int)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:maxLength
http://developer.android.com/reference/android/widget/TextView.html#setFilters(android.text.InputFilter[])
http://developer.android.com/reference/android/widget/TextView.html#attr_android:maxLines
http://developer.android.com/reference/android/widget/TextView.html#setMaxLines(int)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:maxWidth
http://developer.android.com/reference/android/widget/TextView.html#setMaxWidth(int)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:minEms
http://developer.android.com/reference/android/widget/TextView.html#setMinEms(int)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:minHeight
http://developer.android.com/reference/android/widget/TextView.html#setMinHeight(int)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:minLines
http://developer.android.com/reference/android/widget/TextView.html#setMinLines(int)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:minWidth
http://developer.android.com/reference/android/widget/TextView.html#setMinWidth(int)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:numeric
http://developer.android.com/reference/android/widget/TextView.html#setKeyListener(android.text.method.KeyListener)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:password
http://developer.android.com/reference/android/widget/TextView.html#setTransformationMethod(android.text.method.TransformationMethod)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:phoneNumber
http://developer.android.com/reference/android/widget/TextView.html#setKeyListener(android.text.method.KeyListener)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:privateImeOptions
http://developer.android.com/reference/android/widget/TextView.html#setPrivateImeOptions(java.lang.String)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:scrollHorizontally
http://developer.android.com/reference/android/widget/TextView.html#setHorizontallyScrolling(boolean)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:selectAllOnFocus
http://developer.android.com/reference/android/widget/TextView.html#setSelectAllOnFocus(boolean)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:shadowColor
http://developer.android.com/reference/android/widget/TextView.html#setShadowLayer(float, float, float, int)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:shadowDx
http://developer.android.com/reference/android/widget/TextView.html#setShadowLayer(float, float, float, int)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:shadowDy
http://developer.android.com/reference/android/widget/TextView.html#setShadowLayer(float, float, float, int)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:shadowRadius
http://developer.android.com/reference/android/widget/TextView.html#setShadowLayer(float, float, float, int)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:singleLine
http://developer.android.com/reference/android/widget/TextView.html#setTransformationMethod(android.text.method.TransformationMethod)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:text
http://developer.android.com/reference/android/widget/TextView.html#setText(java.lang.CharSequence)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:textAppearance
http://developer.android.com/reference/android/widget/TextView.html#attr_android:textColor
http://developer.android.com/reference/android/widget/TextView.html#setTextColor(android.content.res.ColorStateList)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:textColorHighlight
http://developer.android.com/reference/android/widget/TextView.html#setHighlightColor(int)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:textColorHint
http://developer.android.com/reference/android/widget/TextView.html#setHintTextColor(int)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:textColorLink
http://developer.android.com/reference/android/widget/TextView.html#setLinkTextColor(int)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:textScaleX
http://developer.android.com/reference/android/widget/TextView.html#setTextScaleX(float)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:textSize
http://developer.android.com/reference/android/widget/TextView.html#setTextSize(float)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:textStyle
http://developer.android.com/reference/android/widget/TextView.html#setTypeface(android.graphics.Typeface)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:typeface
http://developer.android.com/reference/android/widget/TextView.html#setTypeface(android.graphics.Typeface)
http://developer.android.com/reference/android/widget/TextView.html#attr_android:width
http://developer.android.com/reference/android/widget/TextView.html#setWidth(int)
http://developer.android.com/reference/android/widget/Button.html
http://developer.android.com/reference/android/view/View.html
http://developer.android.com/reference/android/view/View.html#attr_android:background
http://developer.android.com/reference/android/view/View.html#setBackgroundResource(int)
http://developer.android.com/reference/android/view/View.html#attr_android:clickable
http://developer.android.com/reference/android/view/View.html#setClickable(boolean)
http://developer.android.com/reference/android/view/View.html#attr_android:contentDescription
http://developer.android.com/reference/android/view/View.html#setContentDescription(java.lang.CharSequence)
http://developer.android.com/reference/android/view/View.html#attr_android:drawingCacheQuality
http://developer.android.com/reference/android/view/View.html#setDrawingCacheQuality(int)
http://developer.android.com/reference/android/view/View.html#attr_android:duplicateParentState
http://developer.android.com/reference/android/view/View.html#attr_android:fadingEdge
http://developer.android.com/reference/android/view/View.html#setVerticalFadingEdgeEnabled(boolean)
http://developer.android.com/reference/android/view/View.html#attr_android:fadingEdgeLength
http://developer.android.com/reference/android/view/View.html#getVerticalFadingEdgeLength()
http://developer.android.com/reference/android/view/View.html#attr_android:fitsSystemWindows
http://developer.android.com/reference/android/view/View.html#attr_android:focusable
http://developer.android.com/reference/android/view/View.html#setFocusable(boolean)
http://developer.android.com/reference/android/view/View.html#attr_android:focusableInTouchMode
http://developer.android.com/reference/android/view/View.html#setFocusableInTouchMode(boolean)
http://developer.android.com/reference/android/view/View.html#attr_android:hapticFeedbackEnabled
http://developer.android.com/reference/android/view/View.html#setHapticFeedbackEnabled(boolean)
http://developer.android.com/reference/android/view/View.html#attr_android:id
http://developer.android.com/reference/android/view/View.html#setId(int)
http://developer.android.com/reference/android/view/View.html#findViewById(int)
http://developer.android.com/reference/android/app/Activity.html#findViewById(int)
http://developer.android.com/reference/android/view/View.html#attr_android:isScrollContainer
http://developer.android.com/reference/android/view/View.html#attr_android:keepScreenOn
http://developer.android.com/reference/android/view/View.html#setKeepScreenOn(boolean)
http://developer.android.com/reference/android/view/View.html#attr_android:longClickable
http://developer.android.com/reference/android/view/View.html#setLongClickable(boolean)
http://developer.android.com/reference/android/view/View.html#attr_android:minHeight
http://developer.android.com/reference/android/view/View.html#attr_android:minWidth
http://developer.android.com/reference/android/view/View.html#attr_android:nextFocusDown
http://developer.android.com/reference/android/view/View.html#setNextFocusDownId(int)
http://developer.android.com/reference/android/view/View.html#FOCUS_DOWN
http://developer.android.com/reference/java/lang/RuntimeException.html
http://developer.android.com/reference/android/view/View.html#attr_android:nextFocusLeft
http://developer.android.com/reference/android/view/View.html#setNextFocusLeftId(int)
http://developer.android.com/reference/android/view/View.html#FOCUS_LEFT
http://developer.android.com/reference/android/view/View.html#attr_android:nextFocusRight
http://developer.android.com/reference/android/view/View.html#setNextFocusRightId(int)
http://developer.android.com/reference/android/view/View.html#FOCUS_RIGHT
http://developer.android.com/reference/java/lang/RuntimeException.html
http://developer.android.com/reference/android/view/View.html#attr_android:nextFocusUp
http://developer.android.com/reference/android/view/View.html#setNextFocusUpId(int)
http://developer.android.com/reference/android/view/View.html#FOCUS_UP
http://developer.android.com/reference/java/lang/RuntimeException.html
http://developer.android.com/reference/android/view/View.html#attr_android:onClick
http://developer.android.com/reference/android/view/View.html#attr_android:padding
http://developer.android.com/reference/android/view/View.html#setPadding(int, int, int, int)
http://developer.android.com/reference/android/view/View.html#attr_android:paddingBottom
http://developer.android.com/reference/android/view/View.html#setPadding(int, int, int, int)
http://developer.android.com/reference/android/R.attr.html#padding
http://developer.android.com/reference/android/view/View.html#attr_android:paddingLeft
http://developer.android.com/reference/android/view/View.html#setPadding(int, int, int, int)
http://developer.android.com/reference/android/R.attr.html#padding
http://developer.android.com/reference/android/view/View.html#attr_android:paddingRight
http://developer.android.com/reference/android/view/View.html#setPadding(int, int, int, int)
http://developer.android.com/reference/android/R.attr.html#padding
http://developer.android.com/reference/android/view/View.html#attr_android:paddingTop
http://developer.android.com/reference/android/view/View.html#setPadding(int, int, int, int)
http://developer.android.com/reference/android/R.attr.html#padding
http://developer.android.com/reference/android/view/View.html#attr_android:saveEnabled
http://developer.android.com/reference/android/view/View.html#setSaveEnabled(boolean)
http://developer.android.com/reference/android/view/View.html#attr_android:scrollX
http://developer.android.com/reference/android/view/View.html#attr_android:scrollY
http://developer.android.com/reference/android/view/View.html#attr_android:scrollbarAlwaysDrawHorizontalTrack
http://developer.android.com/reference/android/view/View.html#attr_android:scrollbarAlwaysDrawVerticalTrack
http://developer.android.com/reference/android/view/View.html#attr_android:scrollbarDefaultDelayBeforeFade
http://developer.android.com/reference/android/view/View.html#attr_android:scrollbarFadeDuration
http://developer.android.com/reference/android/view/View.html#attr_android:scrollbarSize
http://developer.android.com/reference/android/view/View.html#attr_android:scrollbarStyle
http://developer.android.com/reference/android/view/View.html#attr_android:scrollbarThumbHorizontal
http://developer.android.com/reference/android/view/View.html#attr_android:scrollbarThumbVertical
http://developer.android.com/reference/android/view/View.html#attr_android:scrollbarTrackHorizontal
http://developer.android.com/reference/android/view/View.html#attr_android:scrollbarTrackVertical
http://developer.android.com/reference/android/view/View.html#attr_android:scrollbars
http://developer.android.com/reference/android/view/View.html#attr_android:soundEffectsEnabled
http://developer.android.com/reference/android/view/View.html#setSoundEffectsEnabled(boolean)
http://developer.android.com/reference/android/view/View.html#attr_android:tag
http://developer.android.com/reference/android/view/View.html#getTag()
http://developer.android.com/reference/android/view/View.html#findViewWithTag(java.lang.Object)
http://developer.android.com/reference/android/view/View.html#attr_android:visibility
http://developer.android.com/reference/android/view/View.html#setVisibility(int)
http://developer.android.com/reference/android/widget/Button.html
http://developer.android.com/reference/android/widget/Button.html
http://developer.android.com/reference/android/view/View.html
http://developer.android.com/reference/android/view/View.html#DRAWING_CACHE_QUALITY_AUTO
http://developer.android.com/reference/android/view/View.html#DRAWING_CACHE_QUALITY_HIGH
http://developer.android.com/reference/android/view/View.html#DRAWING_CACHE_QUALITY_LOW
http://developer.android.com/reference/android/view/View.html#EMPTY_STATE_SET
http://developer.android.com/reference/android/view/View.html#ENABLED_FOCUSED_SELECTED_STATE_SET
http://developer.android.com/reference/android/view/View.html#ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET
http://developer.android.com/reference/android/view/View.html#ENABLED_FOCUSED_STATE_SET
http://developer.android.com/reference/android/view/View.html#ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET
http://developer.android.com/reference/android/view/View.html#ENABLED_SELECTED_STATE_SET
http://developer.android.com/reference/android/view/View.html#ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET
http://developer.android.com/reference/android/view/View.html#ENABLED_STATE_SET
http://developer.android.com/reference/android/view/View.html#ENABLED_WINDOW_FOCUSED_STATE_SET
http://developer.android.com/reference/android/view/View.html#FOCUSABLES_ALL
http://developer.android.com/reference/android/view/View.html#addFocusables(java.util.ArrayList<android.view.View>, int, int)
http://developer.android.com/reference/android/view/View.html#FOCUSABLES_TOUCH_MODE
http://developer.android.com/reference/android/view/View.html#addFocusables(java.util.ArrayList<android.view.View>, int, int)
http://developer.android.com/reference/android/view/View.html#FOCUSED_SELECTED_STATE_SET
http://developer.android.com/reference/android/view/View.html#FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET
http://developer.android.com/reference/android/view/View.html#FOCUSED_STATE_SET
http://developer.android.com/reference/android/view/View.html#FOCUSED_WINDOW_FOCUSED_STATE_SET
http://developer.android.com/reference/android/view/View.html#FOCUS_BACKWARD
http://developer.android.com/reference/android/view/View.html#focusSearch(int)
http://developer.android.com/reference/android/view/View.html#FOCUS_DOWN
http://developer.android.com/reference/android/view/View.html#focusSearch(int)
http://developer.android.com/reference/android/view/View.html#FOCUS_FORWARD
http://developer.android.com/reference/android/view/View.html#focusSearch(int)
http://developer.android.com/reference/android/view/View.html#FOCUS_LEFT
http://developer.android.com/reference/android/view/View.html#focusSearch(int)
http://developer.android.com/reference/android/view/View.html#FOCUS_RIGHT
http://developer.android.com/reference/android/view/View.html#focusSearch(int)
http://developer.android.com/reference/android/view/View.html#FOCUS_UP
http://developer.android.com/reference/android/view/View.html#focusSearch(int)
http://developer.android.com/reference/android/view/View.html#GONE
http://developer.android.com/reference/android/view/View.html#HAPTIC_FEEDBACK_ENABLED
http://developer.android.com/reference/android/view/View.html#INVISIBLE
http://developer.android.com/reference/android/view/View.html#KEEP_SCREEN_ON
http://developer.android.com/reference/android/view/View.html#NO_ID
http://developer.android.com/reference/android/view/View.html#PRESSED_ENABLED_FOCUSED_SELECTED_STATE_SET
http://developer.android.com/reference/android/view/View.html#PRESSED_ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET
http://developer.android.com/reference/android/view/View.html#PRESSED_ENABLED_FOCUSED_STATE_SET
http://developer.android.com/reference/android/view/View.html#PRESSED_ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET
http://developer.android.com/reference/android/view/View.html#PRESSED_ENABLED_SELECTED_STATE_SET
http://developer.android.com/reference/android/view/View.html#PRESSED_ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET
http://developer.android.com/reference/android/view/View.html#PRESSED_ENABLED_STATE_SET
http://developer.android.com/reference/android/view/View.html#PRESSED_ENABLED_WINDOW_FOCUSED_STATE_SET
http://developer.android.com/reference/android/view/View.html#PRESSED_FOCUSED_SELECTED_STATE_SET
http://developer.android.com/reference/android/view/View.html#PRESSED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET
http://developer.android.com/reference/android/view/View.html#PRESSED_FOCUSED_STATE_SET
http://developer.android.com/reference/android/view/View.html#PRESSED_FOCUSED_WINDOW_FOCUSED_STATE_SET
http://developer.android.com/reference/android/view/View.html#PRESSED_SELECTED_STATE_SET
http://developer.android.com/reference/android/view/View.html#PRESSED_SELECTED_WINDOW_FOCUSED_STATE_SET
http://developer.android.com/reference/android/view/View.html#PRESSED_WINDOW_FOCUSED_STATE_SET
http://developer.android.com/reference/android/view/View.html#SCROLLBARS_INSIDE_INSET
http://developer.android.com/reference/android/view/View.html#SCROLLBARS_INSIDE_OVERLAY
http://developer.android.com/reference/android/view/View.html#SCROLLBARS_OUTSIDE_INSET
http://developer.android.com/reference/android/view/View.html#SCROLLBARS_OUTSIDE_OVERLAY
http://developer.android.com/reference/android/view/View.html#SELECTED_STATE_SET
http://developer.android.com/reference/android/view/View.html#SELECTED_WINDOW_FOCUSED_STATE_SET
http://developer.android.com/reference/android/view/View.html#SOUND_EFFECTS_ENABLED
http://developer.android.com/reference/java/lang/String.html
http://developer.android.com/reference/android/view/View.html#VIEW_LOG_TAG
http://developer.android.com/reference/android/view/View.html#VISIBLE
http://developer.android.com/reference/android/view/View.html#WINDOW_FOCUSED_STATE_SET
http://developer.android.com/reference/android/widget/Button.html#Button(android.content.Context)
http://developer.android.com/reference/android/content/Context.html
http://developer.android.com/reference/android/widget/Button.html#Button(android.content.Context, android.util.AttributeSet)
http://developer.android.com/reference/android/content/Context.html
http://developer.android.com/reference/android/util/AttributeSet.html
http://developer.android.com/reference/android/widget/Button.html#Button(android.content.Context, android.util.AttributeSet, int)
http://developer.android.com/reference/android/content/Context.html
http://developer.android.com/reference/android/util/AttributeSet.html
http://developer.android.com/reference/android/widget/Button.html
http://developer.android.com/reference/android/widget/Button.html
http://developer.android.com/reference/android/widget/TextView.html
http://developer.android.com/reference/android/widget/TextView.html#addTextChangedListener(android.text.TextWatcher)
http://developer.android.com/reference/android/text/TextWatcher.html
http://developer.android.com/reference/android/widget/TextView.html#append(java.lang.CharSequence)
http://developer.android.com/reference/java/lang/CharSequence.html
http://developer.android.com/reference/android/widget/TextView.html#append(java.lang.CharSequence, int, int)
http://developer.android.com/reference/java/lang/CharSequence.html
http://developer.android.com/reference/android/widget/TextView.html#beginBatchEdit()
http://developer.android.com/reference/android/widget/TextView.html#bringPointIntoView(int)
http://developer.android.com/reference/android/widget/TextView.html#cancelLongPress()
http://developer.android.com/reference/android/widget/TextView.html#clearComposingText()
http://developer.android.com/reference/android/view/inputmethod/BaseInputConnection.html#removeComposingSpans(android.text.Spannable)
http://developer.android.com/reference/android/widget/TextView.html#computeHorizontalScrollRange()
http://developer.android.com/reference/android/widget/TextView.html#computeScroll()
http://developer.android.com/reference/android/widget/TextView.html#computeVerticalScrollExtent()
http://developer.android.com/reference/android/widget/TextView.html#computeVerticalScrollRange()
http://developer.android.com/reference/android/widget/TextView.html#debug(int)
http://developer.android.com/reference/android/view/View.html#VIEW_LOG_TAG
http://developer.android.com/reference/android/widget/TextView.html#didTouchFocusSelect()
http://developer.android.com/reference/android/widget/TextView.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
http://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html
http://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html
http://developer.android.com/reference/android/view/View.html
http://developer.android.com/reference/android/widget/TextView.html#drawableStateChanged()
http://developer.android.com/reference/android/widget/TextView.html#endBatchEdit()
http://developer.android.com/reference/android/widget/TextView.html#extractText(android.view.inputmethod.ExtractedTextRequest, android.view.inputmethod.ExtractedText)
http://developer.android.com/reference/android/view/inputmethod/ExtractedTextRequest.html
http://developer.android.com/reference/android/view/inputmethod/ExtractedText.html
http://developer.android.com/reference/android/widget/TextView.html#getAutoLinkMask()
http://developer.android.com/reference/android/widget/TextView.html#getBaseline()
http://developer.android.com/reference/android/widget/TextView.html#getBottomPaddingOffset()
http://developer.android.com/reference/android/widget/TextView.html#getCompoundDrawablePadding()
http://developer.android.com/reference/android/graphics/drawable/Drawable.html
http://developer.android.com/reference/android/widget/TextView.html#getCompoundDrawables()
http://developer.android.com/reference/android/widget/TextView.html#getCompoundPaddingBottom()
http://developer.android.com/reference/android/widget/TextView.html#getCompoundPaddingLeft()
http://developer.android.com/reference/android/widget/TextView.html#getCompoundPaddingRight()
http://developer.android.com/reference/android/widget/TextView.html#getCompoundPaddingTop()
http://developer.android.com/reference/android/widget/TextView.html#getCurrentHintTextColor()
http://developer.android.com/reference/android/widget/TextView.html#getCurrentTextColor()
http://developer.android.com/reference/android/widget/TextView.html#getDefaultEditable()
http://developer.android.com/reference/android/text/method/MovementMethod.html
http://developer.android.com/reference/android/widget/TextView.html#getDefaultMovementMethod()
http://developer.android.com/reference/android/text/Editable.html
http://developer.android.com/reference/android/widget/TextView.html#getEditableText()
http://developer.android.com/reference/android/text/TextUtils.TruncateAt.html
http://developer.android.com/reference/android/widget/TextView.html#getEllipsize()
http://developer.android.com/reference/java/lang/CharSequence.html
http://developer.android.com/reference/android/widget/TextView.html#getError()
http://developer.android.com/reference/android/widget/TextView.html#setError(java.lang.CharSequence)
http://developer.android.com/reference/android/widget/TextView.html#getExtendedPaddingBottom()
http://developer.android.com/reference/android/widget/TextView.html#getExtendedPaddingTop()
http://developer.android.com/reference/android/text/InputFilter.html
http://developer.android.com/reference/android/widget/TextView.html#getFilters()
http://developer.android.com/reference/android/widget/TextView.html#getFocusedRect(android.graphics.Rect)
http://developer.android.com/reference/android/graphics/Rect.html
http://developer.android.com/reference/android/widget/TextView.html#getFreezesText()
http://developer.android.com/reference/android/widget/TextView.html#getGravity()
http://developer.android.com/reference/java/lang/CharSequence.html
http://developer.android.com/reference/android/widget/TextView.html#getHint()
http://developer.android.com/reference/android/content/res/ColorStateList.html
http://developer.android.com/reference/android/widget/TextView.html#getHintTextColors()
http://developer.android.com/reference/android/widget/TextView.html#getImeActionId()
http://developer.android.com/reference/android/widget/TextView.html#setImeActionLabel(java.lang.CharSequence, int)
http://developer.android.com/reference/java/lang/CharSequence.html
http://developer.android.com/reference/android/widget/TextView.html#getImeActionLabel()
http://developer.android.com/reference/android/widget/TextView.html#setImeActionLabel(java.lang.CharSequence, int)
http://developer.android.com/reference/android/widget/TextView.html#getImeOptions()
http://developer.android.com/reference/android/os/Bundle.html
http://developer.android.com/reference/android/widget/TextView.html#getInputExtras(boolean)
http://developer.android.com/reference/android/widget/TextView.html#getInputType()
http://developer.android.com/reference/android/text/method/KeyListener.html
http://developer.android.com/reference/android/widget/TextView.html#getKeyListener()
http://developer.android.com/reference/android/text/Layout.html
http://developer.android.com/reference/android/widget/TextView.html#getLayout()
http://developer.android.com/reference/android/widget/TextView.html#getLeftFadingEdgeStrength()
http://developer.android.com/reference/android/widget/TextView.html#getLeftPaddingOffset()
http://developer.android.com/reference/android/widget/TextView.html#getLineBounds(int, android.graphics.Rect)
http://developer.android.com/reference/android/graphics/Rect.html
http://developer.android.com/reference/android/widget/TextView.html#getLineCount()
http://developer.android.com/reference/android/widget/TextView.html#getLineHeight()
http://developer.android.com/reference/android/content/res/ColorStateList.html
http://developer.android.com/reference/android/widget/TextView.html#getLinkTextColors()
http://developer.android.com/reference/android/widget/TextView.html#getLinksClickable()
http://developer.android.com/reference/android/text/method/LinkMovementMethod.html
http://developer.android.com/reference/android/widget/TextView.html#setAutoLinkMask(int)
http://developer.android.com/reference/android/widget/TextView.html#setText(char[], int, int)
http://developer.android.com/reference/android/text/method/MovementMethod.html
http://developer.android.com/reference/android/widget/TextView.html#getMovementMethod()
http://developer.android.com/reference/android/text/TextPaint.html
http://developer.android.com/reference/android/widget/TextView.html#getPaint()
http://developer.android.com/reference/android/widget/TextView.html#getPaintFlags()
http://developer.android.com/reference/java/lang/String.html
http://developer.android.com/reference/android/widget/TextView.html#getPrivateImeOptions()
http://developer.android.com/reference/android/widget/TextView.html#getRightFadingEdgeStrength()
http://developer.android.com/reference/android/widget/TextView.html#getRightPaddingOffset()
http://developer.android.com/reference/android/widget/TextView.html#getSelectionEnd()
http://developer.android.com/reference/android/text/Selection.html#getSelectionEnd(java.lang.CharSequence)
http://developer.android.com/reference/android/widget/TextView.html#getSelectionStart()
http://developer.android.com/reference/android/text/Selection.html#getSelectionStart(java.lang.CharSequence)
http://developer.android.com/reference/java/lang/CharSequence.html
http://developer.android.com/reference/android/widget/TextView.html#getText()
http://developer.android.com/reference/android/widget/TextView.html#getTextColor(android.content.Context, android.content.res.TypedArray, int)
http://developer.android.com/reference/android/content/Context.html
http://developer.android.com/reference/android/content/res/TypedArray.html
http://developer.android.com/reference/android/content/res/ColorStateList.html
http://developer.android.com/reference/android/widget/TextView.html#getTextColors()
http://developer.android.com/reference/android/content/res/ColorStateList.html
http://developer.android.com/reference/android/widget/TextView.html#getTextColors(android.content.Context, android.content.res.TypedArray)
http://developer.android.com/reference/android/content/Context.html
http://developer.android.com/reference/android/content/res/TypedArray.html
http://developer.android.com/reference/android/widget/TextView.html#getTextScaleX()
http://developer.android.com/reference/android/widget/TextView.html#getTextSize()
http://developer.android.com/reference/android/widget/TextView.html#getTopPaddingOffset()
http://developer.android.com/reference/android/widget/TextView.html#getTotalPaddingBottom()
http://developer.android.com/reference/android/widget/TextView.html#getTotalPaddingLeft()
http://developer.android.com/reference/android/widget/TextView.html#getTotalPaddingRight()
http://developer.android.com/reference/android/widget/TextView.html#getTotalPaddingTop()
http://developer.android.com/reference/android/text/method/TransformationMethod.html
http://developer.android.com/reference/android/widget/TextView.html#getTransformationMethod()
http://developer.android.com/reference/android/graphics/Typeface.html
http://developer.android.com/reference/android/widget/TextView.html#getTypeface()
http://developer.android.com/reference/android/text/style/URLSpan.html
http://developer.android.com/reference/android/widget/TextView.html#getUrls()
http://developer.android.com/reference/android/text/util/Linkify.html
http://developer.android.com/reference/android/widget/TextView.html#hasSelection()
http://developer.android.com/reference/android/widget/TextView.html#invalidateDrawable(android.graphics.drawable.Drawable)
http://developer.android.com/reference/android/graphics/drawable/Drawable.html
http://developer.android.com/reference/android/widget/TextView.html#isInputMethodTarget()
http://developer.android.com/reference/android/widget/TextView.html#isPaddingOffsetRequired()
http://developer.android.com/reference/android/widget/TextView.html#length()
http://developer.android.com/reference/android/widget/TextView.html#moveCursorToVisibleOffset()
http://developer.android.com/reference/android/widget/TextView.html#onAttachedToWindow()
http://developer.android.com/reference/android/widget/TextView.html#onBeginBatchEdit()
http://developer.android.com/reference/android/widget/TextView.html#beginBatchEdit()
http://developer.android.com/reference/android/widget/TextView.html#onCheckIsTextEditor()
http://developer.android.com/reference/android/widget/TextView.html#onCommitCompletion(android.view.inputmethod.CompletionInfo)
http://developer.android.com/reference/android/view/inputmethod/CompletionInfo.html
http://developer.android.com/reference/android/view/inputmethod/InputConnection.html#commitCompletion(android.view.inputmethod.CompletionInfo)
http://developer.android.com/reference/android/widget/TextView.html#onCreateContextMenu(android.view.ContextMenu)
http://developer.android.com/reference/android/view/ContextMenu.html
http://developer.android.com/reference/android/view/inputmethod/InputConnection.html
http://developer.android.com/reference/android/widget/TextView.html#onCreateInputConnection(android.view.inputmethod.EditorInfo)
http://developer.android.com/reference/android/view/inputmethod/EditorInfo.html
http://developer.android.com/reference/android/widget/TextView.html#onDetachedFromWindow()
http://developer.android.com/reference/android/widget/TextView.html#onDraw(android.graphics.Canvas)
http://developer.android.com/reference/android/graphics/Canvas.html
http://developer.android.com/reference/android/widget/TextView.html#onEditorAction(int)
http://developer.android.com/reference/android/view/inputmethod/InputConnection.html#performEditorAction(int)
http://developer.android.com/reference/android/widget/TextView.html#onEndBatchEdit()
http://developer.android.com/reference/android/widget/TextView.html#endBatchEdit()
http://developer.android.com/reference/android/widget/TextView.html#onFinishTemporaryDetach()
http://developer.android.com/reference/android/view/View.html#onStartTemporaryDetach()
http://developer.android.com/reference/android/widget/TextView.html#onFocusChanged(boolean, int, android.graphics.Rect)
http://developer.android.com/reference/android/graphics/Rect.html
http://developer.android.com/reference/android/widget/TextView.html#onKeyDown(int, android.view.KeyEvent)
http://developer.android.com/reference/android/view/KeyEvent.html
http://developer.android.com/reference/android/view/KeyEvent.Callback.html#onKeyMultiple(int, int, android.view.KeyEvent)
http://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_DPAD_CENTER
http://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_ENTER
http://developer.android.com/reference/android/widget/TextView.html#onKeyMultiple(int, int, android.view.KeyEvent)
http://developer.android.com/reference/android/view/KeyEvent.html
http://developer.android.com/reference/android/view/KeyEvent.Callback.html#onKeyMultiple(int, int, android.view.KeyEvent)
http://developer.android.com/reference/android/widget/TextView.html#onKeyShortcut(int, android.view.KeyEvent)
http://developer.android.com/reference/android/view/KeyEvent.html
http://developer.android.com/reference/android/widget/TextView.html#onKeyUp(int, android.view.KeyEvent)
http://developer.android.com/reference/android/view/KeyEvent.html
http://developer.android.com/reference/android/view/KeyEvent.Callback.html#onKeyMultiple(int, int, android.view.KeyEvent)
http://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_DPAD_CENTER
http://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_ENTER
http://developer.android.com/reference/android/widget/TextView.html#onMeasure(int, int)
http://developer.android.com/reference/android/widget/TextView.html#onPreDraw()
http://developer.android.com/reference/android/widget/TextView.html#onPrivateIMECommand(java.lang.String, android.os.Bundle)
http://developer.android.com/reference/java/lang/String.html
http://developer.android.com/reference/android/os/Bundle.html
http://developer.android.com/reference/android/view/inputmethod/InputConnection.html#performPrivateCommand(java.lang.String, android.os.Bundle)
http://developer.android.com/reference/android/widget/TextView.html#onRestoreInstanceState(android.os.Parcelable)
http://developer.android.com/reference/android/os/Parcelable.html
http://developer.android.com/reference/android/view/View.html#onSaveInstanceState()
http://developer.android.com/reference/android/os/Parcelable.html
http://developer.android.com/reference/android/widget/TextView.html#onSaveInstanceState()
http://developer.android.com/reference/android/widget/TextView.html#onSelectionChanged(int, int)
http://developer.android.com/reference/android/widget/TextView.html#onStartTemporaryDetach()
http://developer.android.com/reference/android/view/ViewGroup.html#detachViewFromParent(android.view.View)
http://developer.android.com/reference/android/widget/TextView.html#onTextChanged(java.lang.CharSequence, int, int, int)
http://developer.android.com/reference/java/lang/CharSequence.html
http://developer.android.com/reference/android/widget/TextView.html#onTextContextMenuItem(int)
http://developer.android.com/reference/android/widget/TextView.html#onTouchEvent(android.view.MotionEvent)
http://developer.android.com/reference/android/view/MotionEvent.html
http://developer.android.com/reference/android/widget/TextView.html#onTrackballEvent(android.view.MotionEvent)
http://developer.android.com/reference/android/view/MotionEvent.html
http://developer.android.com/reference/android/widget/TextView.html#onWindowFocusChanged(boolean)
http://developer.android.com/reference/android/widget/TextView.html#performLongClick()
http://developer.android.com/reference/android/widget/TextView.html#removeTextChangedListener(android.text.TextWatcher)
http://developer.android.com/reference/android/text/TextWatcher.html
http://developer.android.com/reference/android/widget/TextView.html#setAutoLinkMask(int)
http://developer.android.com/reference/android/widget/TextView.html#setCompoundDrawablePadding(int)
http://developer.android.com/reference/android/widget/TextView.html#setCompoundDrawables(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
http://developer.android.com/reference/android/graphics/drawable/Drawable.html
http://developer.android.com/reference/android/graphics/drawable/Drawable.html
http://developer.android.com/reference/android/graphics/drawable/Drawable.html
http://developer.android.com/reference/android/graphics/drawable/Drawable.html
http://developer.android.com/reference/android/widget/TextView.html#setCompoundDrawablesWithIntrinsicBounds(int, int, int, int)
http://developer.android.com/reference/android/widget/TextView.html#setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
http://developer.android.com/reference/android/graphics/drawable/Drawable.html
http://developer.android.com/reference/android/graphics/drawable/Drawable.html
http://developer.android.com/reference/android/graphics/drawable/Drawable.html
http://developer.android.com/reference/android/graphics/drawable/Drawable.html
http://developer.android.com/reference/android/widget/TextView.html#setCursorVisible(boolean)
http://developer.android.com/reference/android/widget/TextView.html#setEditableFactory(android.text.Editable.Factory)
http://developer.android.com/reference/android/text/Editable.Factory.html
http://developer.android.com/reference/android/widget/TextView.html#setEllipsize(android.text.TextUtils.TruncateAt)
http://developer.android.com/reference/android/text/TextUtils.TruncateAt.html
http://developer.android.com/reference/android/widget/TextView.html#setEms(int)
http://developer.android.com/reference/android/widget/TextView.html#setError(java.lang.CharSequence)
http://developer.android.com/reference/java/lang/CharSequence.html
http://developer.android.com/reference/android/widget/TextView.html#setError(java.lang.CharSequence, android.graphics.drawable.Drawable)
http://developer.android.com/reference/java/lang/CharSequence.html
http://developer.android.com/reference/android/graphics/drawable/Drawable.html
http://developer.android.com/reference/android/widget/TextView.html#setExtractedText(android.view.inputmethod.ExtractedText)
http://developer.android.com/reference/android/view/inputmethod/ExtractedText.html
http://developer.android.com/reference/android/widget/TextView.html#extractText(android.view.inputmethod.ExtractedTextRequest, android.view.inputmethod.ExtractedText)
http://developer.android.com/reference/android/widget/TextView.html#setFilters(android.text.InputFilter[])
http://developer.android.com/reference/android/text/InputFilter.html
http://developer.android.com/reference/android/widget/TextView.html#setFrame(int, int, int, int)
http://developer.android.com/reference/android/widget/TextView.html#setFreezesText(boolean)
http://developer.android.com/reference/android/widget/TextView.html#setGravity(int)
http://developer.android.com/reference/android/widget/TextView.html#setHeight(int)
http://developer.android.com/reference/android/widget/TextView.html#setHighlightColor(int)
http://developer.android.com/reference/android/widget/TextView.html#setHint(java.lang.CharSequence)
http://developer.android.com/reference/java/lang/CharSequence.html
http://developer.android.com/reference/android/widget/TextView.html#setHint(int)
http://developer.android.com/reference/android/widget/TextView.html#setHintTextColor(android.content.res.ColorStateList)
http://developer.android.com/reference/android/content/res/ColorStateList.html
http://developer.android.com/reference/android/widget/TextView.html#setHintTextColor(int)
http://developer.android.com/reference/android/widget/TextView.html#setHorizontallyScrolling(boolean)
http://developer.android.com/reference/android/widget/TextView.html#setImeActionLabel(java.lang.CharSequence, int)
http://developer.android.com/reference/java/lang/CharSequence.html
http://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#actionLabel
http://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#actionId
http://developer.android.com/reference/android/widget/TextView.html#setImeOptions(int)
http://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#imeOptions
http://developer.android.com/reference/android/widget/TextView.html#setIncludeFontPadding(boolean)
http://developer.android.com/reference/android/widget/TextView.html#setInputExtras(int)
http://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#extras
http://developer.android.com/reference/android/widget/TextView.html#setInputType(int)
http://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#inputType
http://developer.android.com/reference/android/widget/TextView.html#setKeyListener(android.text.method.KeyListener)
http://developer.android.com/reference/android/text/method/KeyListener.html
http://developer.android.com/reference/android/widget/TextView.html#setLineSpacing(float, float)
http://developer.android.com/reference/android/widget/TextView.html#setLines(int)
http://developer.android.com/reference/android/widget/TextView.html#setLinkTextColor(android.content.res.ColorStateList)
http://developer.android.com/reference/android/content/res/ColorStateList.html
http://developer.android.com/reference/android/widget/TextView.html#setLinkTextColor(int)
http://developer.android.com/reference/android/widget/TextView.html#setLinksClickable(boolean)
http://developer.android.com/reference/android/text/method/LinkMovementMethod.html
http://developer.android.com/reference/android/widget/TextView.html#setAutoLinkMask(int)
http://developer.android.com/reference/android/widget/TextView.html#setText(char[], int, int)
http://developer.android.com/reference/android/widget/TextView.html#setMarqueeRepeatLimit(int)
http://developer.android.com/reference/android/widget/TextView.html#setMaxEms(int)
http://developer.android.com/reference/android/widget/TextView.html#setMaxHeight(int)
http://developer.android.com/reference/android/widget/TextView.html#setMaxLines(int)
http://developer.android.com/reference/android/widget/TextView.html#setMaxWidth(int)
http://developer.android.com/reference/android/widget/TextView.html#setMinEms(int)
http://developer.android.com/reference/android/widget/TextView.html#setMinHeight(int)
http://developer.android.com/reference/android/widget/TextView.html#setMinLines(int)
http://developer.android.com/reference/android/widget/TextView.html#setMinWidth(int)
http://developer.android.com/reference/android/widget/TextView.html#setMovementMethod(android.text.method.MovementMethod)
http://developer.android.com/reference/android/text/method/MovementMethod.html
http://developer.android.com/reference/android/widget/TextView.html#setOnEditorActionListener(android.widget.TextView.OnEditorActionListener)
http://developer.android.com/reference/android/widget/TextView.OnEditorActionListener.html
http://developer.android.com/reference/android/widget/TextView.html#setPadding(int, int, int, int)
http://developer.android.com/reference/android/widget/TextView.html#setPaintFlags(int)
http://developer.android.com/reference/android/widget/TextView.html#setPrivateImeOptions(java.lang.String)
http://developer.android.com/reference/java/lang/String.html
http://developer.android.com/reference/android/view/inputmethod/EditorInfo.html#privateImeOptions
http://developer.android.com/reference/android/widget/TextView.html#setRawInputType(int)
http://developer.android.com/reference/android/widget/TextView.html#setScroller(android.widget.Scroller)
http://developer.android.com/reference/android/widget/Scroller.html
http://developer.android.com/reference/android/widget/TextView.html#setSelectAllOnFocus(boolean)
http://developer.android.com/reference/android/widget/TextView.html#setSelected(boolean)
http://developer.android.com/reference/android/widget/TextView.html#setShadowLayer(float, float, float, int)
http://developer.android.com/reference/android/widget/TextView.html#setSingleLine()
http://developer.android.com/reference/android/widget/TextView.html#setSingleLine(boolean)
http://developer.android.com/reference/android/widget/TextView.html#setSpannableFactory(android.text.Spannable.Factory)
http://developer.android.com/reference/android/text/Spannable.Factory.html
http://developer.android.com/reference/android/widget/TextView.html#setText(int)
http://developer.android.com/reference/android/widget/TextView.html#setText(int, android.widget.TextView.BufferType)
http://developer.android.com/reference/android/widget/TextView.BufferType.html
http://developer.android.com/reference/android/widget/TextView.html#setText(char[], int, int)
http://developer.android.com/reference/android/widget/TextView.html#setText(java.lang.CharSequence, android.widget.TextView.BufferType)
http://developer.android.com/reference/java/lang/CharSequence.html
http://developer.android.com/reference/android/widget/TextView.BufferType.html
http://developer.android.com/reference/android/widget/TextView.html#setText(java.lang.CharSequence)
http://developer.android.com/reference/android/widget/TextView.html#setText(java.lang.CharSequence)
http://developer.android.com/reference/java/lang/CharSequence.html
http://developer.android.com/reference/android/widget/TextView.html#setTextAppearance(android.content.Context, int)
http://developer.android.com/reference/android/content/Context.html
http://developer.android.com/reference/android/widget/TextView.html#setTextColor(int)
http://developer.android.com/reference/android/widget/TextView.html#setTextColor(android.content.res.ColorStateList)
http://developer.android.com/reference/android/content/res/ColorStateList.html
http://developer.android.com/reference/android/widget/TextView.html#setTextKeepState(java.lang.CharSequence)
http://developer.android.com/reference/java/lang/CharSequence.html
http://developer.android.com/reference/android/widget/TextView.html#setText(java.lang.CharSequence)
http://developer.android.com/reference/android/widget/TextView.html#setTextKeepState(java.lang.CharSequence, android.widget.TextView.BufferType)
http://developer.android.com/reference/java/lang/CharSequence.html
http://developer.android.com/reference/android/widget/TextView.BufferType.html
http://developer.android.com/reference/android/widget/TextView.html#setText(java.lang.CharSequence, android.widget.TextView.BufferType)
http://developer.android.com/reference/android/widget/TextView.html#setTextScaleX(float)
http://developer.android.com/reference/android/widget/TextView.html#setTextSize(int, float)
http://developer.android.com/reference/android/widget/TextView.html#setTextSize(float)
http://developer.android.com/reference/android/widget/TextView.html#setTransformationMethod(android.text.method.TransformationMethod)
http://developer.android.com/reference/android/text/method/TransformationMethod.html
http://developer.android.com/reference/android/widget/TextView.html#setTypeface(android.graphics.Typeface, int)
http://developer.android.com/reference/android/graphics/Typeface.html
http://developer.android.com/reference/android/widget/TextView.html#setTypeface(android.graphics.Typeface)
http://developer.android.com/reference/android/graphics/Typeface.html
http://developer.android.com/reference/android/widget/TextView.html#setWidth(int)
http://developer.android.com/reference/android/widget/TextView.html#verifyDrawable(android.graphics.drawable.Drawable)
http://developer.android.com/reference/android/graphics/drawable/Drawable.html
http://developer.android.com/reference/android/widget/Button.html
http://developer.android.com/reference/android/view/View.html
http://developer.android.com/reference/android/view/View.html#addFocusables(java.util.ArrayList<android.view.View>, int, int)
http://developer.android.com/reference/java/util/ArrayList.html
http://developer.android.com/reference/android/view/View.html
http://developer.android.com/reference/android/view/View.html#addFocusables(java.util.ArrayList<android.view.View>, int)
http://developer.android.com/reference/java/util/ArrayList.html
http://developer.android.com/reference/android/view/View.html
http://developer.android.com/reference/android/view/View.html#addTouchables(java.util.ArrayList<android.view.View>)
http://developer.android.com/reference/java/util/ArrayList.html
http://developer.android.com/reference/android/view/View.html
http://developer.android.com/reference/android/view/View.html#awakenScrollBars()
http://developer.android.com/reference/android/view/View.html#awakenScrollBars(int, boolean)
http://developer.android.com/reference/android/view/View.html#awakenScrollBars(int)
http://developer.android.com/reference/android/view/View.html#bringToFront()
http://developer.android.com/reference/android/view/View.html#buildDrawingCache(boolean)
http://developer.android.com/reference/android/view/View.html#buildDrawingCache()
http://developer.android.com/reference/android/view/View.html#cancelLongPress()
http://developer.android.com/reference/android/view/View.html#checkInputConnectionProxy(android.view.View)
http://developer.android.com/reference/android/view/View.html
http://developer.android.com/reference/android/view/inputmethod/InputMethodManager.html
http://developer.android.com/reference/android/view/View.html#clearAnimation()
http://developer.android.com/reference/android/view/View.html#clearFocus()
http://developer.android.com/reference/android/view/View.html#computeHorizontalScrollExtent()
http://developer.android.com/reference/android/view/View.html#computeHorizontalScrollOffset()
http://developer.android.com/reference/android/view/View.html#computeHorizontalScrollRange()
http://developer.android.com/reference/android/view/View.html#computeScroll()
http://developer.android.com/reference/android/view/View.html#computeVerticalScrollExtent()
http://developer.android.com/reference/android/view/View.html#computeVerticalScrollOffset()
http://developer.android.com/reference/android/view/View.html#computeVerticalScrollRange()
http://developer.android.com/reference/android/view/View.html#createContextMenu(android.view.ContextMenu)
http://developer.android.com/reference/android/view/ContextMenu.html
http://developer.android.com/reference/android/view/View.html#destroyDrawingCache()
http://developer.android.com/reference/android/view/View.html#dispatchConfigurationChanged(android.content.res.Configuration)
http://developer.android.com/reference/android/content/res/Configuration.html
http://developer.android.com/reference/android/view/View.html#dispatchDisplayHint(int)
http://developer.android.com/reference/android/view/View.html#dispatchDraw(android.graphics.Canvas)
http://developer.android.com/reference/android/graphics/Canvas.html
http://developer.android.com/reference/android/view/View.html#dispatchKeyEvent(android.view.KeyEvent)
http://developer.android.com/reference/android/view/KeyEvent.html
http://developer.android.com/reference/android/view/View.html#dispatchKeyEventPreIme(android.view.KeyEvent)
http://developer.android.com/reference/android/view/KeyEvent.html
http://developer.android.com/reference/android/view/View.html#dispatchKeyShortcutEvent(android.view.KeyEvent)
http://developer.android.com/reference/android/view/KeyEvent.html
http://developer.android.com/reference/android/view/View.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
http://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html
http://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html
http://developer.android.com/reference/android/view/View.html
http://developer.android.com/reference/android/view/View.html#dispatchRestoreInstanceState(android.util.SparseArray<android.os.Parcelable>)
http://developer.android.com/reference/android/util/SparseArray.html
http://developer.android.com/reference/android/os/Parcelable.html
http://developer.android.com/reference/android/view/View.html#restoreHierarchyState(android.util.SparseArray<android.os.Parcelable>)
http://developer.android.com/reference/android/view/View.html#dispatchSaveInstanceState(android.util.SparseArray<android.os.Parcelable>)
http://developer.android.com/reference/android/util/SparseArray.html
http://developer.android.com/reference/android/os/Parcelable.html
http://developer.android.com/reference/android/view/View.html#saveHierarchyState(android.util.SparseArray<android.os.Parcelable>)
http://developer.android.com/reference/android/view/View.html#dispatchSetPressed(boolean)
http://developer.android.com/reference/android/view/View.html#dispatchSetSelected(boolean)
http://developer.android.com/reference/android/view/View.html#dispatchTouchEvent(android.view.MotionEvent)
http://developer.android.com/reference/android/view/MotionEvent.html
http://developer.android.com/reference/android/view/View.html#dispatchTrackballEvent(android.view.MotionEvent)
http://developer.android.com/reference/android/view/MotionEvent.html
http://developer.android.com/reference/android/view/View.html#dispatchUnhandledMove(android.view.View, int)
http://developer.android.com/reference/android/view/View.html
http://developer.android.com/reference/android/view/View.html#dispatchVisibilityChanged(android.view.View, int)
http://developer.android.com/reference/android/view/View.html
http://developer.android.com/reference/android/view/View.html#dispatchWindowFocusChanged(boolean)
http://developer.android.com/reference/android/view/View.html#dispatchWindowVisibilityChanged(int)
http://developer.android.com/reference/android/view/View.html#draw(android.graphics.Canvas)
http://developer.android.com/reference/android/graphics/Canvas.html
http://developer.android.com/reference/android/view/View.html#drawableStateChanged()
http://developer.android.com/reference/android/view/View.html
http://developer.android.com/reference/android/view/View.html#findFocus()
http://developer.android.com/reference/android/view/View.html
http://developer.android.com/reference/android/view/View.html#findViewById(int)
http://developer.android.com/reference/android/view/View.html
http://developer.android.com/reference/android/view/View.html#findViewWithTag(java.lang.Object)
http://developer.android.com/reference/java/lang/Object.html
http://developer.android.com/reference/android/view/View.html#fitSystemWindows(android.graphics.Rect)
http://developer.android.com/reference/android/graphics/Rect.html
http://developer.android.com/reference/android/view/View.html
http://developer.android.com/reference/android/view/View.html#focusSearch(int)
http://developer.android.com/reference/android/view/View.html#forceLayout()
http://developer.android.com/reference/android/view/animation/Animation.html
http://developer.android.com/reference/android/view/View.html#getAnimation()
http://developer.android.com/reference/android/os/IBinder.html
http://developer.android.com/reference/android/view/View.html#getApplicationWindowToken()
http://developer.android.com/reference/android/graphics/drawable/Drawable.html
http://developer.android.com/reference/android/view/View.html#getBackground()
http://developer.android.com/reference/android/view/View.html#getBaseline()
http://developer.android.com/reference/android/view/View.html#getBottom()
http://developer.android.com/reference/android/view/View.html#getBottomFadingEdgeStrength()
http://developer.android.com/reference/android/view/View.html#getBottomPaddingOffset()
http://developer.android.com/reference/java/lang/CharSequence.html
http://developer.android.com/reference/android/view/View.html#getContentDescription()
http://developer.android.com/reference/android/view/View.html
http://developer.android.com/reference/android/content/Context.html
http://developer.android.com/reference/android/view/View.html#getContext()
http://developer.android.com/reference/android/view/ContextMenu.ContextMenuInfo.html
http://developer.android.com/reference/android/view/View.html#getContextMenuInfo()
http://developer.android.com/reference/android/view/View.html#getDefaultSize(int, int)
http://developer.android.com/reference/android/view/View.html#getDrawableState()
http://developer.android.com/reference/android/graphics/Bitmap.html
http://developer.android.com/reference/android/view/View.html#getDrawingCache()
http://developer.android.com/reference/android/graphics/Bitmap.html
http://developer.android.com/reference/android/view/View.html#getDrawingCache(boolean)
http://developer.android.com/reference/android/view/View.html#getDrawingCacheBackgroundColor()
http://developer.android.com/reference/android/view/View.html#getDrawingCacheQuality()
http://developer.android.com/reference/android/view/View.html#getDrawingRect(android.graphics.Rect)
http://developer.android.com/reference/android/graphics/Rect.html
http://developer.android.com/reference/android/view/View.html#getDrawingTime()
http://developer.android.com/reference/java/util/ArrayList.html
http://developer.android.com/reference/android/view/View.html
http://developer.android.com/reference/android/view/View.html#getFocusables(int)
http://developer.android.com/reference/android/view/View.html#getFocusedRect(android.graphics.Rect)
http://developer.android.com/reference/android/graphics/Rect.html
http://developer.android.com/reference/android/view/View.html#getGlobalVisibleRect(android.graphics.Rect, android.graphics.Point)
http://developer.android.com/reference/android/graphics/Rect.html
http://developer.android.com/reference/android/graphics/Point.html
http://developer.android.com/reference/android/view/View.html#getGlobalVisibleRect(android.graphics.Rect)
http://developer.android.com/reference/android/graphics/Rect.html
http://developer.android.com/reference/android/os/Handler.html
http://developer.android.com/reference/android/view/View.html#getHandler()
http://developer.android.com/reference/android/view/View.html#getHeight()
http://developer.android.com/reference/android/view/View.html#getHitRect(android.graphics.Rect)
http://developer.android.com/reference/android/graphics/Rect.html
http://developer.android.com/reference/android/view/View.html#getHorizontalFadingEdgeLength()
http://developer.android.com/reference/android/view/View.html#getHorizontalScrollbarHeight()
http://developer.android.com/reference/android/view/View.html#getId()
http://developer.android.com/reference/android/view/View.html#getKeepScreenOn()
http://developer.android.com/reference/android/view/View.html#KEEP_SCREEN_ON
http://developer.android.com/reference/android/view/KeyEvent.DispatcherState.html
http://developer.android.com/reference/android/view/View.html#getKeyDispatcherState()
http://developer.android.com/reference/android/view/KeyEvent.DispatcherState.html
http://developer.android.com/reference/android/view/ViewGroup.LayoutParams.html
http://developer.android.com/reference/android/view/View.html#getLayoutParams()
http://developer.android.com/reference/android/view/View.html#getLeft()
http://developer.android.com/reference/android/view/View.html#getLeftFadingEdgeStrength()
http://developer.android.com/reference/android/view/View.html#getLeftPaddingOffset()
http://developer.android.com/reference/android/view/View.html#getLocalVisibleRect(android.graphics.Rect)
http://developer.android.com/reference/android/graphics/Rect.html
http://developer.android.com/reference/android/view/View.html#getLocationInWindow(int[])
http://developer.android.com/reference/android/view/View.html#getLocationOnScreen(int[])
http://developer.android.com/reference/android/view/View.html#getMeasuredHeight()
http://developer.android.com/reference/android/view/View.html#getMeasuredWidth()
http://developer.android.com/reference/android/view/View.html#getNextFocusDownId()
http://developer.android.com/reference/android/view/View.html#getNextFocusLeftId()
http://developer.android.com/reference/android/view/View.html#getNextFocusRightId()
http://developer.android.com/reference/android/view/View.html#getNextFocusUpId()
http://developer.android.com/reference/android/view/View.OnFocusChangeListener.html
http://developer.android.com/reference/android/view/View.html#getOnFocusChangeListener()
http://developer.android.com/reference/android/view/View.html#getPaddingBottom()
http://developer.android.com/reference/android/view/View.html#getPaddingLeft()
http://developer.android.com/reference/android/view/View.html#getPaddingRight()
http://developer.android.com/reference/android/view/View.html#getPaddingTop()
http://developer.android.com/reference/android/view/ViewParent.html
http://developer.android.com/reference/android/view/View.html#getParent()
http://developer.android.com/reference/android/content/res/Resources.html
http://developer.android.com/reference/android/view/View.html#getResources()
http://developer.android.com/reference/android/view/View.html#getRight()
http://developer.android.com/reference/android/view/View.html#getRightFadingEdgeStrength()
http://developer.android.com/reference/android/view/View.html#getRightPaddingOffset()
http://developer.android.com/reference/android/view/View.html
http://developer.android.com/reference/android/view/View.html#getRootView()
http://developer.android.com/reference/android/view/View.html#getScrollBarStyle()
http://developer.android.com/reference/android/view/View.html#getScrollX()
http://developer.android.com/reference/android/view/View.html#getScrollY()
http://developer.android.com/reference/android/view/View.html#getSolidColor()
http://developer.android.com/reference/android/view/View.html#getSuggestedMinimumHeight()
http://developer.android.com/reference/android/view/View.html#getSuggestedMinimumWidth()
http://developer.android.com/reference/java/lang/Object.html
http://developer.android.com/reference/android/view/View.html#getTag(int)
http://developer.android.com/reference/java/lang/Object.html
http://developer.android.com/reference/android/view/View.html#getTag()
http://developer.android.com/reference/android/view/View.html#getTop()
http://developer.android.com/reference/android/view/View.html#getTopFadingEdgeStrength()
http://developer.android.com/reference/android/view/View.html#getTopPaddingOffset()
http://developer.android.com/reference/android/view/TouchDelegate.html
http://developer.android.com/reference/android/view/View.html#getTouchDelegate()
http://developer.android.com/reference/java/util/ArrayList.html
http://developer.android.com/reference/android/view/View.html
http://developer.android.com/reference/android/view/View.html#getTouchables()
http://developer.android.com/reference/android/view/View.html#getVerticalFadingEdgeLength()
http://developer.android.com/reference/android/view/View.html#getVerticalScrollbarWidth()
http://developer.android.com/reference/android/view/ViewTreeObserver.html
http://developer.android.com/reference/android/view/View.html#getViewTreeObserver()
http://developer.android.com/reference/android/view/View.html#getVisibility()
http://developer.android.com/reference/android/view/View.html#getWidth()
http://developer.android.com/reference/android/view/View.html#getWindowAttachCount()
http://developer.android.com/reference/android/os/IBinder.html
http://developer.android.com/reference/android/view/View.html#getWindowToken()
http://developer.android.com/reference/android/view/View.html#getWindowVisibility()
http://developer.android.com/reference/android/view/View.html#GONE
http://developer.android.com/reference/android/view/View.html#INVISIBLE
http://developer.android.com/reference/android/view/View.html#VISIBLE
http://developer.android.com/reference/android/view/View.html#getWindowVisibleDisplayFrame(android.graphics.Rect)
http://developer.android.com/reference/android/graphics/Rect.html
http://developer.android.com/reference/android/view/View.html#hasFocus()
http://developer.android.com/reference/android/view/View.html#hasFocusable()
http://developer.android.com/reference/android/view/View.html#hasFocusable()
http://developer.android.com/reference/android/view/View.html#hasWindowFocus()
http://developer.android.com/reference/android/view/View.html
http://developer.android.com/reference/android/view/View.html#inflate(android.content.Context, int, android.view.ViewGroup)
http://developer.android.com/reference/android/content/Context.html
http://developer.android.com/reference/android/view/ViewGroup.html
http://developer.android.com/reference/android/view/View.html#initializeFadingEdge(android.content.res.TypedArray)
http://developer.android.com/reference/android/content/res/TypedArray.html
http://developer.android.com/reference/android/view/View.html#initializeScrollbars(android.content.res.TypedArray)
http://developer.android.com/reference/android/content/res/TypedArray.html
http://developer.android.com/reference/android/view/View.html#invalidate(int, int, int, int)
http://developer.android.com/reference/android/view/View.html#invalidate()
http://developer.android.com/reference/android/view/View.html#invalidate(android.graphics.Rect)
http://developer.android.com/reference/android/graphics/Rect.html
http://developer.android.com/reference/android/view/View.html#invalidateDrawable(android.graphics.drawable.Drawable)
http://developer.android.com/reference/android/graphics/drawable/Drawable.html
http://developer.android.com/reference/android/view/View.html#isClickable()
http://developer.android.com/reference/android/view/View.html#isDrawingCacheEnabled()
http://developer.android.com/reference/android/view/View.html#isDuplicateParentStateEnabled()
http://developer.android.com/reference/android/view/View.html#isEnabled()
http://developer.android.com/reference/android/view/View.html#isFocusable()
http://developer.android.com/reference/android/view/View.html#isFocusableInTouchMode()
http://developer.android.com/reference/android/view/View.html#isFocused()
http://developer.android.com/reference/android/view/View.html#isHapticFeedbackEnabled()
http://developer.android.com/reference/android/view/View.html#isHorizontalFadingEdgeEnabled()
http://developer.android.com/reference/android/view/View.html#isHorizontalScrollBarEnabled()
http://developer.android.com/reference/android/view/View.html#isInEditMode()
http://developer.android.com/reference/android/view/View.html#isInTouchMode()
http://developer.android.com/reference/android/view/View.html#isLayoutRequested()
http://developer.android.com/reference/android/view/View.html#isLongClickable()
http://developer.android.com/reference/android/view/View.html#isOpaque()
http://developer.android.com/reference/android/view/View.html#isPaddingOffsetRequired()
http://developer.android.com/reference/android/view/View.html#isPressed()
http://developer.android.com/reference/android/view/View.html#isSaveEnabled()
http://developer.android.com/reference/android/view/View.html#onSaveInstanceState()
http://developer.android.com/reference/android/view/View.html#isScrollbarFadingEnabled()
http://developer.android.com/reference/android/view/View.html#isSelected()
http://developer.android.com/reference/android/view/View.html#isShown()
http://developer.android.com/reference/android/view/View.html#isSoundEffectsEnabled()
http://developer.android.com/reference/android/view/View.html#isVerticalFadingEdgeEnabled()
http://developer.android.com/reference/android/view/View.html#isVerticalScrollBarEnabled()
http://developer.android.com/reference/android/view/View.html#layout(int, int, int, int)
http://developer.android.com/reference/android/view/View.html#measure(int, int)
http://developer.android.com/reference/android/view/View.html#mergeDrawableStates(int[], int[])
http://developer.android.com/reference/android/view/View.html#onCreateDrawableState(int)
http://developer.android.com/reference/android/view/View.html#offsetLeftAndRight(int)
http://developer.android.com/reference/android/view/View.html#offsetTopAndBottom(int)
http://developer.android.com/reference/android/view/View.html#onAnimationEnd()
http://developer.android.com/reference/android/view/View.html#onAnimationStart()
http://developer.android.com/reference/android/view/View.html#onAttachedToWindow()
http://developer.android.com/reference/android/view/View.html#onCheckIsTextEditor()
http://developer.android.com/reference/android/view/View.html#onConfigurationChanged(android.content.res.Configuration)
http://developer.android.com/reference/android/content/res/Configuration.html
http://developer.android.com/reference/android/view/View.html#onCreateContextMenu(android.view.ContextMenu)
http://developer.android.com/reference/android/view/ContextMenu.html
http://developer.android.com/reference/android/view/View.html#onCreateDrawableState(int)
http://developer.android.com/reference/android/graphics/drawable/Drawable.html
http://developer.android.com/reference/android/view/inputmethod/InputConnection.html
http://developer.android.com/reference/android/view/View.html#onCreateInputConnection(android.view.inputmethod.EditorInfo)
http://developer.android.com/reference/android/view/inputmethod/EditorInfo.html
http://developer.android.com/reference/android/view/View.html#onDetachedFromWindow()
http://developer.android.com/reference/android/view/View.html#onDisplayHint(int)
http://developer.android.com/reference/android/view/View.html#onDraw(android.graphics.Canvas)
http://developer.android.com/reference/android/graphics/Canvas.html
http://developer.android.com/reference/android/view/View.html#onDrawScrollBars(android.graphics.Canvas)
http://developer.android.com/reference/android/graphics/Canvas.html
http://developer.android.com/reference/android/view/View.html#onFinishInflate()
http://developer.android.com/reference/android/view/View.html#onFinishTemporaryDetach()
http://developer.android.com/reference/android/view/View.html#onStartTemporaryDetach()
http://developer.android.com/reference/android/view/View.html#onFocusChanged(boolean, int, android.graphics.Rect)
http://developer.android.com/reference/android/graphics/Rect.html
http://developer.android.com/reference/android/view/View.html#onKeyDown(int, android.view.KeyEvent)
http://developer.android.com/reference/android/view/KeyEvent.html
http://developer.android.com/reference/android/view/KeyEvent.Callback.html#onKeyMultiple(int, int, android.view.KeyEvent)
http://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_DPAD_CENTER
http://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_ENTER
http://developer.android.com/reference/android/view/View.html#onKeyLongPress(int, android.view.KeyEvent)
http://developer.android.com/reference/android/view/KeyEvent.html
http://developer.android.com/reference/android/view/KeyEvent.Callback.html#onKeyLongPress(int, android.view.KeyEvent)
http://developer.android.com/reference/android/view/View.html#onKeyMultiple(int, int, android.view.KeyEvent)
http://developer.android.com/reference/android/view/KeyEvent.html
http://developer.android.com/reference/android/view/KeyEvent.Callback.html#onKeyMultiple(int, int, android.view.KeyEvent)
http://developer.android.com/reference/android/view/View.html#onKeyPreIme(int, android.view.KeyEvent)
http://developer.android.com/reference/android/view/KeyEvent.html
http://developer.android.com/reference/android/view/View.html#onKeyShortcut(int, android.view.KeyEvent)
http://developer.android.com/reference/android/view/KeyEvent.html
http://developer.android.com/reference/android/view/View.html#onKeyUp(int, android.view.KeyEvent)
http://developer.android.com/reference/android/view/KeyEvent.html
http://developer.android.com/reference/android/view/KeyEvent.Callback.html#onKeyMultiple(int, int, android.view.KeyEvent)
http://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_DPAD_CENTER
http://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_ENTER
http://developer.android.com/reference/android/view/View.html#onLayout(boolean, int, int, int, int)
http://developer.android.com/reference/android/view/View.html#onMeasure(int, int)
http://developer.android.com/reference/android/view/View.html#onRestoreInstanceState(android.os.Parcelable)
http://developer.android.com/reference/android/os/Parcelable.html
http://developer.android.com/reference/android/view/View.html#onSaveInstanceState()
http://developer.android.com/reference/android/os/Parcelable.html
http://developer.android.com/reference/android/view/View.html#onSaveInstanceState()
http://developer.android.com/reference/android/view/View.html#onScrollChanged(int, int, int, int)
http://developer.android.com/reference/android/view/View.html#onSetAlpha(int)
http://developer.android.com/reference/android/view/View.html#onSizeChanged(int, int, int, int)
http://developer.android.com/reference/android/view/View.html#onStartTemporaryDetach()
http://developer.android.com/reference/android/view/ViewGroup.html#detachViewFromParent(android.view.View)
http://developer.android.com/reference/android/view/View.html#onTouchEvent(android.view.MotionEvent)
http://developer.android.com/reference/android/view/MotionEvent.html
http://developer.android.com/reference/android/view/View.html#onTrackballEvent(android.view.MotionEvent)
http://developer.android.com/reference/android/view/MotionEvent.html
http://developer.android.com/reference/android/view/View.html#onVisibilityChanged(android.view.View, int)
http://developer.android.com/reference/android/view/View.html
http://developer.android.com/reference/android/view/View.html#onWindowFocusChanged(boolean)
http://developer.android.com/reference/android/view/View.html#onWindowVisibilityChanged(int)
http://developer.android.com/reference/android/view/View.html#GONE
http://developer.android.com/reference/android/view/View.html#INVISIBLE
http://developer.android.com/reference/android/view/View.html#VISIBLE
http://developer.android.com/reference/android/view/View.html#performClick()
http://developer.android.com/reference/android/view/View.html#performHapticFeedback(int)
http://developer.android.com/reference/android/view/View.html#performHapticFeedback(int, int)
http://developer.android.com/reference/android/view/View.html#performHapticFeedback(int)
http://developer.android.com/reference/android/view/View.html#performLongClick()
http://developer.android.com/reference/android/view/View.html#playSoundEffect(int)
http://developer.android.com/reference/android/view/View.html#post(java.lang.Runnable)
http://developer.android.com/reference/java/lang/Runnable.html
http://developer.android.com/reference/android/view/View.html#postDelayed(java.lang.Runnable, long)
http://developer.android.com/reference/java/lang/Runnable.html
http://developer.android.com/reference/android/view/View.html#postInvalidate()
http://developer.android.com/reference/android/view/View.html#postInvalidate(int, int, int, int)
http://developer.android.com/reference/android/view/View.html#postInvalidateDelayed(long)
http://developer.android.com/reference/android/view/View.html#postInvalidateDelayed(long, int, int, int, int)
http://developer.android.com/reference/android/view/View.html#refreshDrawableState()
http://developer.android.com/reference/android/view/View.html#removeCallbacks(java.lang.Runnable)
http://developer.android.com/reference/java/lang/Runnable.html
http://developer.android.com/reference/android/view/View.html#requestFocus()
http://developer.android.com/reference/android/view/View.html#requestFocus(int, android.graphics.Rect)
http://developer.android.com/reference/android/graphics/Rect.html
http://developer.android.com/reference/android/view/View.html#requestFocus(int)
http://developer.android.com/reference/android/view/View.html#requestFocusFromTouch()
http://developer.android.com/reference/android/view/View.html#requestLayout()
http://developer.android.com/reference/android/view/View.html#requestRectangleOnScreen(android.graphics.Rect, boolean)
http://developer.android.com/reference/android/graphics/Rect.html
http://developer.android.com/reference/android/view/View.html#requestRectangleOnScreen(android.graphics.Rect)
http://developer.android.com/reference/android/graphics/Rect.html
http://developer.android.com/reference/android/view/View.html#resolveSize(int, int)
http://developer.android.com/reference/android/view/View.html#restoreHierarchyState(android.util.SparseArray<android.os.Parcelable>)
http://developer.android.com/reference/android/util/SparseArray.html
http://developer.android.com/reference/android/os/Parcelable.html
http://developer.android.com/reference/android/view/View.html#saveHierarchyState(android.util.SparseArray<android.os.Parcelable>)
http://developer.android.com/reference/android/util/SparseArray.html
http://developer.android.com/reference/android/os/Parcelable.html
http://developer.android.com/reference/android/view/View.html#scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)
http://developer.android.com/reference/android/graphics/drawable/Drawable.html
http://developer.android.com/reference/java/lang/Runnable.html
http://developer.android.com/reference/android/view/View.html#scrollBy(int, int)
http://developer.android.com/reference/android/view/View.html#scrollTo(int, int)
http://developer.android.com/reference/android/view/View.html#sendAccessibilityEvent(int)
http://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html
http://developer.android.com/reference/android/view/View.html#sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)
http://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html
http://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html
http://developer.android.com/reference/android/view/View.html#setAnimation(android.view.animation.Animation)
http://developer.android.com/reference/android/view/animation/Animation.html
http://developer.android.com/reference/android/view/View.html#setBackgroundColor(int)
http://developer.android.com/reference/android/view/View.html#setBackgroundDrawable(android.graphics.drawable.Drawable)
http://developer.android.com/reference/android/graphics/drawable/Drawable.html
http://developer.android.com/reference/android/view/View.html#setBackgroundResource(int)
http://developer.android.com/reference/android/view/View.html#setClickable(boolean)
http://developer.android.com/reference/android/view/View.html#setContentDescription(java.lang.CharSequence)
http://developer.android.com/reference/java/lang/CharSequence.html
http://developer.android.com/reference/android/view/View.html
http://developer.android.com/reference/android/view/View.html#setDrawingCacheBackgroundColor(int)
http://developer.android.com/reference/android/view/View.html#setDrawingCacheEnabled(boolean)
http://developer.android.com/reference/android/view/View.html#setDrawingCacheQuality(int)
http://developer.android.com/reference/android/view/View.html#setDuplicateParentStateEnabled(boolean)
http://developer.android.com/reference/android/view/View.html#setEnabled(boolean)
http://developer.android.com/reference/android/view/View.html#setFadingEdgeLength(int)
http://developer.android.com/reference/android/view/View.html#setFocusable(boolean)
http://developer.android.com/reference/android/view/View.html#setFocusableInTouchMode(boolean)
http://developer.android.com/reference/android/view/View.html#setHapticFeedbackEnabled(boolean)
http://developer.android.com/reference/android/view/View.html#setHorizontalFadingEdgeEnabled(boolean)
http://developer.android.com/reference/android/view/View.html#setHorizontalScrollBarEnabled(boolean)
http://developer.android.com/reference/android/view/View.html#setId(int)
http://developer.android.com/reference/android/view/View.html#setKeepScreenOn(boolean)
http://developer.android.com/reference/android/view/View.html#KEEP_SCREEN_ON
http://developer.android.com/reference/android/view/View.html#setLayoutParams(android.view.ViewGroup.LayoutParams)
http://developer.android.com/reference/android/view/ViewGroup.LayoutParams.html
http://developer.android.com/reference/android/view/View.html#setLongClickable(boolean)
http://developer.android.com/reference/android/view/View.html#setMeasuredDimension(int, int)
http://developer.android.com/reference/android/view/View.html#onMeasure(int, int)
http://developer.android.com/reference/android/view/View.html#setMinimumHeight(int)
http://developer.android.com/reference/android/view/View.html#setMinimumWidth(int)
http://developer.android.com/reference/android/view/View.html#setNextFocusDownId(int)
http://developer.android.com/reference/android/view/View.html#setNextFocusLeftId(int)
http://developer.android.com/reference/android/view/View.html#setNextFocusRightId(int)
http://developer.android.com/reference/android/view/View.html#setNextFocusUpId(int)
http://developer.android.com/reference/android/view/View.html#setOnClickListener(android.view.View.OnClickListener)
http://developer.android.com/reference/android/view/View.OnClickListener.html
http://developer.android.com/reference/android/view/View.html#setOnCreateContextMenuListener(android.view.View.OnCreateContextMenuListener)
http://developer.android.com/reference/android/view/View.OnCreateContextMenuListener.html
http://developer.android.com/reference/android/view/View.html#setOnFocusChangeListener(android.view.View.OnFocusChangeListener)
http://developer.android.com/reference/android/view/View.OnFocusChangeListener.html
http://developer.android.com/reference/android/view/View.html#setOnKeyListener(android.view.View.OnKeyListener)
http://developer.android.com/reference/android/view/View.OnKeyListener.html
http://developer.android.com/reference/android/view/View.html#setOnLongClickListener(android.view.View.OnLongClickListener)
http://developer.android.com/reference/android/view/View.OnLongClickListener.html
http://developer.android.com/reference/android/view/View.html#setOnTouchListener(android.view.View.OnTouchListener)
http://developer.android.com/reference/android/view/View.OnTouchListener.html
http://developer.android.com/reference/android/view/View.html#setPadding(int, int, int, int)
http://developer.android.com/reference/android/view/View.html#setPressed(boolean)
http://developer.android.com/reference/android/view/View.html#setSaveEnabled(boolean)
http://developer.android.com/reference/android/view/View.html#onSaveInstanceState()
http://developer.android.com/reference/android/view/View.html#setScrollBarStyle(int)
http://developer.android.com/reference/android/view/View.html#setScrollContainer(boolean)
http://developer.android.com/reference/android/view/View.html#setScrollbarFadingEnabled(boolean)
http://developer.android.com/reference/android/view/View.html#setSelected(boolean)
http://developer.android.com/reference/android/view/View.html#setSoundEffectsEnabled(boolean)
http://developer.android.com/reference/android/view/View.html#setTag(java.lang.Object)
http://developer.android.com/reference/java/lang/Object.html
http://developer.android.com/reference/android/view/View.html#setTag(int, java.lang.Object)
http://developer.android.com/reference/java/lang/Object.html
http://developer.android.com/reference/android/view/View.html#setTouchDelegate(android.view.TouchDelegate)
http://developer.android.com/reference/android/view/TouchDelegate.html
http://developer.android.com/reference/android/view/View.html#setVerticalFadingEdgeEnabled(boolean)
http://developer.android.com/reference/android/view/View.html#setVerticalScrollBarEnabled(boolean)
http://developer.android.com/reference/android/view/View.html#setVisibility(int)
http://developer.android.com/reference/android/view/View.html#setWillNotCacheDrawing(boolean)
http://developer.android.com/reference/android/view/View.html#setWillNotDraw(boolean)
http://developer.android.com/reference/android/view/View.html#showContextMenu()
http://developer.android.com/reference/android/view/View.html#startAnimation(android.view.animation.Animation)
http://developer.android.com/reference/android/view/animation/Animation.html
http://developer.android.com/reference/android/view/View.html#unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)
http://developer.android.com/reference/android/graphics/drawable/Drawable.html
http://developer.android.com/reference/java/lang/Runnable.html
http://developer.android.com/reference/android/view/View.html#unscheduleDrawable(android.graphics.drawable.Drawable)
http://developer.android.com/reference/android/graphics/drawable/Drawable.html
http://developer.android.com/reference/android/view/View.html#verifyDrawable(android.graphics.drawable.Drawable)
http://developer.android.com/reference/android/graphics/drawable/Drawable.html
http://developer.android.com/reference/android/view/View.html#willNotCacheDrawing()
http://developer.android.com/reference/android/view/View.html#willNotDraw()
http://developer.android.com/reference/android/widget/Button.html
http://developer.android.com/reference/java/lang/Object.html
http://developer.android.com/reference/java/lang/Object.html
http://developer.android.com/reference/java/lang/Object.html#clone()
http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)
http://developer.android.com/reference/java/lang/Object.html
http://developer.android.com/reference/java/lang/Object.html#finalize()
http://developer.android.com/reference/java/lang/Class.html
http://developer.android.com/reference/java/lang/Object.html
http://developer.android.com/reference/java/lang/Object.html#getClass()
http://developer.android.com/reference/java/lang/Class.html
http://developer.android.com/reference/java/lang/Object.html#hashCode()
http://developer.android.com/reference/java/lang/Object.html#notify()
http://developer.android.com/reference/java/lang/Object.html#notifyAll()
http://developer.android.com/reference/java/lang/String.html
http://developer.android.com/reference/java/lang/Object.html#toString()
http://developer.android.com/reference/java/lang/Object.html#wait(long, int)
http://developer.android.com/reference/java/lang/Object.html#wait(long)
http://developer.android.com/reference/java/lang/Object.html#wait()
http://developer.android.com/reference/android/widget/Button.html
http://developer.android.com/reference/android/graphics/drawable/Drawable.Callback.html
http://developer.android.com/reference/android/graphics/drawable/Drawable.Callback.html#invalidateDrawable(android.graphics.drawable.Drawable)
http://developer.android.com/reference/android/graphics/drawable/Drawable.html
http://developer.android.com/reference/android/graphics/drawable/Drawable.Callback.html#scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)
http://developer.android.com/reference/android/graphics/drawable/Drawable.html
http://developer.android.com/reference/java/lang/Runnable.html
http://developer.android.com/reference/android/graphics/drawable/Drawable.Callback.html#unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)
http://developer.android.com/reference/android/graphics/drawable/Drawable.html
http://developer.android.com/reference/java/lang/Runnable.html
http://developer.android.com/reference/android/graphics/drawable/Drawable.Callback.html#scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)
http://developer.android.com/reference/android/widget/Button.html
http://developer.android.com/reference/android/view/KeyEvent.Callback.html
http://developer.android.com/reference/android/view/KeyEvent.Callback.html#onKeyDown(int, android.view.KeyEvent)
http://developer.android.com/reference/android/view/KeyEvent.html
http://developer.android.com/reference/android/view/KeyEvent.Callback.html#onKeyLongPress(int, android.view.KeyEvent)
http://developer.android.com/reference/android/view/KeyEvent.html
http://developer.android.com/reference/android/view/KeyEvent.Callback.html#onKeyMultiple(int, int, android.view.KeyEvent)
http://developer.android.com/reference/android/view/KeyEvent.html
http://developer.android.com/reference/android/view/KeyEvent.Callback.html#onKeyUp(int, android.view.KeyEvent)
http://developer.android.com/reference/android/view/KeyEvent.html
http://developer.android.com/reference/android/widget/Button.html
http://developer.android.com/reference/android/view/ViewTreeObserver.OnPreDrawListener.html
http://developer.android.com/reference/android/view/ViewTreeObserver.OnPreDrawListener.html#onPreDraw()
http://developer.android.com/reference/android/widget/Button.html
http://developer.android.com/reference/android/view/accessibility/AccessibilityEventSource.html
http://developer.android.com/reference/android/view/accessibility/AccessibilityEventSource.html#sendAccessibilityEvent(int)
http://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html
http://developer.android.com/reference/android/view/accessibility/AccessibilityEventSource.html#sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)
http://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html
http://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html
http://developer.android.com/reference/android/content/Context.html
http://developer.android.com/guide/appendix/api-levels.html#level1
http://developer.android.com/reference/android/content/Context.html
http://developer.android.com/reference/android/util/AttributeSet.html
http://developer.android.com/guide/appendix/api-levels.html#level1
http://developer.android.com/reference/android/content/Context.html
http://developer.android.com/reference/android/util/AttributeSet.html
http://developer.android.com/guide/appendix/api-levels.html#level1
http://www.apache.org/licenses/LICENSE-2.0
http://developer.android.com/license.html
http://www.android.com/terms.html
http://www.android.com/privacy.html
http://www.android.com/branding.html

   Hidden links:
http://developer.android.com/reference/android/widget/Button.html
http://developer.android.com/reference/android/widget/Button.html
http://developer.android.com/reference/android/widget/Button.html
http://developer.android.com/reference/android/widget/Button.html
http://developer.android.com/reference/android/widget/Button.html
http://developer.android.com/reference/android/widget/Button.html
http://developer.android.com/reference/android/widget/Button.html
http://developer.android.com/reference/android/widget/Button.html
http://developer.android.com/reference/android/widget/Button.html
http://developer.android.com/reference/android/widget/Button.html
http://developer.android.com/reference/android/widget/Button.html
http://developer.android.com/reference/android/widget/Button.html
