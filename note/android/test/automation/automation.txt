= link:../../android.html[Android] / link:../test.html[Testing] / Automation =
:title: [Android] Test Automation

////////////////////////////////////////////////////////////////////////////////
Google Alerts: android monkeyrunner instrumentation functional
////////////////////////////////////////////////////////////////////////////////

.Testing Framework（圖片來源：http://developer.android.com/tools/testing/testing_android.html[Testing Fundamentals | Android Developers]）
image::automation/test_framework.png[]

NOTE: 如果要自行埋 link:../../view-server/view-server.html[View Server] 到個別的 app，就會遭遇只能測單一個 app 的問題。不過內嵌 Viewser 的做法好像比 Robotium 走 intrumentation 來得好？至少可以繼續用 monkeyrunner 這個官方的測試工具。

Android 的測試方式可粗分為三種：

 * 基於 link:../../../junit/junit.html[JUnit 3] 和 link:../../instrumentation/instrumentation.html[instrumentation] 的 unit test，也可以用 mock objects 隔離其他的變因，但 unit 是個別的 component，比一般所認知的 class 再 high-level 一點。
 * 基於 Python 跟 link:../../../monkeyrunner/api/api.html[monkeyrunner API] 的 functional-level 測試，對象是整個 application，重在 component 間的整合。
 * 基於 link:../tools/monkey.html[Monkey] 的壓力測試，對象也是整個 application。

或許 monkeyrunner 跟 Robotium 的測試是要互補的？AndroidViewClient 的做法好像太 tricky 了一點？

________________________________________________________________________________
The Android JUnit extensions provide 'component-specific' test case classes. These classes provide helper methods for creating 'mock objects' and methods that help you 'control the lifecycle of a component'.

An Android test runner must also be instrumented, so that the system utility for starting applications can control how the test package loads test cases and the application under test. You must use `InstrumentationTestRunner` (or a subclass) to run JUnit tests.

To run `InstrumentationTestRunner`, you use internal system classes called by Android tools. The system classes load and start the test package, 'kill any processes that are running an instance of the application under test, and then load a new instance of the application under test.' They then pass control to `InstrumentationTestRunner`, which runs each test case class in the test package.

Normally, an Android component runs in a lifecycle determined by the system. With Android instrumentation, though, you can invoke callback methods in your test code. This allows you to 'run through the lifecycle of a component step by step', as if you were debugging the component.

Also, instrumentation can load both a test package and the application under test into the same process. Since the application components and their tests are in the same process, the tests can invoke methods in the components, and modify and examine fields in the components.
________________________________________________________________________________

mock, QA 的測試是 integration ...

black box? 適合 QA test? 整合 L10N? 重在 integration ... 學習曲線，用 JUnit 寫好像要求有點太高了？... 它可能比較好，但可能把自己累死 ...要 L10N 去安插截圖的動作更難。感覺 JUnit 比較封閉，無法交錯 applications 間的測試。

不是 Robotium/Instrumnetation 不好，只是這些 test tools 要考量到方不方便跟 test framework 整合（才能間接整合其他的測試工具），其他 QA 好不好上手，用 Robotium 寫測試可能不容易維護，這些都是需要考量的...

測試工具有：

 * link:../../../monkeyrunner/monkeyrunner.html[monkeyrunner]
 * link:../../../robotium/robotium.html[Robotium]
 * link:../../../calabash/calabash.html[Calabash]

== 延伸閱讀 ==

 * link:sikuli.html[用 Sikuli 來測試 Android]

== 參考資料 ==

.網站
--
 * http://developer.android.com/tools/testing/testing_android.html[Testing Fundamentals | Android Developers]
 * http://dtmilano.blogspot.com/[Diego Torres Milano's blog] - Android Application Testing Guide 作者的網站
--

.官方文件
--
 * http://developer.android.com/guide/topics/testing/index.html[Testing | Android Developers] - 關於 Android 的測試，從這裡看起...
 * http://developer.android.com/tools/testing/testing_android.html[Testing Fundamentals | Android Developers] ^http://diigo.com/0v712[閱讀]^
 * http://developer.android.com/resources/tutorials/testing/helloandroid_test.html[Hello, Testing | Android Developers]
 * http://developer.android.com/resources/tutorials/testing/activity_test.html[Activity Testing | Android Developers]
 * http://developer.android.com/guide/developing/testing/index.html[Testing | Android Developers]
   ** http://developer.android.com/guide/developing/testing/testing_eclipse.html[Testing from Eclipse with ADT | Android Developers]
   ** http://developer.android.com/guide/developing/testing/testing_otheride.html[Testing from Other IDEs | Android Developers]
 * http://developer.android.com/reference/android/test/InstrumentationTestCase.html[InstrumentationTestCase | Android Developers]
--

.書籍
--
 * http://www.packtpub.com/android-application-testing-guide/book[Packt - Android Application Testing Guide] (2011.06)
--

.投影片
--
 * http://www.slideshare.net/bitbar/android-testing-8364839[Android testing] - 提及 Monkey, Monkeyrunner, Robotium, Roboelectric, Cucumber。其中 "Avoid using emulators and rooted devices" 的觀點很特別...
--

.工具
--
 * http://developer.android.com/guide/developing/tools/index.html[Tools | Android Developers]
   ** http://developer.android.com/guide/developing/tools/adb.html[Android Debug Bridge (adb)]
 * http://testdroid.com/[Testdroid]
   ** 提供 Testdroid Recorder (Eclipse plugin) 錄製操作的過程，上傳到 Testdroid Cloud 同步在多個 device 執行。
   ** 錄製的結果適用 monkeyrunner 和 Robotium。
   ** 收費的項目竟是 Recorder 而非 Cloud，每個月要價 US$99。
--

.其他文件
--
 * http://www.infoq.com/news/2011/09/Android-Testing[Automated Testing Solutions for Android] (2011-09-30) - 主要在講 LessPainful 這個 TaaS，也是跑在 Instrumentation 之上。提到差異 OS versions > Themes > Hardware > Manufacture。
 * http://www.mail-archive.com/android-developers@googlegroups.com/msg154905.html[Re: [android-developers] Re: Unit testing framework with monkeyrunner] (2011-04-19)
 * http://www.juddsolutions.com/downloads/UnitAndFunctionalTestingForAndroidPlatform.pdf[Unit and Functional Testing for the Android Platform] - 比較了 JUnit/Instrumentation、MonkeyRunner、Monkey、Robotium 的做法，將 JUnit/Instrumentation 歸類在 Unit Test。當然同樣是架構在 Instrumentation 之上的 Robotium 被歸類為 functional test，只是作者也直言 "not approachable by traditional testers"。
 * http://site.douban.com/widget/notes/113383/note/161520844/[android測試是孤獨的] (2011-07-15) - 可以朝著 Monkey、Sikuli、Robotium、monkeyrunner、instrumentation 等方向前進。
 * http://pontiffkao.blogspot.com/2011/05/android.html[渺小且微不足道的晦暗: Android 自動化測試蒐集] (2011-05-11)
 * http://mars5337.iteye.com/blog/750339[Android自動化測試可行性途徑分析 - - ITeye技術網站] (2010-08-30)
--

 * http://www.directrss.co.il/TextPage_EN.aspx?ID=6978646[Diego Torres Milano''s blog] - 作者收集了將在 OSCON 2012 上講的東西？

== 雜記 ==

 * http://blog.anscamobile.com/2011/08/automated-testing-on-mobile-devices-part1/[(Part 1) Automated Testing on Mobile Devices for iOS and Android | Ansca Mobile Blog | » Archive] - 五連發，值得一看。
 * http://www.youtube.com/watch?v=EBFtH5tj7Cw[Android Test Automation - YouTube]
 * http://www.infoq.com/news/2011/09/Android-Testing[InfoQ: Automated Testing Solutions for Android] (2011-09-03)
 * http://mylifewithandroid.blogspot.com/2008/11/test-driving-android-gui.html[My life with Android :-): Test-driving Android GUI] (2008-11-06) - SDK 內建 Android instrumentation framework，可以用來測 UI。
 * http://code.google.com/p/scirocco/[scirocco - A UI Test Automation Tool for Android - Google Project Hosting] - 包裝 Robotium。
 * https://sites.google.com/site/mobilewirelesstestautomation/draft-material-on-mobile-wireless/testing-techniques-for-android-applications[Testing techniques for Android applications - mobile wireless test automation] - 測 browser 的話建議用 Selenium 2.0 WebDriver，還有許多其他文件的連結...
 * http://www.slideshare.net/dorieven/banchmark-android-ui-tools-3537546[Benchmark Android automation Tools (for Test Automation)]
 * AutomateIt
   ** http://lifehacker.com/5782502/automateit-is-a-simple-and-free-android-automation-tool[AutomateIt Is a Simple and Free Android Automation Tool] (2011-03-16)
   ** 有人稱這就是手機上的 http://marcolibrary.blogspot.com/2011/06/ifthisthenthat-iftttcom.html[ifttt]
   ** 設定一些 trigger，當條件成立時就執行對應的 action。
   ** 跟 Tasker 很像，但它是 automation，但跟 test automation 無關。
 * http://code.google.com/p/autoandroid/[autoandroid - Tools for automating android projects.. so you can just write code! - Google Project Hosting] - 已停止開發
 * http://brainflush.wordpress.com/2010/01/10/introducing-calculon-a-java-dsl-for-android-activity-testing/[Introducing Calculon – a Java DSL for Android Activity testing « Brain Flush]
 * http://pivotal.github.com/robolectric/index.html[Robolectric: Unit Test your Android Application | Robolectric]
   ** 不是跑在 InstrumentationTestRunner 之上，但可以加快測試的速度，值得一看。
 * http://developer.android.com/guide/developing/tools/monkeyrunner_concepts.html[monkeyrunner | Android Developers]
 * https://www.lesspainful.com/[LessPainful · Mobile Application Testing] 雲端測試，測試用http://cukes.info/[Cucumber]寫（一種 BDD 方案）
 * 是 Android Emulator 而非 Simulator。http://neochung.blogspot.com/2008/09/simulator-emulator.html[Simulator 和 Emulator的差異 | Darkman Side] (2008-09-28)
 * http://blog.codecentric.de/en/2011/03/android-testing-in-brief/[Android testing in brief | codecentric Blog] (2011-03-15)
 * http://www.simpligility.com/2011/11/testing-android-applications-going-from-zero-to-hero/[Testing Android Applications – Going from Zero to Hero | simpligility] (2011-11-06)
 * http://pivotal.github.com/robolectric/[Robolectric: Unit Test your Android Application | Robolectric]
 * http://www.artima.com/scalazine/articles/borachio_mock_objects_for_scala.html[Borachio: Mock Objects for Scala and Android]

== 延伸閱讀 ==

 * link:tools.html[Tools]

== 參考資料 ==

 * http://kongqingyun123.blog.163.com/blog/static/63772835201111572320143/[Android應用重新簽名問題解決 - kevinkong的日誌 - 網易博客] (2011-12-05)

