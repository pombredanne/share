= link:../android.html[Android] / Testing =
:title: [Android] Testing

由於 link:../devices/fragmentation.html[Android Fragmentation] 的現象，使得開發／測試的成本不斷攀高。其中 API Level 跟 Resolution 對測試的複雜度有直接的影響：

 * Model - 高／低階機種的硬體配置不同。在某些狀況下，功能可以少一點，但不能 crash 掉。
 * Brand - 各家的 Manufacturer Overlay/Skin 可能會置換掉內建的應用程式，因此如果有整合某些內建的應用，這部份的測試就馬虎不得。
 * API Level - 某些系統的 bug 只存在某些特定的版本，除非測試涵蓋所有的 Android 版本（包括小版更新），否則很難找到問題。
 * Resolution - 如何在不同解析度下都能夠適當地表現，兼容性直接影響用戶體驗。

根據 http://www.infoq.com/news/2011/09/Android-Testing[LessPainful 實測的結果]

其中 Model/API/Resolution 的差異都可以用 link:../emulator/emulator.html[Emulator] 模擬出來，唯有 Brand 所造成的差異才必須在實體機器上做測試：

 * 測試專注在畫面上的表現，與系統內建應用程式的整合（如果有的話）。
 * 至少在市場上各品牌的主流機種測試過，各品牌不要超過一支；也可以利用 link:taas.html[TaaS] 來降低手機購置的成本。

TIP: 如果大部份的測試都可以在 Emulator 上完成，那麼 link:automation/automation.html[automation] 可以發揮的地方就比較不受限制。

另外利用眾包（crowdsourcing）把測試外包也是一個可能的方式...

也別忘了各地 local 電信商的差異，例如台灣區存取 Google Play 時看不到付費軟體。

== 延伸閱讀 ==

 * link:unit/unit.html[Unit Testing]
 * link:aspects.html[測試的面向]

== 參考資料 ==

.文件
--
 * http://developer.android.com/tools/testing/index.html[Testing | Android Developers]
 * http://developer.android.com/tools/testing/testing_android.html[Testing Fundamentals | Android Developers] ^http://diigo.com/0v712[閱讀]^
 * http://developer.android.com/tools/testing/what_to_test.html[What To Test | Android Developers]
--

.書籍
--
 * http://www.packtpub.com/android-application-testing-guide/book[Packt - Android Application Testing Guide] (2011.06)
--

.其他文件
--
 * http://www.infoq.com/news/2011/09/Android-Testing[Automated Testing Solutions for Android] (2011-09-30) - LessPainful 分享 Android Fraementation 在實際測試上有哪些發現－ OS versions > Themes > Hardware > Manufacture。
--

////////////////////////////////////////////////////////////////////////////////

 * Android testing framework, based on JUnit
 * test package 是相對於 application package 的說法

////////////////////////////////////////////////////////////////////////////////

