= [Android] Services =

Service 沒有 UI，可以在背景執行長時間的運算（但 service 預設是執行在 main/UI thread）。

Service 有兩種用法：

 * Started - 其他 component 呼叫 `Context.startService()` 後，會非同步地觸發 `Service.onStartCommand()` 開始執行某項工作，然後結束。
 * Bound - 其他 component 呼叫 `Context.bindService()` 後，會非同步地取得 service 的 client-server interface，之後就可以透過該 interface 對 service 連續做 request/response 的同步存取。通常用在跨 process 的 link:../ipc/ipc.html[IPC (Inter-Process Communication)]。

但一個 service 可以同時滿足兩種用法，單看它實作了哪些 callback method - `onStartCommand()` 或 `onBind()`。

.Service Lifecycle （來源：http://developer.android.com/guide/components/services.html[Services | Android Developers]）
image::android-service/service_lifecycle.png[]

== 延伸閱讀 ==

 * link:android-system-service.html[System Services]

== 參考資料 ==

.文件
--
 * http://developer.android.com/guide/components/services.html[Services | Android Developers]
 * http://developer.android.com/guide/components/bound-services.html[Bound Services | Android Developers]
 * http://developer.android.com/guide/topics/manifest/service-element.html[<service> | Android Developers]
 * http://developer.android.com/reference/android/app/Service.html[Service | Android Developers]
 * http://www.vogella.com/articles/AndroidServices/article.html[Android Service Tutorial] (2012-03-08)
--

