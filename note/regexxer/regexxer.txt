= regexxer =

[quote,'http://regexxer.sourceforge.net/[regexxer Search Tool]']
________________________________________________________________________________
regexxer is a nifty GUI search/replace tool featuring Perl-style regular expressions. If you need project-wide substitution and you’re tired of hacking sed command lines together, then you should definitely give it a try.
________________________________________________________________________________

在 Debian/Ubuntu 下直接安裝 `regexxer` 套件即可，至於其他 Unix-like 則要從 tarball 安裝。

 sudo apt-get install regexxer

下面是 regexxer 的主畫面，一開始可能會搞不清楚怎麼會有兩個 Find 按鈕？為什麼右上方的按鈕不是 Replace？

image::regexxer/workflow.png[]

基本上，regexxer 的使用有一個基本的流程：

 1. 在 Folder 選擇起點，Pattern 描述檔名的特徵。例如 `*.txt`、`*.{xml,xsl,css,dtd,xsd}` 等。
 2. 按下 Find files 後，從路徑跟檔名做第一層的過濾。
 3. 在 Search 輸入 search pattern，在 Replace 輸入要取代成的字串。
+
NOTE: 如果 Replace 需要引用到被取代字串的部份內容，可以用 `$1`、`$2` 參照到 regex 裡的群組。不知道為什麼不是用 `\1`、`\2` 來表示 backreferences，可能是因為 regexxer 採用 Perl-style regular expression 的關係？
+
 4. 按下 Find 後，左側檔案清單 # 那一欄位的數字表示 search pattern 出現的次數。
 5. 按下 Replace、This file、All files 分別取代特定 match、整個檔案、或所有檔案。此時左側檔案清單的檔名會呈現紅色，表示有 "未存檔" 的異動。
 6. 按 Save 或 Save all 存檔。

只要掌握這個基本的流程，就會發現 regexxer 的功能非常強大，同時處理數千個檔案也沒問題，尤其是所有的 replace 都在按下 Save 或 Save all 之後才會真的生效。

== 延伸閱讀 ==

 * link:../unix-like/recipes/find-replace-files.html[[Unix-like&#93; 批次搜尋取代多個檔案的內容]

== 參考資料 ==

.網站
--
 * http://regexxer.sourceforge.net/[regexxer Search Tool]
--

