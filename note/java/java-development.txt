= Java Development =

== Building ==

[NOTE]
.參考資料
================================================================================
 * http://www.gradle.org/[Gradle]
================================================================================

=== Compile ===

 javac [options] [sourcefiles] [classes]

常用的 option 有：

 * `-source release` - 原始碼的語法要符合那個 'release' 的要求。'release' 的值可以是 `1.3`, `1.4`, `1.5` (`5`), `1.6` (`6`), `1.7` (`7`)，預設跟該 JDK 的版本一致。
 * `-target version` - 編譯出來的 `.class` 至少要能夠執行在哪個版本的 JVM。預設值跟 `-source` 的設定有關。
 * `-cp path` （或 `-classpath path`） - 編譯的過程中，要去哪裡找 user class files。
 * `-d directory` - 產生出來的 `.class` 要擺在哪個目錄底下，預設放在跟 `.java` 相同的目錄下。如果有給定的話，會自動依 package 建立子資料夾。

.`/tmp/javac/src/com/example/hello/HelloWorld.java`
--------------------------------------------------------------------------------
package com.example.hello;

public class HelloWorld {

  public static void main(String[] args) {
    System.out.println("Hello, World!!");
  }

}
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
$ pwd
/tmp/javac
$ tree
.
|-- classes
`-- src
    `-- com
        `-- example
            `-- hello
                `-- HelloWorld.java
$
$ javac -target 1.5 src/com/example/hello/HelloWorld.java 
$ tree
.
|-- classes
`-- src
    `-- com
        `-- example
            `-- hello
                |-- HelloWorld.class
                `-- HelloWorld.java
$
$ javac -target 1.5 -d classes src/com/example/hello/HelloWorld.java 
$ tree
.
|-- classes
|   `-- com
|       `-- example
|           `-- hello
|               `-- HelloWorld.class
`-- src
    `-- com
        `-- example
            `-- hello
                |-- HelloWorld.class
                `-- HelloWorld.java
--------------------------------------------------------------------------------

[NOTE]
.參考資料
================================================================================
 * http://docs.oracle.com/javase/7/docs/technotes/tools/solaris/javac.html[javac - Java programming language compiler]
================================================================================

== java -jar 不吃 CLASSPATH 設定 ==

`java -jar` 時不會讀取 `CLASSPATH` 環境變數，其至連 `-cp` 都不吃。目前普遍推薦的方式是用 `-Xbootclasspath/a` 來擴充 BootStrap 級別的搜尋路徑：

 java -Xbootclasspath/a:lib/foo.jar:lib/bar.jar -jar application.jar

[NOTE]
.參考資料
================================================================================
 * http://code.google.com/p/robotframework/wiki/JavaIntegration[JavaIntegration - robotframework]
 * http://www.zeali.net/entry/15[-jar參數運行應用時classpath的設置方法 | ZEAL Blog‧厲] (2005-04-28)
================================================================================

== TO READ ==

 * http://blog.longwin.com.tw/2004/10/java-technology-map/[Java Technology Map | Tsung's Blog] (2004-10-26)

== 參考資料 ==

.網站
--
 * http://www.oracle.com/technetwork/java/index.html[Sun/Oracle Java]
 * http://home.java.net/[Java.net - The Source for Java Technology Collaboration]
 * http://download.oracle.com/javase/7/docs/index.html[Java SE 7]
   ** http://jdk7.java.net/[Java SE 7 — Java.net]
   ** http://www.oracle.com/technetwork/java/javase/jre-7-readme-430162.html[JRE README]
   ** http://www.oracle.com/technetwork/java/javase/jdk-7-readme-429198.html[JDK README]
   ** http://download.oracle.com/javase/7/docs/webnotes/tsg/index.html[JDK Troubleshooting Guide]
--

.線上學習資源
--
 * http://docs.oracle.com/javase/tutorial/[The Java™ Tutorials]
   ** http://docs.oracle.com/javase/tutorial/reallybigindex.html[The Really Big Index]
   ** http://docs.oracle.com/javase/tutorial/tutorialLearningPaths.html[Java Tutorials Learning Paths]
 * http://www.oracle.com/technetwork/topics/newtojava/overview/index.html[New to Java Programming Center]
 * http://www.oracle.com/technetwork/java/basicjava1-135508.html[Essentials of the Java Programming Language, Part 1]
 * http://www.oracle.com/technetwork/java/basicjava2-138746.html[Essentials of the Java Programming Language, Part 2]
--

.書籍
--
 * http://www.apress.com/9781430244257[Apress - Java EE7 Recipes] (2012-11 est.)
 * http://www.apress.com/9781430268727[Apress - Pro JavaFX 2] (2012-03)
 * http://www.apress.com/9781430240563[Apress - Java 7 Recipes] (2012-01)
 * http://www.apress.com/9781430236863[Apress - Java 7 for Absolute Beginners] (2012.01)
 * http://www.apress.com/9781430240112[Apress - Pro Java 7 NIO.2] (2011.12)
 * http://www.apress.com/9781430239093[Apress - Beginning Java 7] (2011-11)
 * http://shop.oreilly.com/product/0636920022404.do[O'Reilly - What's New in Java 7?] (2011-10) - 只有 17 頁
 * http://www.wrox.com/WileyCDA/WroxTitle/Ivor-Horton-s-Beginning-Java-Java-7-Edition.productCd-0470404140.html[Wrox - Ivor Horton's Beginning Java, Java 7 Edition] (2011.09)
 * http://shop.oreilly.com/product/9781934356760.do[Pragmatic - Programming Concurrency on the JVM] (2011-08)
 * http://shop.oreilly.com/product/0636920021667.do[O'Reilly - Functional Programming for Java Developers] (2011-07)
 * http://shop.oreilly.com/product/0636920021933.do[O'Reilly - Java Bibliography] (2011-07)
 * http://www.wrox.com/WileyCDA/WroxTitle/Java-Programming-24-Hour-Trainer.productCd-0470889640.html[Wrox - Java Programming 24-Hour Trainer] (2011-02)
 * http://shop.oreilly.com/product/9780596803742.do[O'Reilly - Java: The Good Parts] (2010-04)
 * http://shop.oreilly.com/product/9781934356449.do[O'Reilly - Domain-Driven Design Using Naked Objects] (2009-12)
 * http://shop.oreilly.com/product/9781934356401.do[O'Reilly - Modular Java] (2009-06)
 * http://java.sun.com/docs/books/effective/index.html[Sun - Effective Java Second Edition] (2008.05)
 * http://shop.oreilly.com/product/9780596527938.do[O'Reilly - Java Power Tools] (2008-04)
 * http://shop.oreilly.com/product/9780596514198.do[O'Reilly - Java Pocket Guide] (2008-03)
 * http://www.apress.com/book/view/9781590598306[Apress - Beginning Java SE 6 Platform: From Novice to Professional] (2007-10) - 有點衝得太快了, 只有 Chapter 1 ~ 2 兩個章節在講基本語法, 第 3 章就開始進入應用了, 反而把 annotations 擺在附錄?
 * http://www.wrox.com/WileyCDA/WroxTitle/Professional-Java-JDK-6-Edition.productCd-0471777102.html[Wrox - Professional Java JDK 6 Edition] (2007-01) - 很快就進入應用了, 還扯到 JNI 與 SOA...
 * http://shop.oreilly.com/product/9780596527754.do[O'Reilly - Java Generics and Collections] (2006-10)
 * http://www.apress.com/book/view/9781590596609[Apress - Java 6 Platform Revealed] (2006-07) - 著重在 Java 6 新功能的介紹, 很適合熟悉 Java 5 的人來看.
 * http://shop.oreilly.com/product/9780596527501.do[O'Reilly - Java I/O, 2nd Edition] (2006-05)
 * http://www.informit.com/store/product.aspx?isbn=0131872486[InformIT - Thinking in Java, 4th Edition] (2006.02) - 也很適合拿來入門 Java, 尤其有專門的章節提到 Java SE 5 最新的 Enumeration 與 Annotations.
 * http://shop.oreilly.com/product/9781593270612.do[No Starch - Wicked Cool Java] (2005-11)
 * http://shop.oreilly.com/product/9780596100940.do[O'Reilly - Beyond Java] (2005-09)
 * http://www.apress.com/9781590594575[Apress - Beginning Java Objects] (2005-06)
 * http://www.apress.com/9781590594742[Apress - Pro Java Programming] (2005-06)
 * http://shop.oreilly.com/product/9780596008734.do[O'Reilly - Learning Java, 3rd Edition] (2005-05) - 雖然年代有點久遠, 但這一個時期的書比較重視 Java 基礎的培養, 到了第 10 章才把基礎交待完.
 * http://shop.oreilly.com/product/9780596007737.do[O'Reilly - Java in a Nutshell, 5th Edition] (2005-03)
 * http://www.wrox.com/WileyCDA/WroxTitle/Professional-Java-JDK-5-Edition.productCd-0764574868.html[Wrox - Professional Java, JDK 5 Edition] (2005-02)
 * http://shop.oreilly.com/product/9780596009205.do[O'Reilly - Head First Java, 2nd Edition] (2005-02)
 * http://www.wrox.com/WileyCDA/WroxTitle/Ivor-Horton-s-Beginning-Java2-JDK-5-Edition.productCd-0764568744.html[Wrox - Ivor Horton's Beginning Java 2, JDK 5 Edition] (2004-12) - 比較之後, 這一本書最適合拿來做為 Java 的入門書. 編排上較 O'Reilly 的 Learning Java 有系統, 例如 Generics、Collections、Exceptions 等分別用不同的章節來講解, 可惜它完全沒提到 Annotations.
 * http://shop.oreilly.com/product/9780596007218.do[O'Reilly - Java Network Programming, 3rd Edition] (2004-10)
 * http://shop.oreilly.com/product/9780596007829.do[O'Reilly - Java Threads, 3rd Edition] (2004-09)
 * http://shop.oreilly.com/product/9780764543654.do[Wrox - Beginning Java 2, 14th Edition] (2004-08)
 * http://shop.oreilly.com/product/9780596007386.do[O'Rielly - Java 5.0 Tiger: A Developer's Notebook] (2004-06)
 * http://shop.oreilly.com/product/9780596007010.do[O'Reilly - Java Cookbook, 2nd Edition] (2004-06)
 * http://shop.oreilly.com/product/9780596006761.do[O'Reilly - Better, Faster, Lighter Java] (2004-05)
 * http://www.wrox.com/WileyCDA/WroxTitle/Professional-Java-Tools-for-Extreme-Programming-Ant-XDoclet-JUnit-Cactus-and-Maven.productCd-0764556177.html[Wrox - Professional Java Tools for Extreme Programming: Ant, XDoclet, JUnit, Cactus, and Maven] (2004-04)
 * http://www.apress.com/9781590590614[Apress - Bug Patterns in Java] (2002-10)
 * http://www.apress.com/9781893115927[Apress - Java Collections] (2011-04)
 * http://www.apress.com/9781893115101[Apress - Taming Java Threads] (2000-06)
--

== 學習筆記 ==

