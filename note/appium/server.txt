= link:appium.html[Appium] / Server =
:title: [Appium] Server

`appium` 用來啟動 Appium server，常用的 options 有：

 * `--full-reset` - 不同的 sessions 間會移除 app，包括資料的部份。不過這對 Android 的 link:android/selendroid-mode.html[Selendroid Mode] 好像沒作用??

== 完整的用法 ==

----------------------------------------------------------------------
$ appium --help
usage: appium [-h] [-v] [--app APP] [--ipa IPA] [-q] [-U UDID] [-a ADDRESS]
              [-p PORT] [-k] [--no-session-override] [--full-reset]
              [--no-reset] [-l] [-g LOG] [-G WEBHOOK]
              [--native-instruments-lib] [--app-pkg ANDROIDPACKAGE]
              [--app-activity ANDROIDACTIVITY]
              [--app-wait-activity ANDROIDWAITACTIVITY] [--avd AVD]
              [--device-ready-timeout ANDROIDDEVICEREADYTIMEOUT] [--safari]
              [--force-iphone] [--force-ipad] [--orientation ORIENTATION]
              [--nodeconfig NODECONFIG] [-ra ROBOTADDRESS] [-rp ROBOTPORT]
              [--selendroid-port SELENDROIDPORT]
              

A webdriver-compatible server for use with native and hybrid iOS and Android 
applications.

Optional arguments:
  -h, --help            Show this help message and exit.
  -v, --version         Show program's version number and exit.
  --app APP             IOS: abs path to simulator-compiled .app file or the 
                        bundle_id of the desired target on device; Android: 
                        abs path to .apk file
  --ipa IPA             (IOS-only) abs path to compiled .ipa file
  -q, --quiet           Don't use verbose logging output
  -U UDID, --udid UDID  Unique device identifier of the connected physical 
                        device
  -a ADDRESS, --address ADDRESS
                        IP Address to listen on
  -p PORT, --port PORT  port to listen on
  -k, --keep-artifacts  (IOS-only) Keep Instruments trace directories
  --no-session-override
                        Disables session override
  --full-reset          (Android-only) Reset app state by uninstalling app 
                        instead of using clean.apk
  --no-reset            Don't reset app state between sessions (IOS: don't 
                        delete app plist files; Android: don't uninstall app 
                        before new session)
  -l, --pre-launch      Pre-launch the application before allowing the first 
                        session (Requires --app and, for Android, --app-pkg 
                        and --app-activity)
  -g LOG, --log LOG     Log output to this file instead of stdout
  -G WEBHOOK, --webhook WEBHOOK
                        Also send log output to this HTTP listener
  --native-instruments-lib
                        (IOS-only) IOS has a weird built-in unavoidable delay.
                         We patch this in appium. If you do not want it 
                        patched, pass in this flag.
  --app-pkg ANDROIDPACKAGE
                        (Android-only) Java package of the Android app you 
                        want to run (e.g., com.example.android.myApp)
  --app-activity ANDROIDACTIVITY
                        (Android-only) Activity name for the Android activity 
                        you want to launch from your package (e.g., 
                        MainActivity)
  --app-wait-activity ANDROIDWAITACTIVITY
                        (Android-only) Activity name for the Android activity 
                        you want to wait for (e.g., SplashActivity)
  --avd AVD             name of the avd to launch
  --device-ready-timeout ANDROIDDEVICEREADYTIMEOUT
                        (Android-only) Timeout in seconds while waiting for 
                        device to become ready
  --safari              (IOS-Only) Use the safari app
  --force-iphone        (IOS-only) Use the iPhone Simulator no matter what 
                        the app wants
  --force-ipad          (IOS-only) Use the iPad Simulator no matter what the 
                        app wants
  --orientation ORIENTATION
                        (IOS-only) use LANDSCAPE or PORTRAIT to initialize 
                        all requests to this orientation
  --nodeconfig NODECONFIG
                        Configuration JSON file to register appium with 
                        selenium grid
  -ra ROBOTADDRESS, --robot-address ROBOTADDRESS
                        IP Address of robot
  -rp ROBOTPORT, --robot-port ROBOTPORT
                        port for robot
  --selendroid-port SELENDROIDPORT
                        Local port used for communication with Selendroid
----------------------------------------------------------------------

== 參考資料 ==

.手冊
--
 * https://github.com/appium/appium/blob/master/docs/server-args.md[Appium server arguments]
--

.文件
--
 * https://groups.google.com/forum/#!topic/appium-discuss/LJyobbdX02w/discussion[Starting Appium server in command line - Google Groups] (2013-05-17)

////////////////////////////////////////////////////////////////////////////////
** If you've installed appium with npm, you just run "appium" from anywhere on your system.
** If you've cloned appium's source, you run "node server.js" from the directory where you cloned appium.
////////////////////////////////////////////////////////////////////////////////

 * http://stackoverflow.com/questions/16810587/how-to-do-android-unit-test-using-appium-in-ubuntu[python - How to do Android Unit Test using Appium in Ubuntu - Stack Overflow] (2013-05-29)

////////////////////////////////////////////////////////////////////////////////
** The main thing I cannot understand is the connection between my Android project, Appium and Python script. 這正是官方文件沒講清楚的地方。關鍵在 Appium server 是個 "webdriver-compatible server"，實作了 WebDriver JSON Wire Protocol，對外就像是個 Selenium server，這樣 Selenium 2/WebDriver 的 client libraries 也可以用相同的方式跟它互動。
** appium & launches the appium server. Think of this as the equivalent of `java -jar selenium.jar` which would launch the selenium rc server.
////////////////////////////////////////////////////////////////////////////////
--

