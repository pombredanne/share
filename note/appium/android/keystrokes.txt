= link:android.html[Appium / Android] / Keystrokes =
:title: [Appium][Android] Keystrokes

 driver.execute_script('mobile: keyevent', {'keycode': 82}) # Menu

== 參考資料 ==

 * https://groups.google.com/forum/#!topic/appium-discuss/KF_mEAu3SGI/discussion[accessing android menu controls - Google Groups] (2013-05-21)

////////////////////////////////////////////////////////////////////////////////
** `adb shell input keyevent 82`
** With python it'll be something like: `driver.execute_script("mobile: keyevent", {"keycode": 82})` You'll need to looke up which keyevents map to which buttons.
////////////////////////////////////////////////////////////////////////////////

 * https://groups.google.com/forum/#!topic/appium-discuss/qqNSerBYLrY/discussion[Generating Android device events - Google Groups] (2013-04-19)

////////////////////////////////////////////////////////////////////////////////
** But your suggestion of using `"mobile: keyevent"` is spot on.  Code 4 is the Back key: `driver.execute_script("mobile: keyevent", {"keycode":4})`
** You can look up the keyevent codes. For example, home is 3. http://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_HOME
** There's also a `mobile: keyevent` method to send a key event to Android.
** I found work around: `os.system("adb shell input keyevent 82")` which is works great for me, it taps menu button
** Also, some Android devices have direction pads or other hard keys, and probably all Android devices have volume control hard keys.  So I hope there will be a way to issue key events in Appium.
** In python, you don't need the extra `[]`
////////////////////////////////////////////////////////////////////////////////

