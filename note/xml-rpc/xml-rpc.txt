= XML-RPC =

== 延伸閱讀 ==

 * RPC
 * link:../json-rpc/json-rpc.html[JSON-RPC] - 現有的實作也不少；規格制定相對較完善，JSON-RPC 2.0 持續規劃中，有取代 XML-RPC 之勢...
 * Web Services

== 參考資料 ==

.網站
--
 * http://www.xmlrpc.com/[XML-RPC Home Page]
   ** http://www.xmlrpc.com/spec[Specification]
   ** http://www.xmlrpc.com/directory/1568/implementations[Implementations]
   ** http://www.xmlrpc.com/directory/1568/services[Services]
 * http://www.wordtracker.com/docs/api/ch03s02.html[3.2. Java XML-RPC Tutorial]
 * http://www.xml.com/pub/rg/XML_RPC_Tutorials[XML-RPC Tutorials]
 * http://www.wordtracker.com/docs/api/[Wordtracker Web Services Technical Documentation] (內含 XML-RPC 教學)
 * http://www.google.com/help/blogsearch/pinging_API.html[Google Blog Search Help]
--

.工具
--
 * [[Apache XML-RPC]] - 雖然 Redstone XML-RPC Library 看起來也不錯, 但由於它沒有放入 Maven repository, 因此幾乎 central repository 裡跟 XML-RPC 有關的 POM, 都相依在 Apache XML-RPC.
 * http://labs.atlassian.com/wiki/display/XMLRPC/Home[Atlassian XML-RPC Binder] - 相當成熟的專案 - 大量用到 annotation, 並提供 Spring 的整合; http://svn.apache.org/repos/asf/archiva/branches/MRM-1025/archiva-docs/src/site/apt/release-notes.apt[這裡]有提到它應用在 Archiva Web Services 的開發上.
 * http://crispy.sourceforge.net/[CRISPY] - 提供有 XML-RPC 的介面
 * http://xins.sourceforge.net/[XINS] - 提供有 XML-RPC 的介面
 * http://xmlrpc.sourceforge.net/[Redstone XML-RPC Library] - 舊稱 Marquee, 2009-05-13 確認仍在開發中; 內建 http://xmlrpc.sourceforge.net/javadoc/redstone/xmlrpc/XmlRpcSerializer.html[XmlRpcSerializer] 可以將物件轉出成 XML-RPC 要求的格式
 * http://groovy.codehaus.org/XMLRPC[Groovy - XMLRPC]
 * http://kxmlrpc.sourceforge.net/[kxmlrpc - XML-RPC Library for Java ME]
 * http://www.xml-rpc.net/[XML-RPC.Net]
--

.書藉
--
 * http://oreilly.com/catalog/9780596001193/[O'Reilly - Programming Web Services with XML-RPC] (2001.06)
--

.文件
--
 * http://en.wikipedia.org/wiki/XML-RPC[XML-RPC - Wikipedia, the free encyclopedia]
 * http://www.wrox.com/WileyCDA/WroxTitle/productCd-0470114878.html[Wrox - Beginning XML, 4th Edition] Chapter 14. Web Services 有介紹到 XML-RPC.
 * http://www.ibm.com/developerworks/xml/library/j-xmlrpc.html[XML-RPC in Java programming]
--

.其他文件
--
 * http://forum.codecall.net/java-tutorials/6571-xml-rpc-java-you.html[XML-RPC Java and You - CodeCall Programming Forum] (2008-02-19)
 * http://haitaoblog.blogspot.com/2007/10/xml-rpc-vs-jax-rpc.html[XML-RPC vs JAX-RPC - Hai Tao's Blog] (2007-10-25)
 * http://uk.techcrunch.com/2006/10/06/oh-no-google-supports-xml-rpc/[Oh no Google supports XML-RPC!] (2006-10-06)
 * http://www.reality.hk/articles/2006/02/08/571/[reality » Blog Archive » 用Groovy作XML-RPC Client] (2006-02-08)
 * http://www.ibm.com/developerworks/xml/library/j-xmlrpc.html[XML-RPC in Java programming] (2004-01-13) - 選用 Marquee 做示範
 * http://www.ibm.com/developerworks/xml/library/x-tipxmlrpc.html[Tip: Make your CGI scripts available via XML-RPC] (2003-04-30)
 * http://www.ibm.com/developerworks/webservices/library/ws-pyth10.html[The Python Web services developer: XML-RPC for Python] (2002-09-19)
 * http://www.sitepoint.com/article/own-web-service-php-xml-rpc/[Build your own Web Service with PHP and XML-RPC] (2002-07-16)
 * http://www.xmlrpc.com/googleGateway[XML-RPC Gateway for the Google API] (2002-04-14)
 * http://www.ibm.com/developerworks/xml/library/x-matters15.html[XML Matters: XML-RPC as object model] (2001-12-01)
 * http://www.ibm.com/developerworks/webservices/library/ws-xpc2/[Using XML-RPC for Web services: XML-RPC Middleware] (2001-03-01)
 * http://www.ibm.com/developerworks/webservices/library/ws-xpc1/[Using XML-RPC for Web services: Getting started with XML-RPC in Perl] (2001-03-01)
 * http://davenet.scripting.com/1998/07/14/xmlRpcForNewbies[DaveNet : XML-RPC for Newbies] (1998-07-14)
--

////////////////////////////////////////////////////////////////////////////////

 * 很難想像 XML-RPC 的標準不支援 `long` 等常用的型態, 它真的老了...
 * 按 http://en.wikipedia.org/wiki/XML-RPC#History[Wikipedia] 的說法 - XML-RPC was created in 1998 by Dave Winer of !UserLand Software and Microsoft. As new functionality was introduced, the standard evolved into what is now SOAP. Some people prefer XML-RPC to SOAP because of its simplicity, minimalism, and ease of use. 似乎 XML-RPC 有點過時? 也有版權上的問題? 不難理解為何 Java 不是很熱衷於 XML-RPC 的支援, 反而將所有的目光都集中到 SOAP...
 * 或許是因為 XML-RPC 它相對簡單, 所以大部份的 Open source 專案都提供有 XML-RPC 的系統整合介面, 卻不一定有 SOAP 介面, 因此 XML-RPC 仍有學習的必要.
 * 幾乎所有的程式語言都有對應的函式庫可以使用, 這表示我們可以搭配系統專有的元件 (通常要採用相同的程式語言撰寫?), 為其他系統提供 XML-RPC 的整合接口.
 * 可以用 https://addons.mozilla.org/en-US/firefox/addon/2691[Poster] 這個 Firefox 的外掛, 手動驗證 XML-RPC 的要求與回應.

////////////////////////////////////////////////////////////////////////////////

