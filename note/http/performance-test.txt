= link:index.html[HTTP] / 測試 HTTP 的服務效能 =
:title: 測試 HTTP 的服務效能

`httping` 這個工具可以用來測試 web server 的 latency 及 throughput。

在 Ubuntu 下安裝 `httping` 套件即可，至於 CentOS 則比較麻煩一點：

主要有下面兩種用法：

 httping [optoins] -g url
 httping [options] -Gbg url

前者發出 HEAD request，用來測試 latency：

[listing]
................................................................................
$ httping -c 5 -g http://www.google.com
PING www.google.com:80 (http://www.google.com):
connected to www.google.com:80, seq=0 time=89.33 ms 
connected to www.google.com:80, seq=1 time=71.32 ms 
connected to www.google.com:80, seq=2 time=89.76 ms 
connected to www.google.com:80, seq=3 time=72.00 ms 
connected to www.google.com:80, seq=4 time=82.23 ms 
--- http://www.google.com ping statistics ---
5 connects, 5 ok, 0.00% failed
round-trip min/avg/max = 71.3/80.9/89.8 ms
................................................................................

後者發出 GET request，會等到整個頁面都載完，用來測試 throughput：

[listing]
................................................................................
$ httping -c 5 -Gbg http://www.google.com
PING www.google.com:80 (http://www.google.com):
connected to www.google.com:80, seq=0 time=74.63 ms  27446KB/s
connected to www.google.com:80, seq=1 time=100.01 ms  54748KB/s
connected to www.google.com:80, seq=2 time=71.50 ms  53639KB/s
connected to www.google.com:80, seq=3 time=72.72 ms  54033KB/s
connected to www.google.com:80, seq=4 time=71.15 ms  71108KB/s
--- http://www.google.com ping statistics ---
5 connects, 5 ok, 0.00% failed
round-trip min/avg/max = 71.1/78.0/100.0 ms
Transfer speed: min/avg/max = 27446/52195/71108 KB
................................................................................

常用的 option 有：

 * `-c count` - 發出 request 的次數。
 * `-x proxyhost:port` - 指定 proxy server。
 * `-G` - 改發出 GET request 而非預設的 HEAD request。前者（GET）用來測試 throughput，後者（HEAD）則用來測試 latency。
 * `-b` - 統計資料傳輸速度（KB/s）。
 * `-f` - 瘋狂地發出 request（flood ping；每一個 ping 之間不做停頓）。

更多細節請參考 `man httping`。

== 參考資料 ==

 * http://www.cyberciti.biz/faq/linux-unix-measure-lateceny-throughput-of-webserver/[How to: Measure the Lateceny and Throughput of Apache / Lighttpd / IIS Webserver] (2007-11-22)

