= link:../nagios.html[Nagios] / Plugins (Check Scripts) =
:title: [Nagios] Plugins (Check Scripts)

.架構圖（圖片來源：http://nagios.sourceforge.net/docs/nagioscore/3/en/plugins.html[Nagios Plugins]）
image::plugins/arch.png[]

TIP: 由於 plugins 多半命名成 `check_xxx`，所以 plugins 也常被稱做 'check scripts'。

 check_xxx [-h | --help]

== 延伸閱讀 ==

 * link:official.html[Official Plugins]
 * link:../../nrpe/nrpe.html[NRPE (Nagios Remote Plugin Executor)]

== 參考資料 ==

.網站
--
 * http://exchange.nagios.org/[Nagios Exchange]
--

.官方文件
--
 * http://nagios.sourceforge.net/docs/nagioscore/3/en/plugins.html[Nagios Plugins]

////////////////////////////////////////////////////////////////////////////////
** Unlike many other monitoring tools, Nagios does not include any internal mechanisms for checking the status of hosts and services on your network. Instead, Nagios relies on external programs (called plugins) to do all the dirty work.
** Plugins are compiled executables or scripts (Perl scripts, shell scripts, etc.) that can be run from a command line to check the status or a host or service. Nagios uses the results from plugins to determine the current status of hosts and services on your network. 至於 results 要怎麼傳，則要依循 plugin API
** Nagios will execute a plugin whenever there is a need to check the status of a service or host. The plugin does something (notice the very general term) to perform the check and then simply returns the results to Nagios. Nagios will process the results that it receives from the plugin and take any necessary actions (running event handlers, sending out notifications, etc).
** Plugins act as an abstraction layer between the monitoring logic present in the Nagios daemon and the actual services and hosts that are being monitored.
** The upside of this type of plugin architecture is that you can monitor just about anything you can think of. If you can automate the process of checking something, you can monitor it with Nagios. 只要能 automate，就能被 monitor!!
** There are already a lot of plugins that have been created in order to monitor basic resources such as processor load, disk usage, ping rates, etc. If you want to monitor something else, take a look at the documentation on writing plugins and roll your own. Its simple!
** The downside to this type of plugin architecture is the fact that Nagios has absolutely no idea what it is that you're monitoring. Nagios doesn't understand the specifics of what's being monitored - it just tracks changes in the state of those resources (指的是 return code 的變化嗎??). Only the plugins themselves know exactly what they're monitoring and how to perform the actual checks.
** Plugins are not distributed with Nagios, but you can download the official Nagios plugins and many additional plugins created and maintained by Nagios users from the following locations: Nagios Plugins Project: http://nagiosplug.sourceforge.net/ Nagios Downloads Page: http://www.nagios.org/download/ NagiosExchange.org: http://www.nagiosexchange.org/
** Most all plugins will display basic usage information when you execute them using '-h' or '--help' on the command line. For example, if you want to know how the check_http plugin works or what options it accepts, you should try executing the following command: `./check_http --help`
////////////////////////////////////////////////////////////////////////////////
--

