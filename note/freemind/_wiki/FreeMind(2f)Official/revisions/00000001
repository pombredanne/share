= FreeMind / Official =
<<TableOfContents>>

== Overview ==

FreeMind makes it possible to create so called mind maps. Still, many people use it as an alternative to a tabbed notebook or a personal information manager. Information is stored in text boxes, called ''node''s. Nodes are connected together using curved lines called ''edge''s.

FreeMind fully supports unicode. Thus you can use the script of your choice.

=== About Modes ===

Although Freemind is primarily a tool for editing mind maps, it is designed to be able to view data coming from various data sources. To make a specific data source available for viewing in FreeMind, a programmer has to write a so called ''mode'' for that data source. ''File mode'' is an example. We do not know of any other modes implemented. It is not clear if anyone would really want to make use of this architecture; it's here to be exploited(利用) if someone wants to.

 * '''MindMap''':
 * '''Browse''': To browse mind maps rather than to edit them. Unless used in FreeMind applet, this function is useless. Normally, you would not use browse mode in FreeMind.
 * '''File''': Browsing the files on your computer. The file mode is currently not very useful. It is a demonstration that it's not too difficult to feed data into the tree from other source than mind map. There is no evidence(根據) that people would actually use this mode.

=== Keystrokes (Keyboard Mappings) ===

Keyboard mappings and positions of functions in menus can change from version to version. (可以透過 Tools > Preferences... 下的 Keystrokes 重新定義)

 * Find - Ctrl+F
 * '''Find next - Ctrl+G'''
 * Cut - Ctrl+X
 * Copy - Ctrl+C
 * '''Copy single - Ctrl+Shift+C'''
 * Paste - Ctrl+V
 * '''Copy formats of a node - Alt+C'''
 * '''Paste formats onto a node - Alt+V'''
 * Toggle Italicize - Ctrl+I
 * Toggle Bold - Ctrl+B
 * Cloud - Ctrl+Shift+B
 * Change node color - Alt+Shift+F
 * Change node edge color - Alt+E
 * '''Go to root - ESCAPE'''
 * Move up - UP
 * Move down - DOWN
 * Move left - LEFT
 * Move right - RIGHT
 * Follow link - Ctrl+ENTER
 * '''Zoom out - Ctrl+Minus'''
 * '''Zoom in - Ctrl+Equals'''
 * Add sibling node - ENTER
 * Add child node - INSERT (由於 Ins 這個按鍵在鍵盤的右上方, 改為原先配置給 Mac 的 Tab 鍵比較方便!!)
 * Add parent node - Shift+TAB (從上面插入一個父層)
 * Delete a node - DEL
 * '''Add sibling before - Shift+ENTER'''
 * Edit selected node - F2
 * '''Edit long node - Alt+ENTER'''
 * Join nodes - Ctrl+J
 * '''Unfold a text box - RIGHT''' (滿直覺的; 但只能展開不能收回)
 * '''Toggle folded - SPACE'''
 * '''Toggle children folded - Ctrl+SPACE'''
 * Indent nodes: Shift+INSERT
 * '''Fold one level - Alt+DOWN'''
 * '''Unfold one level - Alt+UP''' (往上開花)
 * '''Fold all - Alt+HOME'''
 * '''Unflod all - Alt+END'''
 * '''Move node up - Ctrl+UP'''
 * '''Move node down - Ctrl+DOWN'''
 * '''Move node left(或往上一層) - Ctrl+LEFT'''
 * '''Move node right(或往下一層) - Ctrl+RIGHT'''
 * '''Insert Icon - Alt+I'''
 * '''Evaluate - Alt-F9'''

=== Operation Tips ===

 * __Press Ctrl + F to search. Press Ctrl + G to find next. '''To make the search global, press Esc before searching'''. (也就是說搜尋只會從選定的節點往下找)__
 * To create a child node while editing another node, press Insert while editing.
 * To edit a node, press F2, HOME or END key (其中 Home 會將游標停在開頭, F2 與 End 則會將游標停在結尾), or in node context menu use Edit. To finish editing a node, press ENTER. To force long node editor when editing a short node, press Alt + Enter.
 * To replace the text in a node with new one, start typing.
 * To split a long node, use the button Split at the top of long node editor, or press Alt + S in the long node editor. (從游標處將前後的文件拆成兩個節點)
 * To insert a newline in long node editor, press Control + Enter. You cannot insert newline in short node editor. By default, Enter finishes editing of a long node, and Control + Enter inserts a newline. By unchecking the check box "Enter confirms" you can reverse the function of the mentioned key combinations, i.e. ENTER enters new line and CONTROL ENTER finishes editing. You can set the default value of that check box in preferencess. Moreover, the value of the box is saved during a session of FreeMind. (實驗發現 v0.9.0 beta 9 勾選 [v]Enter Confirms 時的反應不如預期, 習慣上還是將 []Enter Confirms 取消勾選, 編輯結束時按 Alt-O 確定, 或 Alt-C 取消; 可以直接在 Preferences > Appearance 下將 [] Enter Confirms By Default 的勾選拿掉)
 * To change the background color of a node, in node context menu use Format > Background color.
 * Highlighting nodes with clouds
   * Clouds are well suited for highlighting a region. Highlighted are the node and all its descendants. To add a cloud, press Ctrl + Shift + B or in node context menu use Insert > Cloud. (可惜 cloud 不能將兩個以上平行的 node 一起框起來)
   * To change the cloud color, in node context menu use Format > Cloud color.
 * 可以將 Behavior > Selection Method 設定成 By Click, 預動選取的方式有點不方便, 實際點第一次時就被視為要編輯或縮放節點
 * 用右鍵拖放節點可以增加 Graphical Link, 它與 Local Hyperlink 是不同的, 因為一個節點可以有多條 Graphical Link, 但 Local Hyperlink 只能有一個, 也因此導覽 Graphical Link 沒有快捷鍵可以設定, 只能透過在線條上點右鍵來進行導覽.
 * 選定一個節點後, 可以用 File > Export > Branch... 將資料移到另一個檔案, 中間的連結會自動串起來

=== Settings ===

 * 所有的設定檔都放在 `C:\Documents and Settings\xxx\.freemind` 底下, 有 `auto.mmfilter`, `auto.properties`, 所有的按鍵設定都存放在 `auto.properties` 裡. (系統移轉時, 可以將 `auto.properties` 的舊組態貼在新的組態檔後面, 之後執行程式就會自動重整這個組態檔)

=== FreeMind Applet ===

 * 將 Applet 整合到 Wiki 裡是很不錯的用法, 比如說匯出成 Flash?

[...]

=== Using Physical Styles ===

To apply a physical style, in node context menu use Physical Style > Style of Your Choice. To speedup applying physical styles, use keyboard shortcuts as shown in the node context menu.

[...]


== Attributes ==

 * 保留 Preferences > Appearance 下的 [ ] Show Icon For Attributes 的勾選, 使容易識別節點是否還沒有做歸類
 * Attribute Manager 可以事先維護好清單, 但項目不可以從這裡加; 其中 Restricted Set 指的是使用時只能用選的, 不能自己輸入
 * project 等同原來 _gtd.txt 檔案的區隔, 甚至可以更細; type 等同於原來 <<task>>, <<planning>>, <<research>>, <<learning>> 的分類
 * location 可以區分為 home, office, outgo; event 區分為 schedule, send, wait
 * __由於一個 attribute 可以指定二次以上, 而且 value 可以重複; 所以增加一個名為 "tag" 的 attribute, 然後用 attribute manager 將所有可能的值建立起來; 就可以達成 tagging 的效果...__
 * 可以利用 Tools > Assign Attributes... 的功能來做大批新增、置換、刪除
   * 目前 (v0.9.0beta12@2007/07/31) 只有 "Selected Nodes" 有效果, 而 "All Visible Nodes" 則無效; 可以全部展開後全選, 即可達成 "All Visible Nodes" 的效果
   * 其中 "Skip Root Node" 的功能可以搭配 filter 的結果在 [ ] Show Ancestors 及 [ ] Show Descendants 都不開啟時運用, 全選後方便批次處理 attributes.
 * attribute 的清單事實上是存放在個別的 attribute 裡, 由於透過 attribute manager 無法將 attribute 項目刪除, 所以偶爾還是需要直接編輯這個檔案.

 {{{
<attribute_registry SHOW_ATTRIBUTES="hide">
  <attribute_name NAME="project" RESTRICTED="true" VISIBLE="true">
    <attribute_value VALUE="hibernate"/>
    <attribute_value VALUE="java"/>
    <attribute_value VALUE="scripting"/>
    <attribute_value VALUE="life"/>
    <attribute_value VALUE="tapestry"/>
  </attribute_name>
</attribute_registry>
 }}}

 * '''Edit attributes - Alt + F9 (Ctrl + /)''': 可以編輯節點的 attributes, 按 Tab 新增項目, ESC 可離開, 不過刪除只能透過右鍵選單
 * Assign attributes - Ctrl + *
 * Show selected attributes
 * Show all attributes
 * Hide all attributes

== Time Management ==

To find out if your FreeMind runs the Time Management plugin, type Ctlr-T at a node - this should open a little window showing a calendar. Or you can find an entry Show Calendar... under the Tools Menu. (在 v0.9.0 是直接內建的)

The Time Management Pluging gives you the following additional functionality:

 * associate a node with a reminder
 * add a date to a node
 * list the nodes with reminders in chronological(按時間先後的) order

There are two main windows with the time management mode, which are activated by selecting Show Calendar... and Show Time Scheduler List... in the Tools menu. The Calendar window will give the functionality to set date/time and to define/remove reminders. The Time Scheduler list gives you a chronological list of the nodes with reminders.

When opened the first time, the calendar will probably show the current date and time. You can however set date and time to arbitrary values. To set the time, you can just type into the two text fields for hours and minutes. Once you have set a date/time, you can set a reminder for this date/time by just clicking Remind Me At This Date. Your selected node will be tagged with a clock icon.

When a node has an associated reminder, the node will show a little clock icon. When the reminder runs off(時間流逝), i.e. the date/time of the reminder is reached, the icon changes to a blinking little clock/Remember Bell(兩個小圖示輪播) item for the node itself, and to a blinking little clock/Flag icon for supernodes. This way you will be reminded even if the node with the reminder is collapsed in the hierarchy. This can be used e.g. to add deadlines to nodes, and to be reminded at deadlines or to review the urgent tasks for the next week. (貼心的設計!! 有點像是在實作 GTD...)

To remove the reminder of a node, select the node, open the calendar window, and click Remove Reminder.

== The Plug-in API ==

[...]

== Scripting via Groovy ==

Groovy scripts may be attached to individual nodes in the map. When "evaluate" is selected via the menu or keypress (Alt-F8), all nodes in the map are searched (depth-first) for one or more attributes named "script". If such an attribute is found, the value of the attached attribute is passed to the Groovy engine to execute. (一個小小的 attribute 可以放多少程式碼, 如果運算較為複雜怎麼辦[?])

Only nodes are evaluated, which attribute keys start with "script". However, there is nothing preventing a script on one node from acting on other nodes via normal operations (e.g. `node.getChildren` or similar) as far as(就...而言) I can tell from the code.

 1. Create an attribute for a node. The attribute must be named "script"
 2. Create the Groovy script and set as the value of the attribute
 3. Press Alt-F8 or select "Evaluate" from the Tools menu.

'''Assignment vs. Operation'''

If the value of the script attribute starts with the equals sign ("`=`"), then the node text will be replaced by the result of the script evaluation. Be careful not to overwrite your nodes!

If the value of the script attribute does not begin with the equals sign, then the script will run and may affect the map, but the expression result is not assigned to the node text.

'''Available Operations'''

When the Groovy binding[?] is created, two variables are set:

  * `c` is set to the `MindMapController`
  * `node` is set to the `MindMapNode` being evaluated

__'''If you manipulate the node model directly (指寫入的動作而言), you'll miss the undo and flow control capabilities of FreeMind. Please, consult methods from the interface `MindMapActions` only.'''__ (事實上 `MindMapController` 就實作了這個介面; 實驗發現確實有上述 "miss...capabilities" 的問題)

You will have to examine the FreeMind source code for operations on the interfaces. (雖然文件缺乏, 但由 source code 產出的 Javadoc 文件已經夠用; 這裡用的 API 跟開發 Plug-in 所用的一樣的...)

把程式碼寫在 node 上的做法實在很特別, 難怪有人在 wiki 上提出 http://freemind.sourceforge.net/wiki/index.php/FreeMind_0.9.0:_The_New_Features#Scripting_the_application.2C_not_the_documents[Scripting the application, not the documents] 的看法. 或許開發 plug-in 的重要性會比較高一些...

'''Examples'''

Prepend the node text with an integer representing the node depth. Note that the script starts with '`=`' so the result is assigned back to the node text.

 {{{
=node.getNodeLevel() + " " + node.getText()
 }}}

Set the text color of a node:

 {{{
node.setColor(java.awt.Color.RED)        // bad
c.setNodeColor(node, java.awt.Color.RED) // good
 }}}

Set the background color of a node:

 {{{
node.setBackgroundColor(java.awt.Color.BLUE)        // bad
c.setNodeBackgroundColor(node, java.awt.Color.BLUE) // good
 }}}

== GTD (Getting Things Done) ==

 * 可以利用樹狀結構發展 WBS, 方便工作安排, 成本估算 (或許可以用 scripting 自動累加成本...)

[...]

== Resource ==

=== Reference ===

=== Attachments ===

|| Filename || Description ||
|| [[File:/F/FreeMind/freemind-bin-max-0.9.0_Beta_8.zip|freemind-bin-max-0.9.0_Beta_8.zip ]] || FreeMind 0.9 Beta 8 ||
|| [[File:/F/FreeMind/FreeMind-Windows-Installer-0_8_0-max.exe|FreeMind-Windows-Installer-0_8_0-max.exe]] || FreeMind 0.8 all-including version ||

=== Links ===

=== Search ===

== Scratch ==

 * v0.9 多出了 Flash 輸出的功能, 效果很好!!
 * v0.9.0beta12@2007/08/04 發現不會因為展開或收起節點而造成檔案的異動
