= link:concepts.html[OpenNI / Concepts] / Production Graph =

== 參考資料 ==

 * OpenNI Overview > Concepts > The Production Graph (`Documentation/html/prod_graph.html`)
 * https://github.com/OpenNI/OpenNI/blob/Unstable-1.5.4.0/Wrappers/OpenNI.java/src/org/OpenNI/NodeType.java[`org/OpenNI/NodeType.java`]
 * `xn::NodeWrapper` Class Reference (`Documentation/html/classxn_1_1_node_wrapper.html`) -> https://github.com/OpenNI/OpenNI/blob/Unstable-1.5.4.0/Wrappers/OpenNI.java/src/org/OpenNI/NodeWrapper.java[`src/org/OpenNI/NodeWrapper.java`]
 * `xn::ProductionNode` Class Reference (`Documentation/html/classxn_1_1_production_node.html`) -> https://github.com/OpenNI/OpenNI/blob/Unstable-1.5.4.0/Wrappers/OpenNI.java/src/org/OpenNI/ProductionNode.java[`org/OpenNI/ProductionNode.java`]
 * `xn::NodeInfo` Class Reference (`Documentation/html/classxn_1_1_node_info.html`) -> https://github.com/OpenNI/OpenNI/blob/Unstable-1.5.4.0/Wrappers/OpenNI.java/src/org/OpenNI/NodeInfo.java[`org/OpenNI/NodeInfo.java`]
   ** https://github.com/OpenNI/OpenNI/blob/Unstable-1.5.4.0/Wrappers/OpenNI.java/src/org/OpenNI/ProductionNodeDescription.java[`org/OpenNI/ProductionNodeDescription.java`]

////////////////////////////////////////////////////////////////////////////////

 * 為什麼不叫 production tree，因為一個 node 可能跟兩個 nodes 使用，nodes 在 context 裡的關係是網狀的。
 * production graph
   ** OpenNI object model, a network of production nodes. (tree? single root?)
   ** identify and track blobs (binary large objects) as human hands or users.
 * production node -> node info (`ProductionNode.getInfo()`)
   ** a type, defined by OpenNI specification.
   ** a vendor name
   ** a specific name (unique for this type and vendor)?
   ** a version
 * note types
   ** device, codec, recorder, player, script, generator, middleware?
   ** `org.OpenNI.NodeType` constants, `toNative()`, `isGenerator()`, `isDerivedFrom(base)`
 * context initializing
   ** loads each registered module, and asks it for the types of nodes it implements.
 * enumeration process, enumeration query
 * in case the application doesn't care about different nodes, and just needs any node of the requested type
 * The production node that is returned is always a complete production graph. That is to say, the returned node will bring with it all other dependant nodes it requires for generating its output data. 
 * By default, if an existing node matches the filter, the Create() method will return a reference to the existing node, and so it will not create a new node.
 * `org.OpenNI.ProductionNode`
   ** 
   ** `getContext()`

////////////////////////////////////////////////////////////////////////////////

