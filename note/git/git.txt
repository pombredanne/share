= Git =

Git /'ɡɪt/ 是一個 distributed VCS (Version Control System)，沒有像 link:../svn/svn.html[SVN] 的 central server，幾乎什麼事都在本機進行，不需要網路連線就以做 commit、branch、merge 等工作。像 Mercurial (`hg`) 跟 Bazaar (`bzr`) 都屬於這類 distributed VCS。

多人開發時，可以分別用 publish 或 pull request 兩個機制，主動將自己修改的部份分享給別人，或是邀請別人將自己修改的部份合併進去。這跟 Linux kernal 一直以來的開發模式相同－透過 patch 跟 archive 散佈，http://gitref.org/[Git Reference] 提到 Git 就是要加速這個過程...

Git 的精神就是不斷地 branch 跟 merge，不用受到一條主線的限制。不過 branch 的管理也是個問題？

[TIP]
================================================================================
如果已經link:install.html[安裝]好 Git，就可以透過它來取得 Git 的原始碼：

 git clone https://github.com/git/git.git

// git clone git://git.kernel.org/pub/scm/git/git.git 
================================================================================

== 延伸閱讀 ==

 * link:start.html[Getting Started]
 * link:learn.html[Learning]
 * link:repository-hosting.html[Repository Hosting]

== 參考資料 ==

.網站
--
 * http://git-scm.com/[Git - Fast Version Control System]
   ** http://git-scm.com/documentation[Documentation]
 * http://gitref.org/[Git Reference]
--

.工具
--
 * http://www.jgit.org/[JGit - Java GIT]
--

.文件
--
 * http://255121.blogspot.com/2011/05/git.html[巴特的微花盆: 用Git做版本控制，輕鬆管理程式碼或任何重要文件！] (2011-05-06)
 * http://www.josephj.com/entry.php?id=308[Git Study] (2009-12-09)
--

////////////////////////////////////////////////////////////////////////////////

 * `svn update` -> `git pull`
 * `svn switch` -> `git checkout`

////////////////////////////////////////////////////////////////////////////////

