= Git =

Git /'ɡɪt/ 是一個 distributed VCS (Version Control System)，沒有像 link:../svn/svn.html[SVN] 的 central server，幾乎什麼事都在本機進行，不需要網路連線就以做 commit、branch、merge 等工作。像 Mercurial (`hg`) 跟 Bazaar (`bzr`) 都屬於這類 distributed VCS。

多人開發時，可以分別用 publish 或 pull request 兩個機制，主動將自己修改的部份分享給別人，或是邀請別人將自己修改的部份合併進去。這跟 Linux kernal 一直以來的開發模式相同－透過 patch 跟 archive 散佈，http://gitref.org/[Git Reference] 提到 Git 就是要加速這個過程...

Git 的精神就是不斷地 branch 跟 merge，不用受到一條主線的限制。不過 branch 的管理也是個問題？

== 延伸閱讀 ==

 * link:start.html[Getting Started]
 * link:repository-hosting.html[Repository Hosting]

== 參考資料 ==

.網站
--
 * http://git-scm.com/[Git - Fast Version Control System]
   ** http://git-scm.com/documentation[Documentation]
 * http://gitref.org/[Git Reference]
--

.書籍
--
 * http://shop.oreilly.com/product/0636920022862.do[O'Reilly - Version Control with Git, 2nd Edition] (2012.08)
 * http://pragprog.com/book/pg_git/pragmatic-guide-to-git[Pragmatic - Pragmatic Guide to Git] (2010.11)
 * http://www.apress.com/9781430218333[Apress - Pro Git] (2009.08) (http://git-scm.com/book[online]) - 官網 Documentation > Book 下就是這本書，因此這本書也被稱做 Git Community Book。
 * http://shop.oreilly.com/product/9780596520137.do[O'Reilly - Version Control with Git] (2009-05)
 * http://pragprog.com/book/tsgit/pragmatic-version-control-using-git[Pragmatic - Pragmatic Version Control Using Git] (2008-12)
--

.工具
--
 * http://www.jgit.org/[JGit - Java GIT]
--

.文件
--
 * http://255121.blogspot.com/2011/05/git.html[巴特的微花盆: 用Git做版本控制，輕鬆管理程式碼或任何重要文件！] (2011-05-06)
 * http://www.josephj.com/entry.php?id=308[Git Study] (2009-12-09)
--

.教學資源
--
 * http://ihower.tw/blog/archives/6696/[Git 教育訓練課程投影片 (2012) | ihower { blogging }] (2012-07-19)
 * http://www.slideshare.net/littlebtc/git-5528339[寫給大家的 Git 教學] (2010)
 * http://schacon.github.com/git/gittutorial.html[gittutorial(7)]
 * http://git-scm.com/course/svn.html[Git - Fast Version Control System]
 * http://schacon.github.com/git/everyday.html[Everyday GIT With 20 Commands Or So]
--

////////////////////////////////////////////////////////////////////////////////

 * `svn update` -> `git pull`
 * `svn switch` -> `git checkout`

////////////////////////////////////////////////////////////////////////////////

