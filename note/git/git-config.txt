= 組態設定 Git =

Git 的設定完全透過 `git config` 來做。Git 的組態分為三個層級：（後者可以覆寫前者）

 * 整個作業系統：存放在 `/etc/gitconfig`（或 Windows 下的 `%GIT_HOME%\etc\gitconfig`，其中 `%GIT_HOME%` 指的是 Git 的安裝目錄），用 `git config --system` 來做設定。
 * 特定的使用者：存放在 `~/.gitconfig`（或 Windows 下的 `%USERPROFILE%\.gitconfig`），用 `git config --global` 來做設定。
 * 特定的專案：存放在 Git directory 底下（`.gif/config`），用 `git config` 不加 `--system` 或 `--global` 來做設定。

安裝 Git 後，至少要先完成兩樣設定－user name 跟 email，因為 commit 時會記錄這兩項資訊：

--------------------------------------------------------------------------------
$ git config --global user.name "Jeremy Kao" <1>
$ git config --global user.email "imsardine@gmail.com"
$ 
$ git config --list    <2>
user.name=Jeremy Kao
user.email=imsardine@gmail.com
$
$ git config user.name <3>
Jeremy Kao
$
$ cat ~/.gitconfig     <4>
[user]
	name = Jeremy Kao
	email = imsardine@gmail.com
--------------------------------------------------------------------------------
<1> `git config [--system|global] <key> <value>` 可以用來設定不同層級的組態（configuration variables）。
<2> `git config --list` 可以用來檢查目前的設定。
<3> `git config <key>` 可以直接印出某個 key 的內容，很適合拿來整合 shell script。
<4> Git 組態檔看起來應該是採用 link:../ini/ini.html[INI] 格式。`git config` 裡 'key' 用 `<section_name>.<property_name>` 的表示法來指定要存取的設定。例如 `user.name` 是對應到組態檔裡頭 `[user]` 這個 section 底下，一個名叫 `name` 的 property。

== 延伸閱讀 ==

 * link:git-install.html[安裝 Git]

== 參考資料 ==

.文件
--
 * http://git-scm.com/book/en/Getting-Started-First-Time-Git-Setup[1.5 Getting Started - First-Time Git Setup]
--

