= Eclipse =
<<TableOfContents>>

'''關聯'''

'''網站/資源'''

 * http://www.eclipse.org/[Official Home]
   * http://wiki.eclipse.org/Main_Page[Wiki]
   * http://www.eclipse.org/forums/[Forum]
 * http://www.eclipse.org/galileo/[v3.5 Galileo(伽利略) Home]
   * http://help.eclipse.org/galileo/index.jsp[Eclipse Galileo Documentation]
 * http://www.eclipse.org/ganymede[v3.4 Ganymede(木衛三) Home]
   * http://help.eclipse.org/ganymede/index.jsp[Eclipse Ganymede Documentation]
 * Plugins
   * http://marketplace.eclipse.org/[Eclipse Marketplace]
   * http://eclipse-plugins.2y.net/eclipse/index.jsp[Eclipse-Plugins.info]
 * http://www.planeteclipse.org/[Planet Eclipse]

'''工具/方案'''

'''應用領域/實例'''

'''書籍'''

'''教程'''

'''文章/新聞/討論'''

 * http://www.theserverside.com/news/thread.tss?thread_id=55344[Oracle Announces support for Eclipse 3.5] (2009-08-04)
 * http://benpryor.com/blog/2006/03/03/top-10-tips-for-new-eclipse-users/[Top 10 Tips For New Eclipse Users - Ben Pryor’s blog] (2006-03-03)

'''關鍵字'''

== 學習指引 ==

== Maven Plugin ==

 * http://www.nabble.com/maven-eclipse-plugin-2.6-project-references-td23025400.html[這裡]提到在 Maven 2.6 之後, `eclipse:eclipse` 也會自動尋找同一個 workspace 底下的其他專案, 並將它引入成為 project dependencies; 由於關閉中的專案也會被引入, 建議啟用 "自動閞啟相關專案" (General > Workspace > Open referenced projects when a project is opened) 的功能, 否則很容易遇到編譯上的錯誤...

 * 每位開發人員的習慣不同, 但由於 Eclipse Plugin 某個項目從 POM 裡直接組態之後, 就無法再從 CLI 做覆寫, 因此不適合將 `downloadJavadocs`、`downloadSources` 或 `useProjectReferences` 等設定提到 (Parent) POM 中. 建議可以從 Shell Alias 下手:

 {{{
alias mvn-eclipse="mvn eclipse:clean eclipse:eclipse -DdownloadJavadocs -DdownloadSources -Declipse.useProjectReferences=false"
alias mvn-eclipse-refs="mvn eclipse:clean eclipse:eclipse -DdownloadJavadocs -DdownloadSources -Declipse.useProjectReferences=true"
 }}}

'''網站'''

 * http://maven.apache.org/plugins/maven-eclipse-plugin/[Official Home]
   * http://docs.codehaus.org/display/MAVENUSER/Eclipse+Plugin[Wiki]

'''Code Snippets'''

 {{{
<plugin>
  <artifactId>maven-eclipse-plugin</artifactId>
  <version>2.7</version>
</plugin>
 }}}

 {{{
<configuration>
  <sourceIncludes>
    <sourceInclude />
  </sourceIncludes>
</configuration>
 }}}

== Scrapbook Page ==

'''參考資料'''

 * http://help.eclipse.org/galileo/topic/org.eclipse.jdt.doc.user/concepts/cscrapbook.htm[Galileo / Java Development User Guide / Using the Scrapbook]
 * http://passion4java.blogspot.com/2009/10/eclipse-scrapbook-pages-quick-way-to.html[passion4java: Eclipse Scrapbook Pages: A quick way to test you java code snippets.] (2009-10-21)
 * http://in4mationflow.com/SoftwareReviews/Creating-a-Scrapbook-Page-in-Eclipse[Creating a Scrapbook Page in Eclipse - In4mation Flow] (2009-04-06)
 * (./) http://www.eclipsezone.com/eclipse/forums/t61137.html[EclipseZone - Using Scrapbook Pages ...] (2006-01-08)
 * http://www.informit.com/articles/article.aspx?p=31789&seqNum=3[InformIT: Using Java Development Tools in Eclipse > Running Java Code] (2003-05-30)

== Memory Settings ==

'''參考資料'''

 * http://wiki.eclipse.org/FAQ_How_do_I_increase_the_heap_size_available_to_Eclipse%3F[FAQ How do I increase the heap size available to Eclipse? - Eclipsepedia] (2008-05-11)
 * http://wiki.eclipse.org/FAQ_How_do_I_increase_the_permgen_size_available_to_Eclipse%3F[FAQ How do I increase the permgen size available to Eclipse? - Eclipsepedia] (2007-10-06)

== Configuration ==

在 eclipse.ini 可以指定 Eclipse 本身要採用的 JVM:

 {{{
-vm
C:\Program Files\Java\jre1.5.0_11\bin\java.exe
-Dfile.encoding=UTF-8
 }}}

也可以做記憶體配置: (本來 `-Xms40m` 對於重度開發者, 會造成一直 gc 而有 lag 產生...)

 {{{
-vmargs 
-Xms128m
-Xmx512m
-XX:PermSize=64m
-XX:MaxPermSize=128m
 }}}
 
之前在 Ubuntu 7.10 64, 執行 svn 操作時會出現 crash. 可以試著加上 `-XX:-ParallelRefProcEnabled`. http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6558100[Bug ID: 6558100]

'''參考資料'''

 * http://www.topazproject.org/trac/wiki/EclipseSetup[EclipseSetup - Topaz - Trac]
 * https://www.newt.com/java/eclipse/[Eclipse HOWTO] (2006-02-05)

== Code Templates ==

 * Java / Code Style / Code Templates
 * Java / Editor / Templates

${staticImport:importStatic('org.easymock.EasyMock.*')}
${testType:newName} ${cursor} ${mock:newName} = createMock("${mock}", ${testType}.class);
http://www.informit.com/articles/article.aspx?p=367962&seqNum=4

Method Body

 {{{
// ${todo} [${user}] ${enclosing_method}
throw new UnsupportedOperationException("${enclosing_type}.${enclosing_method}");
 }}}

== Plugins ==

|| Plugin || Official Site || Update Site URL || Note ||
|| Subclipse || http://subclipse.tigris.org || http://subclipse.tigris.org/update_1.2.x || @2008/09/09 按http://beerholder.blogspot.com/2008/06/eclipse-34-ganymede-and-subclipse-14.html[這裡]的說法 - The link to the update site of the old version 1.2.x Subclipse plugin has disappeared. Now, for this new 1.4.x Subclipse plugin, the Subversion 1.5.0 client libraries and bindings are required! I for one run Ubuntu 8.04 Hardy Heron, and that ships with Subversion 1.4.6. This means that if I were to install the new 1.4.x Subclipse plugin and opt to install the JavaHL adapter only (because that is the recommended adapter), it will not work: The "Unable to load default SVN Client" message when running the 1.4.x Subclipse plugin with the JavaHL adapter only. 雖然另一個 SVNKit adapter 沒有這個問題, 但它還處於 beta 階段, 因此作者建議暫時使用 1.2.x 的版本 ||
|| AnyEdit || http://andrei.gmxhome.de/anyedit/ || http://andrei.gmxhome.de/eclipse/ ||
|| openextern || http://code.google.com/p/openextern/ || http://openextern.googlecode.com/svn/trunk/openextern_update/ || 用以取代舊有的 EasyShell 與 EasyExplorer ||
|| EasyShell || http://pluginbox.sourceforge.net/ || ||
|| EasyExplorer || http://www.nexb.org/easystruts/Wiki.jsp?page=EasyExplore || http://easystruts.sourceforge.net/eclipse/updates/site.xml || 安裝完成後, 組態成 `nautilus {0}` 即可 ||
|| Amateras EclipseHTMLEditor || http://amateras.sourceforge.jp/cgi-bin/fswiki_en/wiki.cgi?page=EclipseHTMLEditor || ||
|| Implementors || http://eclipse-tools.sourceforge.net/implementors/ || http://eclipse-tools.sourceforge.net/updates/ ||
|| Maven Integration form Eclipse || http://m2eclipse.codehaus.org/ || http://m2eclipse.sonatype.org/update/ || ||
|| TestNG || http://testng.org/doc/eclipse.html || http://beust.com/eclipse || ||

== Workspaces ==

 * 在同一個 Workspace 下簽出相同 Modules 的不同版本時, 會出現專案名稱相同的衝突 (因為 `eclipse:eclipse` 預設會以 `artifactId` 做為專案名稱), 本來要朝多 Workspaces 的方向解決, 但後來因為 Workspaces 間無法共用 Settings 的問題而作罷, 最後才認知到這個問題的源頭其實在於 `eclipse:eclipse` 是如何產生專案名稱的. __'''後來才發現 `eclipse:eclipse` 提供有 `addGroupIdToProjecName`/`addVersionToProjectName`/`projectNameTemplate` 三個地方可以調整專案名稱; 建議從 Parent POM 將 `addGroupIdToProjecName` 與 `addVersionToProjectName` 都設為 `true`, 實務上就不會遇到專案命名上的衝突. (2009-11-06)'''__

=== Multiple Workspaces ===

'''參考資料'''

'''關鍵字'''

 * http://jdcarlflip.blogspot.com/2007/12/eclipse-startup-options-showlocation.html[Loving Software Blog: Eclipse Startup Options: showlocation] (2007-12-31) - 可以用 `-showlocation` 這個 Startup Option 在抬頭秀出

== Subversion ===

'''工具/方案'''

 * [[Subclipse]]
 * http://www.eclipse.org/subversive/[Eclipse Subversive]

'''參考資料'''

 * http://www.nileshk.com/svn_in_eclipse_subversive_and_svnkit_for_subversion_1_6[SVN in Eclipse: Subversive and SVNKit for Subversion 1.6 - Nilesh D Kapadia] (2009-06-05)

== 去掉行尾的空白 ==

如同http://zebert.blogspot.com/2009/06/clean-up-trailing-whitespaces-in.html[這裡]所說的, 如果沒有將行尾的空白去掉, 就無法比對出 "Readable Patches". 雖然 Eclipse 本身提供有 Key Binding 與 Save Actions 兩種做法, 但 Key Binding 要按下某個組合鍵才會有作用, Save Actions 雖然會在存檔時會自動作用, 但又僅限於 Java Editor.

很多人在討論這個問題, 但幾乎所有的答案都是 [[AnyEdit]]. 事實上 http://maven.apache.org/developers/conventions/code.html[Maven - Maven Code Style And Code Conventions] 也建議使用 !AnyEdit. (2009-10-29)

'''工具/方案'''

 * {*} [[AnyEdit]]
 * Key Binding (Window > Preferences > General > Keys)
 * Save Actions (Window > Preferences > Java > Editor > Save Actions > Additional Actions > Code Organizing)

'''參考資料'''

 * http://zebert.blogspot.com/2009/06/clean-up-trailing-whitespaces-in.html[Paste here: Clean up trailing whitespaces in sources] (2009-06-02) - 提到如果沒有將行尾的空白去掉, 就無法比對出 "readable patches". 有人提到可以用 "no-trailing-whitespace" 這個 pre-commit hook 來阻擋沒有截掉行尾空白的程式碼.
 * http://stackoverflow.com/questions/1043433/how-to-auto-remove-trailing-whitespace-in-eclipse[How to auto-remove trailing whitespace in Eclipse? - Stack Overflow] (2009-06-25)
 * http://www.saltycrane.com/blog/2007/04/how-to-remove-trailing-whitespace-in/[How to remove trailing whitespace in Eclipse « SaltyCrane Blog] (2007-04-05) - 提到 Key Binding 與 !AnyEdit 兩種做法
 * http://niftybits.wordpress.com/2007/03/14/production-eclipse-configuration/[Production Eclipse Configuration « Nifty tidbits] (2007-03-14)

'''關鍵字'''

 * eclipse remove trailing whitespace

== Bookmarking ==

按 Add Bookmark... 後會開窗輸入書籤名稱的這個動作稍嫌麻煩 (雖然 Eclipse 會預設採用該行的內容做為書籤的名稱), 但如果一個快速鍵就可以將某一行標記起來就方便多了. 雖然也可以定義 Add Bookmark 的快速鍵, 但不知道為什麼透過快速鍵帶出的對話框並不會自動填入該行的內容...

因此目前 (2009-12-10) 這類 Quick Bookmarking 的功能仍須求助於其他 Plugins. 網路上比較常被提到的是 Enhanced Bookmarks Plugin:

 1. 從 http://eclipse.etc.to/updates/ 安裝 Eclipse Editor Extensions 1.0.3

 2. Window > Preferences > General > Keys, 在 type filters text 處打上 bookmark 就會多出許多 Commands

 3. Plugin 內建的快速鍵有 Ctrl-B/P/N, 分別對應 "切換/上一個/下一個書籤" 的功能, 其中 Ctrl-B 跟 Eclipse 內建的 Bold / Editing Text 衝突 (按 Ctrl-B 之後還要選), 建議將 Bold / Editing Text 的對應拿掉.

 4. 之後按 Ctrl-B 就會自動建立名為 "Quick bookmark" 的書籤, 並整合到 Bookmarks View 裡.

'''工具/方案'''

 * http://marketplace.eclipse.org/content/fastmarks[Fastmarks]
 * http://eclipse-plugins.2y.net/eclipse/plugin_details.jsp?id=1516[Enhanced Bookmarks plugin - EclipsePlugins]

'''參考資料'''

 * http://dmy999.com/article/29/using-eclipse-efficiently[coding, by Derek Young: Using Eclipse Efficiently] (2007-11-14)
 * http://etc.to/eclipse_bookmarks_plugin[Eclipse Bookmarks plugin - etc.to] (2006-07-25) - 提到 Eclipse 內建的 Bookmarks 要求為書籤命名的做法並不實際
 * http://www.luisdelarosa.com/2005/02/16/eclipse-tip-use-bookmarks-to-track-important-places-in-your-code/[Luis de la Rosa » Eclipse Tip: Use Bookmarks to track important places in your code] (2005-02-16)

== 常見問題 ==

=== Eclipse 在 Ubuntu 9.10 下按鈕不能按的問題 ===

 {{{
export GDK_NATIVE_WINDOWS=1
 }}}

 * http://kaien.kaienroid.com/blog/?p=303[Kaien X Window » Blog Archive » 宿命的無尾熊(Ubuntu 9.10 Karmic Koala)與日蝕(Eclipse)的Bug] (2009-11-20)

== 隨手記 ==

 * plugin 並非安裝在 workspace 底下; 有時候 workspace 的組態會壞掉, 因此平常就要把組態匯出做備份, 方便重建 workspace 時可以使用.
 * 建議將 Window/Preferences... -> Java/Code Style/Organize Imports 裡的 "Number of static imports needed for .* (e.g. java.lang.Math.*):" 調整為 0; 才不會讓 Organize Imports 的動作, 破壞了原先 .* 的安排
 * Window/Preferences/General/Editors/Text Editors/Show print margin 可以顯示編輯的邊界
 * Java Builder and Ant Build
   * Project Properties/Builders 下預設有一個 Java Builder, 將它取消選取會出現 "This is an advanced operation. Disabling a project builder can have many side-effects. Continue?" 的確認
   * Java Builder 與 Project 下的 Build All, Build Project, Clean..., Build Automatically 等動作都結合得很好, 但取消內定的 Java Builder 而整合 Ant Build 進來(掛載 After a "Clean", Manual Build, Auto Build, During a "Clean" 等動作; 組態會進 .project 及 .externalToolBuilders/xxx.launch 裡) 後, 確實有時候會觸發 Ant Build 沒錯, 但反應總是怪怪的, 例如 Manual Build 沒有動作, Clean 完強制要求 build 也沒有反應, 設定好動作完要 refresh 也時好時壞, 再者是呼叫 Ant Build 的效能不是很好(要搭配外部的 JDK, 不能直接用 Eclipse 運行的 JRE)...
   * 在實務上, 使用 Eclipse 時不建議用 Ant Build 來完全取代 Java Builder(真不曉得 !NetBeans 陣營, 對完全整合 Ant Build System 有什麼好高興的?), 而是相互搭配, Java Builder 前後的加工上, Ant Build 當然要有完整 build/clean 的能力, 用以實作 Continuous Integration(build-time), 但既然用了 Eclipse(development-time), 就別搶 Java Builder 的工作, 畢竟整合度還是比較高.
   * Project Properties/Java Build Path/Source
     * 雖然有一個 Default output folder, 但透過 Allow output folders for source folders 的勾選, 可以分別指定每個 source folder 要編譯到哪個 output folder 去, 這非常適用於 src/java 與 src/test 要分別編譯到 target/classes 及 target/tests 的狀況, 後續要封裝也比較方便, 以往這個工作可能要整合 Ant Build 進來, 但現在不用了.
     * 現在更可以組態每個 source folder 的 Inclusion Patterns 及 Exclusion Patterns, 彈性直逼 Ant Build
   * 以上這些組態, 最得都會進 .project, .externalToolBuilders/xxx.launch, 或 .classpath 裡, 所以後續的合作間發也沒有問題, 記得只要別將 .settings 納入版控即可, 因為那裡面的組態是相當個人化的...
 * 只要 library 有設定 source, 不用將整個 source 解開, 就可以使用 get reference 來查看別人是怎麼用 API 的.... 這一點在追原始碼時很好用!!
 * package explorer 可以調整 package presentation - flat or hierarchical. 其中 hierarchical 適合搭配依 功能性/domain/module 切割的方式, 它會將空白的 package 併起來, 滿方便的!! 而 flat 則適用於依 layer 切割的方式
 * 在專案或套件層級都可以做 Source / Organize Imports 的動作, 這個功能相當方便, 方便後面程式碼相依性的檢測
 * 有越來越多人將客戶端設計工具架在 Eclipse 之上, 這是相當值得學習的做法...
 * "Java Source Attachment" 為 library 引進來的原始碼, 如果是中文說明, 則 popup 的提示畫面無法正常顯示, 只要在 eclipse.ini 加上 -Dfile.encoding=MS950 即可, 找個機會將整個專案轉換成使用 UTF-8 編碼, 可以徹底解決這個問題
 * 可以在 outline 做 member 的上下拖拉, 將相關的 member 放在一起.
 * __Outline 的每個方法左側會出現一個小三角型, 空心的三角型表示實作某個介面 (或是實現上層的 abstract method), 實心的三角型表示 override; '''前者可以用來快速檢視 implementation 裡哪些是多出來的方法, 可以將它拿掉.''' (通常是沒有透過 IDE 做 interface 的 refactoring 所造成)__
 * Refactoring 做 class 更名或移動時
   * 如果有勾選 [v] Update textual occurrences in comments and strings (forces preview), 一定要逐一檢查, 因為很容易發生非預期的取代, 這個動作比 [v] Update full qualified names in non-java text files (forces preview) 危險很多, 至少它是針對 "full qualified names", 比較不會出錯.
   * 勾選 Update Similarly named variables and methods 時, 要記得檢查 Configure..., 選擇 (*) Also find embedded names 才不會有所遺漏
 * Eclipse 下 library 的 Javadoc 不支援 classpath variable 存取, 可行的方式就是共用一個 domain name, 用 file:/// 存取或許可行[?]
 * __單行出現多個錯誤時, 記得要去查看左側紅色的打叉, 因為程式碼中的紅色底線只會秀出最後一則錯誤; 如果發現該行錯誤 "沒頭沒腦" 時, 記得要去看左側紅色的叉!! '''(若這個錯誤真不該發生, 就先排除掉其他錯誤, 因為這個錯誤可能是其他錯誤所造成!!)'''__
 * 善用 Working Set 的功能, 可以將同一個 workspace 拆成數個邏輯上的單位, 方便專注在個別的開發上. (Package Explorer 右上方下拉選單 Top Level Elements 選擇 Working Sets, 就可以一次列出多個 working set)
 * __'''Console 無法正常顯示 UTF-8 字元時, 除了 Run Dialog 的 Console Encoding 要設為 UTF-8 之外,  也要組態 VM Arguments `-Dfile.encoding=UTF-8`. (這個方法也同樣適用於 Ant 的 `<javac>...<jvmarg value="-Dfile.encoding=MS950"/> ...</java>`)'''__
 * Eclipse 發生錯誤時, 會將錯誤記錄在 workspace 下的 `.metadata/.log` 裡.
 * XML Catalog 可以將自己手動下載取得的 XSD 檔加入, 就能有自動完成的功能. 建議將 XSD 集中在某個資料夾底下, 按http://cwiki.apache.org/GMOxDOC22/using-eclipse-xml-tools-in-apache-geronimo.html[這裡]提到的方法整批匯入.
 * 字型建議採用 Consolas 字型 (11 級字), 可以從http://www.microsoft.com/downloads/details.aspx?familyid=22e69ae4-7e40-4807-8a86-b3d36fab68d3&displaylang=en[微軟網站]下載, 由於是 "Optimized for Microsoft !ClearType", 所以要開啟 !ClearType 才會好看. 顯示中文字時能夠佔用兩個英文字的寬度, 真正達到等寬字的效果, 這正是 Courier New 與 Bitstream Vera Sans Mono 最大的問題
   * Window/Preferences/General/Appearance/Colors and Fonts/Basic/Text Font
   * Window/Preferences/General/Appearance/Colors and Fonts/Java Editor Text Font
   * Window/Preferences/General/Appearance/Colors and Fonts/Properties File Editor Text Font

== 修訂記錄 ==

|| 版次 || 日期 || 記錄 ||
|| 1.0 || <<Date(2009-06-16T05:31:07Z)>> || 初稿 ||
