= link:python.html[GAE / Python] / Application Configuration =
:title: [GAE][Python] Application Configuration

== 參考資料 ==

 * https://developers.google.com/appengine/docs/python/config/appconfig[Python Application Configuration - Google App Engine — Google Developers]
 * https://developers.google.com/appengine/docs/appcfg[AppCfg Tool - Google App Engine — Google Developers]

////////////////////////////////////////////////////////////////////////////////

 * An App Engine application has a configuration file called `app.yaml` (YAML syntax). Among other things, this file describes which "handler scripts" should be used for which URLs.
+
--------------------------------------------------------------------------------
application: helloworld <1>
version: 1 <2>
runtime: python27 <3>
api_version: 1
threadsafe: true  <4>

handlers:
- url: /.*        <5>
  script: helloworld.app
--------------------------------------------------------------------------------
<1> application identifier. Every new application on App Engine has a unique application identifier. You'll choose the identifier for your application when you register it in the next step. Until then you can just leave the value here set to helloworld because this value is not important when developing locally.
<2> version number. This is version number 1 of this application's code. If you adjust this before uploading new versions of your application software, App Engine will retain previous versions, and let you roll back to a previous version using the administrative console. 也可以是文字
<3> This code runs in the python27 runtime environment, version "1" (`runtime` + `api_version`).
<4> This application is threadsafe so the same instance can handle several simultaneous requests. Threadsafe is an advanced feature and may result in erratic behavior if your application is not specifically designed to be threadsafe.
<5> mapping every URL to the handler. Every request to a URL whose path matches the regular expression /.* (all URLs) should be handled by the `app` object in the "helloworld module".

////////////////////////////////////////////////////////////////////////////////

