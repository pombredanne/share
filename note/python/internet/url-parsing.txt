= link:../python.html[Python] / link:internet.html[Internet] / 拆解 URL =
:title: [Python][Internet] 拆解 URL

`urlparse.urlparse()` 提供拆解 URL 細部組成的功能。

 urlparse(urlstring)

例如：

--------------------------------------------------------------------------------
>>> from urlparse import urlparse
>>> urlparse('http://www.google.com/apps?q=java#abc')
ParseResult(scheme='http', netloc='www.google.com', path='/apps', params='', query='q=java', fragment='abc')
>>> urlparse('http://www.google.com/apps')
ParseResult(scheme='http', netloc='www.google.com', path='/apps', params='', query='', fragment='') <1>
>>> urlparse('www.google.com/apps')
ParseResult(scheme='', netloc='', path='www.google.com/apps', params='', query='', fragment='')     <2>
>>> urlparse('www.google.com/apps', 'http')
ParseResult(scheme='http', netloc='', path='www.google.com/apps', params='', query='', fragment='')
>>> urlparse('http://www.google.com')
ParseResult(scheme='http', netloc='www.google.com', path='', params='', query='', fragment='')
>>> urlparse('http://www.google.com/')
ParseResult(scheme='http', netloc='www.google.com', path='/', params='', query='', fragment='')
--------------------------------------------------------------------------------
<1> URL 會被拆解成 6-tuple （'scheme://netloc/path;parameters?query#fragment'），注意 `/apps` 前導的 `/` 不屬於 'netloc' 的一部份。
<2> 沒有 schema 就解不出 'netloc' 了。

上面 `ParseResult` 除了是個 tuple，也帶有 `scheme`(0)、`netloc`(1)、`path`(2)、`params`(3)、`query`(4) 以及 `fragment`(5) 這些屬性，所以要取出特定一個 component 有兩種方式：

--------------------------------------------------------------------------------
>>> from urlparse import urlparse
>>> url = urlparse('http://www.google.com/apps')
>>> url[0]      <1>
'http'
>>> url.netloc  <2>
'www.google.com'
--------------------------------------------------------------------------------
<1> 透過 index 存取。
<2> 透過 attribute；顯然這種方式的可讀性比較高。

需要將 relative URL 轉成 absolute URL 時，就可以用 `urlparse()` 重新組成 base URL：

--------------------------------------------------------------------------------
>>> from urlparse import urlparse
>>> url = urlparse('http://www.google.com/apps')
>>> '%s://%s/' % (url.scheme, url.netloc)
--------------------------------------------------------------------------------

== 參考資料 ==

 * http://docs.python.org/library/urlparse.html[urlparse — Parse URLs into components — The Python Standard Library]

