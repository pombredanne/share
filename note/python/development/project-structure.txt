= development.html[Python / Development] / Project Structure =
:title: [Python][Development] Project Structure

下面以 MyCalc 專案為例：

--------------------------------------------------------------------------------
MyCalc/
|-- mycalc/  <1>
|   |-- calc.py
|   ｀-- __init__.py
|-- setup.py
|-- setup.cfg
|-- README
|-- INSTALL
|-- LICENSE
|-- docs/    <2>
|-- scripts/ <3>
`-- tests/   <4>
    |-- __init__.py
    `-- unit/
        |-- __init__.py
        ｀-- test_calc.py
--------------------------------------------------------------------------------
<1> 主要的程式碼都會集中放在一個資料夾底下，形成一個 package。例如這裡的 `mycalc` 就是 package name。
<2> `docs/` 用來擺放所有的文件。
<3> `scripts/` 用來擺放使用者會直接調用的 CLI 程式（如果有的話），例如 batch file 或 shell script 等。
<4> 測試程式都擺在 `tests/` 底下，也可以用子資料夾將不同類型的測試區分開來。
+
--
搭配 link:../../nose/nose.html[nose] 使用時，`unit/__init__.py` 的存在很重要，因為 否則 `nosetests` 就不會遶進去找到 `test_calc.py`。
--

== 延伸閱讀 ==

 * link:project-structure-samples.html[Samples]

== 參考資料 ==

 * http://stackoverflow.com/questions/1471994/what-is-setup-py[python - what is setup.py? - Stack Overflow] (2009-09-24)
 * http://guide.python-distribute.org/creation.html[Creating a Package — The Hitchhiker's Guide to Packaging v1.0 documentation]

.其他文件
--
 * http://stackoverflow.com/questions/193161/what-is-the-best-project-structure-for-a-python-application[What is the best project structure for a Python application? - Stack Overflow] (2008-10-10; PDF)
 * http://as.ynchrono.us/2007/12/filesystem-structure-of-python-project_21.html[Interesting Things, Largely Python and Twisted Related: Filesystem structure of a Python project] (2007-12-21; PDF)
 * http://pycheesecake.org/browser/trunk
 * https://github.com/gabrielfalcao/unclebob[gabrielfalcao/unclebob] - 這裡提到 `tests/unit` 與 `tests/functional` 的用法。
--

