= link:programming.html[Python / Programming] / Nested Functions =
:title: [Python] Nested Functions

--------------------------------------------------------------------------------
>>> def say_hello(tag, who='World'):
...     def say_hello(who=who):
...         print '[%s] Hello %s!' % (tag, who)
...     return say_hello
... 
>>> jhello = say_hello('JAVA')
>>> phello = say_hello('PYTHON')
>>>
>>> jhello()
[JAVA] Hello World!
>>> phello()
[PYTHON] Hello World!
>>> jhello('Java')
[JAVA] Hello Java!
>>> phello('Python')
[PYTHON] Hello Python!
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
def main():

    def mod(dividend, divisor):
        remainder = dividend % divisor
        quotient = (dividend - remainder) / divisor
        return quotient, remainder
    print [mod(i, 2) for i in range(1, 11)]

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

執行結果如下：

 [(0, 1), (1, 0), (1, 1), (2, 0), (2, 1), (3, 0), (3, 1), (4, 0), (4, 1), (5, 0)]

這是 `lambda` 辦不到的...

== 參考資料 ==

 * http://marakana.com/bookshelf/python_fundamentals_tutorial/functional_programming.html[Python Fundamentals Tutorial : Functional Programming - Marakana]
 * http://stackoverflow.com/questions/1589058/nested-function-in-python[Nested Function in Python - Stack Overflow] (2009-10-19)
 * http://docs.python.org/reference/compound_stmts.html[The Python Language Reference > Compound statements] - 裡頭有這麼一段話：Functions are first-class objects. A “def” form executed inside a function definition defines a local function that can be returned or passed around. Free variables used in the nested function can access the local variables of the function containing the def. See section Naming and binding for details.

