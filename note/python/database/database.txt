= link:../python.html[Python] / Database Programming =
:title: [Python] Database Programming

就像 Java 定義有 JDBC (Java Database Connectivity) 的標準，其他人可以依據這個標準介面開發出不同資料庫的 JDBC Drivers。隨著時間的演進，自然在 JDBC 的基礎上發展出不同的 ORM Solutions (例如 Hibernate、iBATIS 等)。

在 Python 的世界裡也有類似的發展；官方定義有 DB-API 2.0 (PEP 249)，資料庫存取套件 (例如 link:../../mysql-python/mysql-python.html[MySQLdb] 或 Standard Library 裡的 `sqlite3`) 就會提供符合 DB-API 要求的存取介面。當然，在 DB-API 的基礎上也發展出了 Python 自己的 ORM Solutions (例如 link:../../sqlalchemy/sqlalchemy.html[SQLAlchemy] 等)。

== 參考資料 ==

 * http://www.python.org/dev/peps/pep-0249/[PEP 249 -- Python Database API Specification v2.0] ^https://diigo.com/0xwhc[閱讀]^

////////////////////////////////////////////////////////////////////////////////

== 從 SQLite 開始 ==

SQLite 3 支援 Transaction, 可以用來認識 DB-API 2.0

最基本的操作

 1. 取得 Connection
 2. 透過 Connection 的 .cursor() 取得 Cursor 物件
 3. 透過 Cursor 執行 Command 或 Query
 4. 透過 .fetch*() 取回執行結果
 5. close...

////////////////////////////////////////////////////////////////////////////////

