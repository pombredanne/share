= Python / Official / Python Setup =
http://docs.python.org/using/index.html
<<TableOfContents>>

== 3. Using Python on Windows ==
http://docs.python.org/using/windows.html @2010/09/21

This document aims to give an overview of Windows-specific behaviour you should know about when using Python on Microsoft Windows.

:::

=== 3.4. Additional modules ===

__Even though Python aims to be portable among all platforms, there are features that are unique to Windows.__ A couple of modules, both in the standard library and external, and snippets exist to use these features.

The Windows-specific standard modules are documented in MS Windows Specific Services.

==== 3.4.1. PyWin32 ====

The PyWin32 module by Mark Hammond is a collection of modules for advanced Windows-specific support. This includes utilities for:

 * Component Object Model (COM)
 * Win32 API calls
 * Registry
 * Event log
 * Microsoft Foundation Classes (MFC) user interfaces

PythonWin is a sample MFC application shipped with PyWin32. It is an embeddable IDE with a built-in debugger.

See also:

 * Win32 How Do I...? by Tim Golden
 * Python and COM by David and Paul Boddie

:::

