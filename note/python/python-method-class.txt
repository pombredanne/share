= link:python.html[Python] / link:python-method.html[Methods] / Class/Static =
:title [Python] Class/Static Methods

== 參考資料 ==

 * http://dirtsimple.org/2004/12/python-is-not-java.html[Python Is Not Java (dirtSimple.org)] (2004-12-02)

////////////////////////////////////////////////////////////////////////////////

Static and Class Methods [2.2]
    As of Python 2.2, it is possible to define two kinds of methods within a class that can be called without an instance: ''static methods'' work roughly like simple instance-less functions inside a class, and ''class methods'' are passed a class instead of an instance.
    注意 Static Method 與 Class Method 並非互通的名詞, 雖然概念上有點類似 - 相對於 Instance Method 的說法. 其中 Class Method 相對比較少用, 但兩者都可以透過 Class 或 Instance 呼叫.
    Why the special methods?
        ... simple functions coded outside a class can often suffice—because they can access class attributes through the class name, they have access to class data and never require access to an instance.
        However, to better associate such code with a class, and to allow such processing to be customized with inheritance as usual, it would be better to code these types of functions inside the class itself.
    To make this work, we need methods in a class that are not passed, and do not expect, a `self` instance argument.
        To enable these method modes, special built-in functions called `staticmethod` and `classmethod` must be called within the class, or invoked with the ''decoration syntax''.
        In Python 3.0, instance-less methods called only through a class name do not require a staticmethod declaration, but such methods called through instances do. (怎麼知道 Caller 會從 Class 或 Instance 呼叫?)
    Static Methods
        Python supports such goals with the notion of static methods—simple functions with no `self` argument that are nested in a class and are designed to work on class attributes instead of instance attributes. Static methods never receive an automatic `self` argument, whether called through a class or an instance.
        class FooBar:

    def foo(arg):
        pass

    # 左側的變數名稱最好原來的 function 名稱一樣，否則 IDE 會報錯 foo() 要有 self 做第一個參數
    foo = staticmethod(foo)

    def bar(cls, arg):
        pass

    bar = classmethod(bar)    
    Class Methods
        Although less commonly used, Python also supports the notion of class methods— methods of a class that are passed a class object in their first argument instead of an instance (習慣將它命名成 `cls`, 比較不會混淆), regardless of whether they are called through an instance or a class.

////////////////////////////////////////////////////////////////////////////////

