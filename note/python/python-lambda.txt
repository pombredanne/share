= Python Programming: Lambda Expressions =

Lambda expression 源自 link:../functional-programming/index.html[Functional Programming]，它的語法是：

 lambda [parameter_list]: expression

可以快速產生一個 small anonymous function，而且做為一個語法上的甜頭（syntatic sugar），用起來跟 `def` 定義出來的 function 沒有不同，就像是：

 def xxx([parameter_list]):
     return expression

最大的不同，就是它肚子裡只能放一個簡單的 expression。例如：

--------------------------------------------------------------------------------
>>> greeting = 'Hello'
>>> greet = lambda who=None: ('%s, %s' % (greeting, who)) if who else greeting <1>
>>> greet(), greet('Jeremy')
('Hello', 'Hello, Jeremy')
>>>
>>> type(greet), greet.__name__ <2>
(<type 'greetction'>, '<lambda>')
>>>
>>> greeting = 'Hi' <3>
>>> greet(), greet('Jeremy')
('Hi', 'Hi, Jeremy')
--------------------------------------------------------------------------------
<1> 這裡的 `who=None` 就是 'parameter_list'，跟 `def` 一樣也支援 optional parameter、keyword arguments 等。
<2> lambda exression 的運算結果是個 function，只是沒有名字而已。
<3> 跟 nested function 一樣，lambda 內部的 'expression' 也可以存取外圍（containing scope）的變數。

== 參考資料 ==

.官方文件
--
 * http://docs.python.org/reference/expressions.html#lambda[Expressions > Lambdas — The Python Language Reference]
 * http://docs.python.org/tutorial/controlflow.html#lambda-forms[More Control Flow Tools > Lambda Forms — The Python Tutorial]
--

.其他文件
--
 * http://www.blog.pythonlibrary.org/2010/07/19/the-python-lambda/[The Python Lambda « The Mouse Vs. The Python] (2010-07-19)
 * http://pythonconquerstheuniverse.wordpress.com/2011/08/29/lambda_tutorial/[Yet Another Lambda Tutorial « Python Conquers The Universe] (2011-08-29)
--

