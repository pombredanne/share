= link:recipes.html[JMeter / Recipes] / Extracting JSON Data =
:title: [JMeter] Extracting JSON Data



 * https://code.google.com/p/jmeter-plugins/wiki/JSONPathExtractor[JSONPathExtractor - jmeter-plugins]
 * http://ubikloadpack.com/[Ubik Load Pack] (proprietary)

== 延伸閱讀 ==

 * link:../performance-tips.html[Performance Tips]

== 參考資料 ==

 * http://shantonusarker.blogspot.tw/2013/05/introduction-to-jmeter-google-plugin_9.html[Introduction to JMeter Google PlugIn- Post Processors |A Test Developer's blog] (2013-05-30)
 * http://www.ubik-ingenierie.com/blog/extract-json-content-efficiently-with-jmeter-using-json-path-syntax-with-ubik-load-pack/[Extract JSON content efficiently with JMeter using JSON PATH syntax with UBIK-LOAD-PACK | UBIK LOAD PACK Blog] ^https://diigo.com/0zsfe[閱讀]^ (2013-01-28)

////////////////////////////////////////////////////////////////////////////////
** Of course you can still extract content with core JMeter using Regular Expression Extractor but this becomes quite tedious, inefficient if not impossible when you have a lot of JSON elements with same attribute names.
** BeanShell and a JSON library => DRAWBACK : Lot of Beanshell code to write and impact on JMeter performances. 所以就算找到了 Java library 可以做 JSONPath，效率上還是不可行。
** http://goessner.net/articles/JsonPath/
** Adds a JSON Path Expression tester which helps you test and debug your JSON path expressions ... 很貼心的設計
** Store in firstAuthor variable the extraction result if found If not found, firstAuthor will contain NV_firstAuthor
** To improve performance and reduce code, Post-Processor allows extracting many variables in one shot, ULP_JSON PostProcessor changes to:
** As you can see, the ULP_JSON PostProcessor has automatically created the necessary variables for each result found using the same behaviour as Core Regular Expression Extractor, so we have in JMeter Variables context:
** without Performance compromise as our implementation is one of the fastest of the market
////////////////////////////////////////////////////////////////////////////////

